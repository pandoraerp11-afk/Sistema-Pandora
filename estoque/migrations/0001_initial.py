# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('obras', '0001_initial'),
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('descricao', models.CharField(max_length=100)),
                ('fator_base', models.DecimalField(decimal_places=6, default=1, max_digits=12)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Unidade de Medida',
                'verbose_name_plural': 'Unidades de Medida',
            },
        ),
        migrations.CreateModel(
            name='Deposito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True)),
                ('nome', models.CharField(max_length=120)),
                ('tipo', models.CharField(choices=[('ALMOX', 'Almoxarifado'), ('TRANSITO', 'Trânsito'), ('OBRA', 'Obra')], default='ALMOX', max_length=15)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('obra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='depositos', to='obras.obra')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_depositos', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Depósito',
                'verbose_name_plural': 'Depósitos',
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=40)),
                ('validade', models.DateField(blank=True, null=True)),
                ('quantidade_atual', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('quantidade_reservada', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('deposito', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_lotes', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='MovimentoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SAIDA', 'Saída'), ('AJUSTE_POS', 'Ajuste Positivo'), ('AJUSTE_NEG', 'Ajuste Negativo'), ('TRANSFER', 'Transferência'), ('RESERVA', 'Reserva'), ('LIB_RESERVA', 'Liberação de Reserva'), ('CONSUMO_BOM', 'Consumo BOM'), ('DESCARTE', 'Descarte'), ('PERDA', 'Perda'), ('VENCIMENTO', 'Baixa por Vencimento'), ('DEVOLUCAO_CLIENTE', 'Devolução Cliente'), ('DEVOLUCAO_FORNECEDOR', 'Devolução Fornecedor')], max_length=20)),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=14)),
                ('custo_unitario_snapshot', models.DecimalField(decimal_places=6, default=0, max_digits=14)),
                ('solicitante_tipo', models.CharField(blank=True, max_length=30, null=True)),
                ('solicitante_id', models.CharField(blank=True, max_length=50, null=True)),
                ('solicitante_nome_cache', models.CharField(blank=True, max_length=150, null=True)),
                ('ref_externa', models.CharField(blank=True, max_length=80, null=True)),
                ('motivo', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('aprovacao_status', models.CharField(default='APROVADO', max_length=15)),
                ('aplicado', models.BooleanField(default=True)),
                ('aplicado_em', models.DateTimeField(blank=True, null=True)),
                ('valor_estimado', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('deposito_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimentos_entrada', to='estoque.deposito')),
                ('deposito_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimentos_saida', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movimentos', to='produtos.produto')),
                ('reverso_de', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentos_reversos', to='estoque.movimentoestoque')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_movimentos', to='core.tenant')),
                ('usuario_executante', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentos_executados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Movimento de Estoque',
                'verbose_name_plural': 'Movimentos de Estoque',
                'ordering': ['-criado_em'],
                'permissions': [('pode_aprovar_movimento', 'Pode aprovar/rejeitar movimentos de estoque sensíveis'), ('pode_operar_movimento', 'Pode executar operações de entrada/saída/transferência'), ('pode_consumir_bom', 'Pode registrar consumo de BOM'), ('pode_gerenciar_reabastecimento', 'Pode criar/alterar regras de reabastecimento'), ('pode_gerenciar_inventario_ciclico', 'Pode criar/alterar inventários cíclicos'), ('pode_gerenciar_picking', 'Pode criar e operar pedidos de separação')],
            },
        ),
        migrations.CreateModel(
            name='LogAuditoriaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_antes', models.JSONField(blank=True, null=True)),
                ('snapshot_depois', models.JSONField(blank=True, null=True)),
                ('hash_previo', models.CharField(blank=True, max_length=128, null=True)),
                ('hash_atual', models.CharField(blank=True, max_length=128, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_logs_auditoria', to='core.tenant')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs_estoque', to=settings.AUTH_USER_MODEL)),
                ('movimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='estoque.movimentoestoque')),
            ],
            options={
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='MovimentoEvidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='estoque/movimentos/evidencias/')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('movimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='estoque.movimentoestoque')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_movimento_evidencias', to='core.tenant')),
            ],
            options={
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='MovimentoLote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=14)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movimentos', to='estoque.lote')),
                ('movimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes_movimentados', to='estoque.movimentoestoque')),
            ],
        ),
        migrations.CreateModel(
            name='NumeroSerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=80, unique=True)),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('MOVIMENTADO', 'Movimentado'), ('BAIXADO', 'Baixado')], default='ATIVO', max_length=15)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('deposito_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='numeros_serie', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numeros_serie', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_numeros_serie', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='MovimentoNumeroSerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('movimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numeros_serie_movimentados', to='estoque.movimentoestoque')),
                ('numero_serie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movimentos', to='estoque.numeroserie')),
            ],
        ),
        migrations.CreateModel(
            name='PedidoSeparacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('solicitante_tipo', models.CharField(max_length=30)),
                ('solicitante_id', models.CharField(max_length=60)),
                ('solicitante_nome_cache', models.CharField(max_length=150)),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10)),
                ('status', models.CharField(choices=[('ABERTO', 'Aberto'), ('EM_PREPARACAO', 'Em Preparação'), ('PRONTO', 'Pronto'), ('RETIRADO', 'Retirado'), ('CANCELADO', 'Cancelado'), ('EXPIRADO', 'Expirado')], default='ABERTO', max_length=15)),
                ('data_limite', models.DateTimeField(blank=True, null=True)),
                ('itens_totais', models.PositiveIntegerField(default=0)),
                ('itens_pendentes', models.PositiveIntegerField(default=0)),
                ('itens_separados', models.PositiveIntegerField(default=0)),
                ('permitir_retirada_parcial', models.BooleanField(default=False)),
                ('canal_origem', models.CharField(default='PORTAL', max_length=20)),
                ('motivo_cancelamento', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('inicio_preparo', models.DateTimeField(blank=True, null=True)),
                ('pronto_em', models.DateTimeField(blank=True, null=True)),
                ('retirado_em', models.DateTimeField(blank=True, null=True)),
                ('criado_por_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_criados', to=settings.AUTH_USER_MODEL)),
                ('operador_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_assumidos', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_pedidos_separacao', to='core.tenant')),
            ],
            options={
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='PedidoSeparacaoMensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor_tipo', models.CharField(blank=True, max_length=30, null=True)),
                ('autor_id', models.CharField(blank=True, max_length=60, null=True)),
                ('texto', models.TextField()),
                ('importante', models.BooleanField(default=False)),
                ('anexos_count', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('autor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens', to='estoque.pedidoseparacao')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_pedidos_separacao_mensagens', to='core.tenant')),
            ],
            options={
                'ordering': ['criado_em'],
            },
        ),
        migrations.CreateModel(
            name='PedidoSeparacaoAnexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='pedidos_separacao/anexos/')),
                ('nome_original', models.CharField(max_length=255)),
                ('tamanho_bytes', models.BigIntegerField()),
                ('tipo_mime', models.CharField(max_length=120)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_pedidos_separacao_anexos', to='core.tenant')),
                ('mensagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='estoque.pedidoseparacaomensagem')),
            ],
        ),
        migrations.CreateModel(
            name='RegraReabastecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estoque_min', models.DecimalField(decimal_places=4, max_digits=14)),
                ('estoque_max', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('lote_economico', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('lead_time_dias', models.PositiveIntegerField(default=0)),
                ('estrategia', models.CharField(choices=[('FIXO', 'Fixo'), ('MEDIA_CONSUMO', 'Média Consumo'), ('FORECAST', 'Forecast')], default='FIXO', max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('deposito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regras_reabastecimento', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regras_reabastecimento', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_regras_reabastecimento', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='ReservaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=14)),
                ('origem_tipo', models.CharField(max_length=30)),
                ('origem_id', models.CharField(blank=True, max_length=60, null=True)),
                ('status', models.CharField(default='ATIVA', max_length=15)),
                ('expira_em', models.DateTimeField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('deposito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_reservas', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='PedidoSeparacaoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_solicitada', models.DecimalField(decimal_places=4, max_digits=14)),
                ('quantidade_separada', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('observacao', models.CharField(blank=True, max_length=255, null=True)),
                ('status_item', models.CharField(choices=[('PENDENTE', 'Pendente'), ('SEPARADO', 'Separado'), ('INDISPONIVEL', 'Indisponível'), ('PARCIAL', 'Parcial'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=15)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('deposito', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens_picking', to='estoque.deposito')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='estoque.pedidoseparacao')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_pedidos_separacao_itens', to='core.tenant')),
                ('reserva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens_picking', to='estoque.reservaestoque')),
                ('unidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='estoque.unidade')),
            ],
        ),
        migrations.CreateModel(
            name='CamadaCusto',
            fields=[
                ('quantidade_restante', models.DecimalField(decimal_places=4, max_digits=14)),
                ('custo_unitario', models.DecimalField(decimal_places=6, max_digits=14)),
                ('ordem', models.BigAutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camadas_custo', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_camadas_custo', to='core.tenant')),
                ('deposito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camadas_custo', to='estoque.deposito')),
            ],
            options={
                'ordering': ['ordem'],
                'indexes': [models.Index(fields=['produto', 'deposito'], name='estoque_cam_produto_194b50_idx')],
            },
        ),
        migrations.CreateModel(
            name='EstoqueSaldo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('reservado', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('custo_medio', models.DecimalField(decimal_places=6, default=0, max_digits=14)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('deposito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saldos', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saldos', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_saldos', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Saldo de Estoque',
                'verbose_name_plural': 'Saldos de Estoque',
                'unique_together': {('produto', 'deposito')},
            },
        ),
        migrations.CreateModel(
            name='InventarioCiclico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicidade_dias', models.PositiveIntegerField(default=30)),
                ('ultima_contagem', models.DateTimeField(blank=True, null=True)),
                ('proxima_contagem', models.DateTimeField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('deposito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventarios_ciclicos', to='estoque.deposito')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventarios_ciclicos', to='produtos.produto')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque_inventarios_ciclicos', to='core.tenant')),
            ],
            options={
                'indexes': [models.Index(fields=['proxima_contagem'], name='estoque_inv_proxima_088035_idx'), models.Index(fields=['ativo'], name='estoque_inv_ativo_e35000_idx')],
                'unique_together': {('produto', 'deposito')},
            },
        ),
        migrations.AddIndex(
            model_name='lote',
            index=models.Index(fields=['codigo'], name='estoque_lot_codigo_b32dff_idx'),
        ),
        migrations.AddIndex(
            model_name='lote',
            index=models.Index(fields=['validade'], name='estoque_lot_validad_4a1ea3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lote',
            unique_together={('produto', 'codigo')},
        ),
        migrations.AddIndex(
            model_name='movimentoestoque',
            index=models.Index(fields=['produto', 'criado_em'], name='estoque_mov_produto_fc20f8_idx'),
        ),
        migrations.AddIndex(
            model_name='movimentoestoque',
            index=models.Index(fields=['tipo'], name='estoque_mov_tipo_4a4769_idx'),
        ),
        migrations.AddIndex(
            model_name='movimentoestoque',
            index=models.Index(fields=['solicitante_tipo', 'solicitante_id'], name='estoque_mov_solicit_0c802f_idx'),
        ),
        migrations.AddIndex(
            model_name='movimentoestoque',
            index=models.Index(fields=['aprovacao_status'], name='estoque_mov_aprovac_265c9e_idx'),
        ),
        migrations.AddIndex(
            model_name='movimentolote',
            index=models.Index(fields=['lote'], name='estoque_mov_lote_id_3eac1f_idx'),
        ),
        migrations.AddIndex(
            model_name='numeroserie',
            index=models.Index(fields=['status'], name='estoque_num_status_21f9fe_idx'),
        ),
        migrations.AddIndex(
            model_name='movimentonumeroserie',
            index=models.Index(fields=['numero_serie'], name='estoque_mov_numero__e02877_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidoseparacao',
            index=models.Index(fields=['status', 'prioridade'], name='estoque_ped_status_cf7b62_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidoseparacao',
            index=models.Index(fields=['data_limite'], name='estoque_ped_data_li_13f08b_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidoseparacao',
            index=models.Index(fields=['solicitante_tipo', 'solicitante_id'], name='estoque_ped_solicit_5e6787_idx'),
        ),
        migrations.AddIndex(
            model_name='regrareabastecimento',
            index=models.Index(fields=['ativo'], name='estoque_reg_ativo_7c6e11_idx'),
        ),
        migrations.AddIndex(
            model_name='regrareabastecimento',
            index=models.Index(fields=['produto', 'deposito'], name='estoque_reg_produto_b37e19_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='regrareabastecimento',
            unique_together={('produto', 'deposito')},
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['produto', 'deposito'], name='estoque_res_produto_e4ffe6_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['status'], name='estoque_res_status_d351c6_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['expira_em'], name='estoque_res_expira__db90da_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidoseparacaoitem',
            index=models.Index(fields=['status_item'], name='estoque_ped_status__c11b94_idx'),
        ),
    ]
