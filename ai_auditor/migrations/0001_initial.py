# Generated by Django 5.1.5 on 2025-08-14 21:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIAuditorSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('auto_fix_enabled', models.BooleanField(default=False)),
                ('auto_test_generation', models.BooleanField(default=True)),
                ('excluded_apps', models.JSONField(blank=True, default=list)),
                ('analysis_schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('critical_threshold', models.IntegerField(default=10)),
            ],
            options={
                'verbose_name': 'Configurações do Agente IA',
                'verbose_name_plural': 'Configurações do Agente IA',
            },
        ),
        migrations.CreateModel(
            name='AuditSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('status', models.CharField(choices=[('running', 'Em Execução'), ('completed', 'Concluída'), ('failed', 'Falhou'), ('cancelled', 'Cancelada')], default='running', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_files_analyzed', models.IntegerField(default=0)),
                ('total_issues', models.IntegerField(default=0)),
                ('critical_issues', models.IntegerField(default=0)),
                ('high_issues', models.IntegerField(default=0)),
                ('medium_issues', models.IntegerField(default=0)),
                ('low_issues', models.IntegerField(default=0)),
                ('tests_generated', models.IntegerField(default=0)),
                ('fixes_applied', models.IntegerField(default=0)),
                ('analysis_config', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sessão de Auditoria',
                'verbose_name_plural': 'Sessões de Auditoria',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='CodeIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('app_name', models.CharField(max_length=100)),
                ('file_path', models.CharField(max_length=500)),
                ('line_number', models.IntegerField(blank=True, null=True)),
                ('column_number', models.IntegerField(blank=True, null=True)),
                ('issue_type', models.CharField(choices=[('security', 'Segurança'), ('performance', 'Performance'), ('quality', 'Qualidade'), ('documentation', 'Documentação'), ('testing', 'Testes'), ('style', 'Estilo'), ('complexity', 'Complexidade'), ('duplication', 'Duplicação')], max_length=50)),
                ('severity', models.CharField(choices=[('critical', 'Crítico'), ('high', 'Alto'), ('medium', 'Médio'), ('low', 'Baixo')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Aberto'), ('in_progress', 'Em Andamento'), ('fixed', 'Corrigido'), ('ignored', 'Ignorado'), ('false_positive', 'Falso Positivo')], default='open', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('recommendation', models.TextField()),
                ('code_snippet', models.TextField(blank=True, null=True)),
                ('suggested_fix', models.TextField(blank=True, null=True)),
                ('auto_fixable', models.BooleanField(default=False)),
                ('fixed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Problema de Código',
                'verbose_name_plural': 'Problemas de Código',
                'ordering': ['-severity', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('app_name', models.CharField(max_length=100)),
                ('model_name', models.CharField(blank=True, max_length=100, null=True)),
                ('test_type', models.CharField(choices=[('model', 'Teste de Model'), ('view', 'Teste de View'), ('form', 'Teste de Form'), ('api', 'Teste de API'), ('integration', 'Teste de Integração')], max_length=20)),
                ('test_file_path', models.CharField(max_length=500)),
                ('test_code', models.TextField()),
                ('is_applied', models.BooleanField(default=False)),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Teste Gerado',
                'verbose_name_plural': 'Testes Gerados',
            },
        ),
    ]
