# Generated by Django 5.2.5 on 2025-08-22 11:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0002_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data_inicio', models.DateTimeField()),
                ('data_fim', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('CONFIRMADO', 'Confirmado'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDO', 'Concluído'), ('CANCELADO', 'Cancelado'), ('REAGENDADO', 'Reagendado'), ('NO_SHOW', 'Não Compareceu')], default='PENDENTE', max_length=20)),
                ('origem', models.CharField(choices=[('CLIENTE', 'Cliente'), ('PROFISSIONAL', 'Profissional'), ('OPERADOR', 'Operador'), ('SISTEMA', 'Sistema')], default='OPERADOR', max_length=15)),
                ('tipo_servico', models.CharField(blank=True, max_length=100, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='clientes.cliente')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_profissional', to=settings.AUTH_USER_MODEL)),
                ('referencia_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reagendamentos', to='agendamentos.agendamento')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
            },
        ),
        migrations.CreateModel(
            name='AuditoriaAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('tipo_evento', models.CharField(max_length=30)),
                ('de_status', models.CharField(blank=True, max_length=20, null=True)),
                ('para_status', models.CharField(blank=True, max_length=20, null=True)),
                ('motivo', models.TextField(blank=True, null=True)),
                ('diff', models.JSONField(blank=True, null=True)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auditoria', to='agendamentos.agendamento')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Auditoria de Agendamento',
                'verbose_name_plural': 'Auditorias de Agendamento',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Disponibilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('duracao_slot_minutos', models.PositiveIntegerField(default=30)),
                ('capacidade_por_slot', models.PositiveIntegerField(default=1)),
                ('recorrente', models.BooleanField(default=False)),
                ('regra_recorrencia', models.CharField(blank=True, max_length=50, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidades', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidades', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Disponibilidade',
                'verbose_name_plural': 'Disponibilidades',
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('horario', models.DateTimeField()),
                ('capacidade_total', models.PositiveIntegerField(default=1)),
                ('capacidade_utilizada', models.PositiveIntegerField(default=0)),
                ('ativo', models.BooleanField(default=True)),
                ('disponibilidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='agendamentos.disponibilidade')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Slot',
                'verbose_name_plural': 'Slots',
                'ordering': ['horario'],
            },
        ),
        migrations.AddField(
            model_name='agendamento',
            name='slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos', to='agendamentos.slot'),
        ),
        migrations.AddConstraint(
            model_name='disponibilidade',
            constraint=models.UniqueConstraint(fields=('tenant', 'profissional', 'data', 'hora_inicio', 'hora_fim'), name='unique_disp_intervalo_prof'),
        ),
        migrations.AddConstraint(
            model_name='slot',
            constraint=models.UniqueConstraint(fields=('profissional', 'horario'), name='unique_slot_prof_horario'),
        ),
        migrations.AddIndex(
            model_name='agendamento',
            index=models.Index(fields=['tenant', 'profissional', 'data_inicio'], name='agendamento_tenant__73a518_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamento',
            index=models.Index(fields=['tenant', 'cliente', 'data_inicio'], name='agendamento_tenant__8d4da4_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamento',
            index=models.Index(fields=['tenant', 'status'], name='agendamento_tenant__54cdf0_idx'),
        ),
    ]
