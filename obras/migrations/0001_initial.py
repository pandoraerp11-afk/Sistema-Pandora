# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.core.validators
import django.db.models.deletion
import obras.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Obra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Obra')),
                ('tipo_obra', models.CharField(choices=[('construcao', 'Construção Nova'), ('reforma', 'Reforma'), ('manutencao', 'Manutenção'), ('ampliacao', 'Ampliação'), ('demolicao', 'Demolição'), ('loteamento', 'Loteamento')], default='construcao', max_length=20, verbose_name='Tipo de Obra')),
                ('cno', models.CharField(blank=True, help_text='Cadastro Nacional de Obras, se aplicável.', max_length=20, null=True, unique=True, verbose_name='CNO (Cadastro Nacional de Obras)')),
                ('endereco', models.TextField(verbose_name='Endereço')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_previsao_termino', models.DateField(verbose_name='Previsão de Término')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data de Término Real')),
                ('valor_contrato', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor do Contrato (Principal)')),
                ('valor_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='Custo Total Estimado da Obra')),
                ('status', models.CharField(choices=[('planejamento', 'Planejamento'), ('em_andamento', 'Em Andamento'), ('pausada', 'Pausada'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='planejamento', max_length=20, verbose_name='Status da Obra')),
                ('progresso', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progresso (%)')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Gerais')),
                ('cliente', models.ForeignKey(blank=True, help_text='Cliente principal ou contratante. Deixe em branco se for uma obra da própria construtora.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obras_principais', to='clientes.cliente', verbose_name='Cliente Principal (Contratante)')),
            ],
            options={
                'verbose_name': 'Obra',
                'verbose_name_plural': 'Obras',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ModeloUnidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Ex.: 01, 02, 03, 04', max_length=20, verbose_name='Código')),
                ('nome', models.CharField(help_text='Ex.: Apto Tipo 01', max_length=100, verbose_name='Nome do Modelo')),
                ('tipo_unidade', models.CharField(choices=[('apartamento', 'Apartamento'), ('sala_comercial', 'Sala Comercial'), ('casa', 'Casa'), ('lote', 'Lote'), ('andar', 'Andar Corporativo'), ('loja', 'Loja')], default='apartamento', max_length=20, verbose_name='Tipo')),
                ('dormitorios', models.PositiveSmallIntegerField(default=0, verbose_name='Dormitórios')),
                ('suites', models.PositiveSmallIntegerField(default=0, verbose_name='Suítes')),
                ('banheiros', models.PositiveSmallIntegerField(default=1, verbose_name='Banheiros')),
                ('vagas', models.PositiveSmallIntegerField(default=0, verbose_name='Vagas de Garagem')),
                ('area_privativa', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área Privativa (m²)')),
                ('area_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área Total (m²)')),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Preço Sugerido')),
                ('ambientes', models.JSONField(blank=True, default=list, help_text='Lista de ambientes com nome e área. Ex.: [{"nome":"Sala","area":20}]', verbose_name='Ambientes')),
                ('obra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modelos', to='obras.obra', verbose_name='Obra')),
            ],
            options={
                'verbose_name': 'Modelo de Unidade',
                'verbose_name_plural': 'Modelos de Unidade',
                'ordering': ['codigo'],
                'unique_together': {('obra', 'codigo')},
            },
        ),
        migrations.CreateModel(
            name='DocumentoObra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição do Documento')),
                ('arquivo', models.FileField(upload_to=obras.models.get_documento_upload_path, verbose_name='Arquivo')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('categoria', models.CharField(choices=[('projeto', 'Projeto'), ('licenca', 'Licença / Alvará'), ('contrato', 'Contrato'), ('orcamento', 'Orçamento'), ('memorial', 'Memorial Descritivo'), ('foto', 'Foto de Andamento'), ('outro', 'Outro')], default='outro', max_length=20, verbose_name='Categoria')),
                ('obra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='obras.obra', verbose_name='Obra')),
            ],
            options={
                'verbose_name': 'Documento da Obra',
                'verbose_name_plural': 'Documentos da Obra',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloco', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bloco/Torre')),
                ('andar', models.IntegerField(blank=True, null=True, verbose_name='Andar')),
                ('numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('identificador', models.CharField(help_text='Ex: Apartamento 101, Lote 15, Sala 302', max_length=100, verbose_name='Identificador da Unidade')),
                ('tipo_unidade', models.CharField(choices=[('apartamento', 'Apartamento'), ('sala_comercial', 'Sala Comercial'), ('casa', 'Casa'), ('lote', 'Lote'), ('andar', 'Andar Corporativo'), ('loja', 'Loja')], max_length=20, verbose_name='Tipo de Unidade')),
                ('area_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área (m²)')),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('reservado', 'Reservado'), ('vendido', 'Vendido')], default='disponivel', max_length=20, verbose_name='Status da Unidade')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unidades_adquiridas', to='clientes.cliente', verbose_name='Cliente (Proprietário da Unidade)')),
                ('modelo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unidades', to='obras.modelounidade', verbose_name='Modelo')),
                ('obra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades', to='obras.obra', verbose_name='Obra')),
            ],
            options={
                'verbose_name': 'Unidade da Obra',
                'verbose_name_plural': 'Unidades da Obra',
                'ordering': ['identificador'],
                'unique_together': {('obra', 'identificador')},
            },
        ),
    ]
