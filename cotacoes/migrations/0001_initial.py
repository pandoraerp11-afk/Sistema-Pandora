# Generated by Django 5.2.5 on 2025-08-20 14:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('fornecedores', '0002_add_portal_fields'),
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cotacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('codigo', models.CharField(help_text='Código único da cotação', max_length=50, verbose_name='Código')),
                ('titulo', models.CharField(help_text='Título descritivo da cotação', max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(help_text='Descrição detalhada da cotação', verbose_name='Descrição')),
                ('status', models.CharField(choices=[('aberta', 'Aberta'), ('aguardando_decisao', 'Aguardando Decisão'), ('encerrada', 'Encerrada'), ('cancelada', 'Cancelada')], default='aberta', max_length=20, verbose_name='Status')),
                ('data_abertura', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Abertura')),
                ('data_encerramento', models.DateTimeField(blank=True, null=True, verbose_name='Data de Encerramento')),
                ('prazo_proposta', models.DateTimeField(help_text='Data limite para recebimento de propostas', verbose_name='Prazo para Propostas')),
                ('observacoes_internas', models.TextField(blank=True, help_text='Observações visíveis apenas internamente', verbose_name='Observações Internas')),
                ('valor_estimado', models.DecimalField(blank=True, decimal_places=2, help_text='Valor estimado total da cotação', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Estimado')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cotacoes_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('tenant', models.ForeignKey(help_text='Empresa que criou a cotação', on_delete=django.db.models.deletion.CASCADE, to='core.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Cotação',
                'verbose_name_plural': 'Cotações',
                'db_table': 'cotacoes_cotacao',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CotacaoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('descricao', models.CharField(help_text='Descrição do item solicitado', max_length=500, verbose_name='Descrição')),
                ('especificacao', models.TextField(blank=True, help_text='Especificações técnicas detalhadas', verbose_name='Especificação')),
                ('quantidade', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Quantidade')),
                ('unidade', models.CharField(help_text='Ex: UN, KG, M2, etc.', max_length=10, verbose_name='Unidade')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição do item', verbose_name='Ordem')),
                ('cotacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='cotacoes.cotacao', verbose_name='Cotação')),
                ('produto', models.ForeignKey(blank=True, help_text='Produto do catálogo (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='produtos.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Item da Cotação',
                'verbose_name_plural': 'Itens da Cotação',
                'db_table': 'cotacoes_cotacao_item',
                'ordering': ['ordem', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropostaFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('enviada', 'Enviada'), ('selecionada', 'Selecionada'), ('recusada', 'Recusada')], default='rascunho', max_length=15, verbose_name='Status')),
                ('enviado_em', models.DateTimeField(blank=True, null=True, verbose_name='Enviado em')),
                ('total_estimado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Estimado')),
                ('validade_proposta', models.DateField(help_text='Data até quando a proposta é válida', verbose_name='Validade da Proposta')),
                ('prazo_entrega_geral', models.PositiveIntegerField(blank=True, help_text='Prazo geral de entrega em dias', null=True, verbose_name='Prazo de Entrega Geral (dias)')),
                ('observacao', models.TextField(blank=True, help_text='Observações e condições da proposta', verbose_name='Observações')),
                ('condicoes_pagamento', models.CharField(blank=True, max_length=200, verbose_name='Condições de Pagamento')),
                ('cotacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propostas', to='cotacoes.cotacao', verbose_name='Cotação')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propostas', to='fornecedores.fornecedor', verbose_name='Fornecedor')),
                ('usuario', models.ForeignKey(help_text='Usuário que criou/enviou a proposta', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Proposta de Fornecedor',
                'verbose_name_plural': 'Propostas de Fornecedores',
                'db_table': 'cotacoes_proposta_fornecedor',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropostaFornecedorItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('preco_unitario', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))], verbose_name='Preço Unitário')),
                ('prazo_entrega_dias', models.PositiveIntegerField(help_text='Prazo específico para este item', verbose_name='Prazo de Entrega (dias)')),
                ('observacao_item', models.TextField(blank=True, help_text='Observações específicas deste item', verbose_name='Observação do Item')),
                ('disponibilidade', models.CharField(blank=True, help_text='Informações sobre disponibilidade do item', max_length=100, verbose_name='Disponibilidade')),
                ('item_cotacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cotacoes.cotacaoitem', verbose_name='Item da Cotação')),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='cotacoes.propostafornecedor', verbose_name='Proposta')),
            ],
            options={
                'verbose_name': 'Item da Proposta',
                'verbose_name_plural': 'Itens da Proposta',
                'db_table': 'cotacoes_proposta_fornecedor_item',
                'ordering': ['item_cotacao__ordem'],
            },
        ),
        migrations.AddIndex(
            model_name='cotacao',
            index=models.Index(fields=['tenant', 'status'], name='cotacoes_co_tenant__89806e_idx'),
        ),
        migrations.AddIndex(
            model_name='cotacao',
            index=models.Index(fields=['tenant', 'data_abertura'], name='cotacoes_co_tenant__e9ec35_idx'),
        ),
        migrations.AddIndex(
            model_name='cotacao',
            index=models.Index(fields=['status', 'prazo_proposta'], name='cotacoes_co_status_ec9d06_idx'),
        ),
        migrations.AddConstraint(
            model_name='cotacao',
            constraint=models.UniqueConstraint(fields=('tenant', 'codigo'), name='unique_cotacao_codigo_per_tenant'),
        ),
        migrations.AddIndex(
            model_name='cotacaoitem',
            index=models.Index(fields=['cotacao', 'ordem'], name='cotacoes_co_cotacao_4a713a_idx'),
        ),
        migrations.AddIndex(
            model_name='propostafornecedor',
            index=models.Index(fields=['cotacao', 'status'], name='cotacoes_pr_cotacao_1a150b_idx'),
        ),
        migrations.AddIndex(
            model_name='propostafornecedor',
            index=models.Index(fields=['fornecedor', 'status'], name='cotacoes_pr_fornece_d55dad_idx'),
        ),
        migrations.AddIndex(
            model_name='propostafornecedor',
            index=models.Index(fields=['status', 'enviado_em'], name='cotacoes_pr_status_78eb12_idx'),
        ),
        migrations.AddConstraint(
            model_name='propostafornecedor',
            constraint=models.UniqueConstraint(condition=models.Q(('status__in', ['enviada', 'selecionada'])), fields=('cotacao', 'fornecedor'), name='unique_proposta_ativa_per_fornecedor'),
        ),
        migrations.AddIndex(
            model_name='propostafornecedoritem',
            index=models.Index(fields=['proposta', 'item_cotacao'], name='cotacoes_pr_propost_19f8d0_idx'),
        ),
        migrations.AddConstraint(
            model_name='propostafornecedoritem',
            constraint=models.UniqueConstraint(fields=('proposta', 'item_cotacao'), name='unique_proposta_item'),
        ),
    ]
