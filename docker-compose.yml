version: '3.9'

services:
  web:
    build: .
    container_name: pandora_web
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  worker:
    build: .
    container_name: pandora_worker
    command: celery -A pandora_erp worker -l info -Q default,media
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker-video:
    build: .
    container_name: pandora_worker_video
    command: celery -A pandora_erp worker -l info -Q video -n video@%h
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build: .
    container_name: pandora_beat
    command: celery -A pandora_erp beat -l info
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: pandora_redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  redis_data:
