# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data_atendimento', models.DateTimeField(verbose_name='Data e Hora do Atendimento')),
                ('numero_sessao', models.PositiveIntegerField(verbose_name='Número da Sessão')),
                ('status', models.CharField(choices=[('AGENDADO', 'Agendado'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDO', 'Concluído'), ('CANCELADO', 'Cancelado'), ('REAGENDADO', 'Reagendado')], default='AGENDADO', max_length=20)),
                ('pressao_arterial', models.CharField(blank=True, max_length=10, null=True, verbose_name='Pressão Arterial')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('altura', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Altura (m)')),
                ('area_tratada', models.CharField(max_length=200, verbose_name='Área Tratada')),
                ('equipamento_utilizado', models.CharField(blank=True, max_length=200, null=True)),
                ('parametros_equipamento', models.JSONField(blank=True, default=dict, verbose_name='Parâmetros do Equipamento')),
                ('produtos_utilizados', models.TextField(blank=True, null=True, verbose_name='Produtos Utilizados')),
                ('observacoes_pre_procedimento', models.TextField(blank=True, null=True)),
                ('observacoes_durante_procedimento', models.TextField(blank=True, null=True)),
                ('observacoes_pos_procedimento', models.TextField(blank=True, null=True)),
                ('reacoes_adversas', models.TextField(blank=True, null=True, verbose_name='Reações Adversas')),
                ('satisfacao_paciente', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Satisfação do Paciente (1-10)')),
                ('avaliacao_profissional', models.TextField(blank=True, null=True, verbose_name='Avaliação do Profissional')),
                ('valor_cobrado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Cobrado')),
                ('desconto_aplicado', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('forma_pagamento', models.CharField(choices=[('DINHEIRO', 'Dinheiro'), ('CARTAO_CREDITO', 'Cartão de Crédito'), ('CARTAO_DEBITO', 'Cartão de Débito'), ('PIX', 'PIX'), ('TRANSFERENCIA', 'Transferência Bancária'), ('OUTRO', 'Outro')], max_length=50)),
                ('data_proxima_sessao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Próxima Sessão')),
                ('observacoes_proxima_sessao', models.TextField(blank=True, null=True)),
                ('assinatura_paciente', models.TextField(blank=True, null=True, verbose_name='Assinatura Digital do Paciente')),
                ('assinatura_profissional', models.TextField(blank=True, null=True, verbose_name='Assinatura Digital do Profissional')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos_realizados', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Atendimento',
                'verbose_name_plural': 'Atendimentos',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('nome_completo', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('estado_civil', models.CharField(choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, verbose_name='Estado Civil')),
                ('profissao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profissão')),
                ('telefone_principal', models.CharField(max_length=20, verbose_name='Telefone Principal')),
                ('telefone_secundario', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Secundário')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('endereco_completo', models.TextField(verbose_name='Endereço Completo')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('alergias', models.TextField(blank=True, null=True, verbose_name='Alergias Conhecidas')),
                ('medicamentos_uso', models.TextField(blank=True, null=True, verbose_name='Medicamentos em Uso')),
                ('doencas_cronicas', models.TextField(blank=True, null=True, verbose_name='Doenças Crônicas')),
                ('cirurgias_anteriores', models.TextField(blank=True, null=True, verbose_name='Cirurgias Anteriores')),
                ('tipo_pele', models.CharField(blank=True, choices=[('NORMAL', 'Normal'), ('SECA', 'Seca'), ('OLEOSA', 'Oleosa'), ('MISTA', 'Mista'), ('SENSIVEL', 'Sensível')], max_length=20, null=True)),
                ('fototipo', models.CharField(blank=True, choices=[('I', 'I - Branca (sensível)'), ('II', 'II - Branca (pouco sensível)'), ('III', 'III - Morena Clara (moderadamente sensível)'), ('IV', 'IV - Morena Moderada (pouco sensível)'), ('V', 'V - Morena Escura (resistente)'), ('VI', 'VI - Negra (resistente)')], max_length=10, null=True)),
                ('historico_estetico', models.TextField(blank=True, null=True, verbose_name='Histórico de Procedimentos Estéticos')),
                ('contato_emergencia_nome', models.CharField(max_length=200, verbose_name='Nome do Contato de Emergência')),
                ('contato_emergencia_telefone', models.CharField(max_length=20, verbose_name='Telefone do Contato de Emergência')),
                ('contato_emergencia_parentesco', models.CharField(max_length=50, verbose_name='Parentesco')),
                ('numero_prontuario', models.CharField(max_length=20, unique=True, verbose_name='Número do Prontuário')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('arquivado', 'Arquivado')], default='ativo', max_length=20)),
                ('observacoes_gerais', models.TextField(blank=True, null=True, verbose_name='Observações Gerais')),
                ('termo_responsabilidade_assinado', models.BooleanField(default=False)),
                ('data_assinatura_termo', models.DateTimeField(blank=True, null=True)),
                ('lgpd_consentimento', models.BooleanField(default=False, verbose_name='Consentimento LGPD')),
                ('data_consentimento_lgpd', models.DateTimeField(blank=True, null=True)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='pacientes/fotos_perfil/')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pacientes', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='FotoEvolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título/Descrição')),
                ('tipo_foto', models.CharField(choices=[('ANTES', 'Antes'), ('DURANTE', 'Durante'), ('DEPOIS', 'Depois'), ('GERAL', 'Geral')], max_length=20, verbose_name='Tipo de Foto')),
                ('momento', models.CharField(choices=[('INICIO_TRATAMENTO', 'Início do Tratamento'), ('MEIO_TRATAMENTO', 'Meio do Tratamento'), ('FIM_TRATAMENTO', 'Fim do Tratamento'), ('SESSAO_ESPECIFICA', 'Sessão Específica'), ('ACOMPANHAMENTO', 'Acompanhamento')], max_length=20, verbose_name='Momento')),
                ('area_fotografada', models.CharField(max_length=200, verbose_name='Área Fotografada')),
                ('imagem', models.ImageField(upload_to='prontuarios/fotos_evolucao/', verbose_name='Imagem')),
                ('imagem_thumbnail', models.ImageField(blank=True, null=True, upload_to='prontuarios/thumbnails/')),
                ('data_foto', models.DateTimeField(verbose_name='Data da Foto')),
                ('angulo_foto', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ângulo da Foto')),
                ('iluminacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Condições de Iluminação')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('visivel_paciente', models.BooleanField(default=True, verbose_name='Visível para o Paciente')),
                ('uso_autorizado_marketing', models.BooleanField(default=False, verbose_name='Autorizado para Marketing')),
                ('resolucao', models.CharField(blank=True, max_length=20, null=True)),
                ('tamanho_arquivo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamanho do Arquivo (bytes)')),
                ('hash_arquivo', models.CharField(blank=True, max_length=64, null=True, verbose_name='Hash SHA-256')),
                ('atendimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='prontuarios.atendimento')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos_evolucao', to='core.tenant')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos_evolucao', to='prontuarios.paciente')),
            ],
            options={
                'verbose_name': 'Foto de Evolução',
                'verbose_name_plural': 'Fotos de Evolução',
            },
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos', to='prontuarios.paciente'),
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Procedimento')),
                ('categoria', models.CharField(choices=[('FACIAL', 'Facial'), ('CORPORAL', 'Corporal'), ('CAPILAR', 'Capilar'), ('LASER', 'Laser'), ('INJETAVEIS', 'Injetáveis'), ('OUTROS', 'Outros')], max_length=50)),
                ('descricao', models.TextField(verbose_name='Descrição Detalhada')),
                ('duracao_estimada', models.DurationField(verbose_name='Duração Estimada')),
                ('valor_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Base')),
                ('requisitos_pre_procedimento', models.TextField(blank=True, null=True)),
                ('contraindicacoes', models.TextField(blank=True, null=True)),
                ('cuidados_pos_procedimento', models.TextField(blank=True, null=True)),
                ('requer_anamnese', models.BooleanField(default=True)),
                ('requer_termo_consentimento', models.BooleanField(default=True)),
                ('permite_fotos_evolucao', models.BooleanField(default=True)),
                ('intervalo_minimo_sessoes', models.PositiveIntegerField(default=7, verbose_name='Intervalo Mínimo entre Sessões (dias)')),
                ('ativo', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedimentos', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Procedimento',
                'verbose_name_plural': 'Procedimentos',
                'unique_together': {('tenant', 'nome')},
            },
        ),
        migrations.AddField(
            model_name='atendimento',
            name='procedimento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos', to='prontuarios.procedimento'),
        ),
        migrations.CreateModel(
            name='Anamnese',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('tipo_anamnese', models.CharField(choices=[('GERAL', 'Anamnese Geral'), ('FACIAL', 'Anamnese Facial'), ('CORPORAL', 'Anamnese Corporal'), ('CAPILAR', 'Anamnese Capilar'), ('LASER', 'Anamnese Laser'), ('INJETAVEIS', 'Anamnese Injetáveis')], max_length=50)),
                ('data_preenchimento', models.DateTimeField(auto_now_add=True)),
                ('respostas', models.JSONField(default=dict, verbose_name='Respostas da Anamnese')),
                ('observacoes_profissional', models.TextField(blank=True, null=True)),
                ('contraindicacoes_identificadas', models.TextField(blank=True, null=True)),
                ('recomendacoes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PREENCHIDA', 'Preenchida'), ('EM_REVISAO', 'Em Revisão'), ('APROVADA', 'Aprovada'), ('REJEITADA', 'Rejeitada')], default='PREENCHIDA', max_length=20)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('assinatura_paciente', models.TextField(blank=True, null=True)),
                ('assinatura_profissional', models.TextField(blank=True, null=True)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anamneses_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('profissional_responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anamneses_supervisionadas', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anamneses', to='core.tenant')),
                ('atendimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anamneses', to='prontuarios.atendimento')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anamneses', to='prontuarios.paciente')),
                ('procedimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anamneses', to='prontuarios.procedimento')),
            ],
            options={
                'verbose_name': 'Anamnese',
                'verbose_name_plural': 'Anamneses',
            },
        ),
    ]
