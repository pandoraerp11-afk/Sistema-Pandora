# Generated by Django 5.1.5 on 2025-08-15 17:51

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('estoque', '0002_logauditoriaestoque_evidencias_ids_and_more'),
        ('funcionarios', '0001_initial'),
        ('obras', '0001_initial'),
        ('produtos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aprovacao_automatica_ate_valor', models.DecimalField(decimal_places=2, default=100.0, help_text='Valor máximo para aprovação automática sem supervisão', max_digits=10, verbose_name='Aprovação Automática até Valor')),
                ('dias_prazo_devolucao', models.PositiveIntegerField(default=30, help_text='Prazo padrão em dias para devolução de materiais', verbose_name='Dias para Prazo de Devolução')),
                ('permite_retirada_sem_estoque', models.BooleanField(default=False, help_text='Permite solicitar materiais mesmo sem saldo disponível', verbose_name='Permite Retirada sem Estoque')),
                ('notificar_supervisores', models.BooleanField(default=True, help_text='Enviar notificações para supervisores sobre solicitações', verbose_name='Notificar Supervisores')),
                ('campos_obrigatorios', models.JSONField(default=list, help_text='Lista de campos obrigatórios nas solicitações', verbose_name='Campos Obrigatórios')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracao_material', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuração de Material',
                'verbose_name_plural': 'Configurações de Materiais',
            },
        ),
        migrations.CreateModel(
            name='CrachaFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_cracha', models.CharField(help_text='Código único impresso no crachá', max_length=50, unique=True, verbose_name='Código do Crachá')),
                ('codigo_barras', models.CharField(blank=True, help_text='Código de barras para leitura automática', max_length=100, null=True, verbose_name='Código de Barras')),
                ('qr_code', models.CharField(blank=True, help_text='QR Code para leitura via smartphone', max_length=200, null=True, verbose_name='QR Code')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_emissao', models.DateField(auto_now_add=True, verbose_name='Data de Emissão')),
                ('data_validade', models.DateField(blank=True, help_text='Data de validade do crachá (opcional)', null=True, verbose_name='Data de Validade')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cracha', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Crachá de Funcionário',
                'verbose_name_plural': 'Crachás de Funcionários',
                'ordering': ['funcionario__nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='PerfilFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pode_retirar_materiais', models.BooleanField(default=False, help_text='Define se o funcionário pode solicitar retirada de materiais', verbose_name='Pode Retirar Materiais')),
                ('limite_valor_retirada', models.DecimalField(blank=True, decimal_places=2, help_text='Limite máximo em R$ que o funcionário pode retirar sem aprovação especial', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Limite de Valor para Retirada')),
                ('necessita_aprovacao', models.BooleanField(default=True, help_text='Define se as solicitações precisam de aprovação', verbose_name='Necessita Aprovação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('aprovador', models.ForeignKey(blank=True, help_text='Funcionário que aprova as solicitações deste funcionário', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funcionarios_supervisionados', to='funcionarios.funcionario', verbose_name='Aprovador Padrão')),
                ('categorias_autorizadas', models.ManyToManyField(blank=True, help_text='Categorias de produtos que o funcionário pode retirar', to='produtos.categoria', verbose_name='Categorias Autorizadas')),
                ('depositos_autorizados', models.ManyToManyField(blank=True, help_text='Depósitos dos quais o funcionário pode retirar materiais', to='estoque.deposito', verbose_name='Depósitos Autorizados')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_estoque', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Perfil de Funcionário para Estoque',
                'verbose_name_plural': 'Perfis de Funcionários para Estoque',
                'ordering': ['funcionario__nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_solicitacao', models.CharField(help_text='Gerado automaticamente', max_length=50, unique=True, verbose_name='Número da Solicitação')),
                ('tipo', models.CharField(choices=[('OBRA', 'Para Obra'), ('MANUTENCAO', 'Manutenção'), ('EPI', 'EPI - Equipamento de Proteção Individual'), ('FERRAMENTAS', 'Ferramentas'), ('CONSUMO_GERAL', 'Consumo Geral'), ('REFORMA', 'Reforma'), ('EMERGENCIA', 'Emergência')], default='OBRA', max_length=20, verbose_name='Tipo da Solicitação')),
                ('status', models.CharField(choices=[('RASCUNHO', 'Rascunho'), ('PENDENTE', 'Pendente'), ('EM_ANALISE', 'Em Análise'), ('APROVADA', 'Aprovada'), ('APROVADA_PARCIAL', 'Aprovada Parcialmente'), ('REJEITADA', 'Rejeitada'), ('ENTREGUE', 'Entregue'), ('ENTREGUE_PARCIAL', 'Parcialmente Entregue'), ('CANCELADA', 'Cancelada'), ('FINALIZADA', 'Finalizada')], default='PENDENTE', max_length=20, verbose_name='Status')),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('MEDIA', 'Média'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='MEDIA', max_length=10, verbose_name='Prioridade')),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Solicitação')),
                ('data_necessidade', models.DateField(help_text='Quando os materiais são necessários', verbose_name='Data de Necessidade')),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Aprovação')),
                ('observacoes_aprovacao', models.TextField(blank=True, null=True, verbose_name='Observações da Aprovação')),
                ('data_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Data da Entrega')),
                ('justificativa', models.TextField(help_text='Explique o motivo da solicitação', verbose_name='Justificativa da Solicitação')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('observacoes_entrega', models.TextField(blank=True, null=True, verbose_name='Observações da Entrega')),
                ('valor_total_estimado', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor Total Estimado')),
                ('valor_total_real', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor Total Real')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solicitacoes_aprovadas', to='funcionarios.funcionario', verbose_name='Aprovador')),
                ('departamento', models.ForeignKey(blank=True, help_text='Departamento solicitante (alternativo à obra)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department', verbose_name='Departamento')),
                ('funcionario_entrega', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entregas_realizadas', to='funcionarios.funcionario', verbose_name='Funcionário Responsável pela Entrega')),
                ('funcionario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes_feitas', to='funcionarios.funcionario', verbose_name='Funcionário Solicitante')),
                ('obra', models.ForeignKey(blank=True, help_text='Obra onde os materiais serão utilizados', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solicitacoes_material', to='obras.obra', verbose_name='Obra')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes_material', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Solicitação de Material',
                'verbose_name_plural': 'Solicitações de Materiais',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.CreateModel(
            name='ResponsabilidadeMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_retirada', models.DecimalField(decimal_places=4, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))], verbose_name='Quantidade Retirada')),
                ('quantidade_devolvida', models.DecimalField(decimal_places=4, default=0, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Devolvida')),
                ('valor_unitario', models.DecimalField(decimal_places=6, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor Unitário')),
                ('data_retirada', models.DateTimeField(verbose_name='Data da Retirada')),
                ('data_previsao_devolucao', models.DateField(blank=True, null=True, verbose_name='Data Prevista para Devolução')),
                ('data_devolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Devolução Real')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo - Sob Responsabilidade'), ('DEVOLVIDO', 'Devolvido'), ('PERDIDO', 'Perdido/Danificado'), ('CONSUMIDO', 'Consumido'), ('TRANSFERIDO', 'Transferido para Outro Funcionário')], default='ATIVO', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiais_responsabilidade', to='funcionarios.funcionario', verbose_name='Funcionário Responsável')),
                ('movimento_devolucao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsabilidades_finalizadas', to='estoque.movimentoestoque', verbose_name='Movimento de Devolução')),
                ('movimento_retirada', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsabilidades_criadas', to='estoque.movimentoestoque', verbose_name='Movimento de Retirada')),
                ('obra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='obras.obra', verbose_name='Obra')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto', verbose_name='Produto')),
                ('solicitacao_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsabilidades_geradas', to='funcionarios.solicitacaomaterial', verbose_name='Solicitação de Origem')),
            ],
            options={
                'verbose_name': 'Responsabilidade sobre Material',
                'verbose_name_plural': 'Responsabilidades sobre Materiais',
                'ordering': ['-data_retirada'],
            },
        ),
        migrations.CreateModel(
            name='ItemSolicitacaoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_solicitada', models.DecimalField(decimal_places=4, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))], verbose_name='Quantidade Solicitada')),
                ('quantidade_aprovada', models.DecimalField(decimal_places=4, default=0, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Aprovada')),
                ('quantidade_entregue', models.DecimalField(decimal_places=4, default=0, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Entregue')),
                ('custo_unitario_estimado', models.DecimalField(decimal_places=6, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Custo Unitário Estimado')),
                ('custo_unitario_real', models.DecimalField(decimal_places=6, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Custo Unitário Real')),
                ('observacoes_item', models.TextField(blank=True, null=True, verbose_name='Observações do Item')),
                ('urgente', models.BooleanField(default=False, help_text='Marca este item como urgente', verbose_name='Item Urgente')),
                ('deposito_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estoque.deposito', verbose_name='Depósito de Origem')),
                ('movimento_estoque', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens_solicitacao', to='estoque.movimentoestoque', verbose_name='Movimento de Estoque')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto', verbose_name='Produto')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='funcionarios.solicitacaomaterial', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Item da Solicitação de Material',
                'verbose_name_plural': 'Itens das Solicitações de Materiais',
                'ordering': ['produto__nome'],
            },
        ),
        migrations.CreateModel(
            name='ControleFerramenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_serie', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de Série')),
                ('patrimonio', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número do Patrimônio')),
                ('data_entrega', models.DateTimeField(verbose_name='Data da Entrega')),
                ('data_previsao_devolucao', models.DateField(verbose_name='Data Prevista para Devolução')),
                ('data_devolucao_real', models.DateTimeField(blank=True, null=True, verbose_name='Data Real da Devolução')),
                ('condicao_entrega', models.CharField(choices=[('NOVO', 'Novo'), ('OTIMO', 'Ótimo'), ('BOM', 'Bom'), ('REGULAR', 'Regular'), ('RUIM', 'Ruim'), ('DANIFICADO', 'Danificado')], default='BOM', max_length=20, verbose_name='Condição na Entrega')),
                ('observacoes_entrega', models.TextField(help_text='Descreva o estado da ferramenta na entrega', verbose_name='Observações da Entrega')),
                ('condicao_devolucao', models.CharField(blank=True, choices=[('NOVO', 'Novo'), ('OTIMO', 'Ótimo'), ('BOM', 'Bom'), ('REGULAR', 'Regular'), ('RUIM', 'Ruim'), ('DANIFICADO', 'Danificado')], max_length=20, null=True, verbose_name='Condição na Devolução')),
                ('observacoes_devolucao', models.TextField(blank=True, null=True, verbose_name='Observações da Devolução')),
                ('termo_assinado', models.BooleanField(default=False, verbose_name='Termo de Responsabilidade Assinado')),
                ('foto_entrega', models.ImageField(blank=True, null=True, upload_to='controle_ferramentas/entrega/', verbose_name='Foto na Entrega')),
                ('foto_devolucao', models.ImageField(blank=True, null=True, upload_to='controle_ferramentas/devolucao/', verbose_name='Foto na Devolução')),
                ('valor_ferramenta', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor da Ferramenta')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ferramentas_controle', to='funcionarios.funcionario', verbose_name='Funcionário')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto', verbose_name='Ferramenta')),
                ('responsabilidade_material', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controle_ferramenta', to='funcionarios.responsabilidadematerial', verbose_name='Responsabilidade Associada')),
            ],
            options={
                'verbose_name': 'Controle de Ferramenta',
                'verbose_name_plural': 'Controles de Ferramentas',
                'ordering': ['-data_entrega'],
                'indexes': [models.Index(fields=['funcionario', 'data_entrega'], name='funcionario_funcion_14309d_idx'), models.Index(fields=['data_previsao_devolucao'], name='funcionario_data_pr_df9ade_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='solicitacaomaterial',
            index=models.Index(fields=['status', 'data_solicitacao'], name='funcionario_status_6676c0_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitacaomaterial',
            index=models.Index(fields=['funcionario_solicitante', 'data_solicitacao'], name='funcionario_funcion_491d3f_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitacaomaterial',
            index=models.Index(fields=['obra', 'data_solicitacao'], name='funcionario_obra_id_15a339_idx'),
        ),
        migrations.AddIndex(
            model_name='responsabilidadematerial',
            index=models.Index(fields=['funcionario', 'status'], name='funcionario_funcion_c5b998_idx'),
        ),
        migrations.AddIndex(
            model_name='responsabilidadematerial',
            index=models.Index(fields=['obra', 'data_retirada'], name='funcionario_obra_id_7c8a64_idx'),
        ),
        migrations.AddIndex(
            model_name='responsabilidadematerial',
            index=models.Index(fields=['status', 'data_previsao_devolucao'], name='funcionario_status_dda14f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itemsolicitacaomaterial',
            unique_together={('solicitacao', 'produto', 'deposito_origem')},
        ),
    ]
