# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('estado_civil', models.CharField(blank=True, choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('nacionalidade', models.CharField(default='Brasileira', max_length=100, verbose_name='Nacionalidade')),
                ('escolaridade', models.CharField(blank=True, choices=[('FUNDAMENTAL_INCOMPLETO', 'Ensino Fundamental Incompleto'), ('FUNDAMENTAL_COMPLETO', 'Ensino Fundamental Completo'), ('MEDIO_INCOMPLETO', 'Ensino Médio Incompleto'), ('MEDIO_COMPLETO', 'Ensino Médio Completo'), ('SUPERIOR_INCOMPLETO', 'Ensino Superior Incompleto'), ('SUPERIOR_COMPLETO', 'Ensino Superior Completo'), ('POS_GRADUACAO', 'Pós-Graduação'), ('MESTRADO', 'Mestrado'), ('DOUTORADO', 'Doutorado')], max_length=30, null=True, verbose_name='Escolaridade')),
                ('email_pessoal', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail Pessoal')),
                ('telefone_pessoal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Pessoal')),
                ('telefone_emergencia', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone de Emergência')),
                ('contato_emergencia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contato de Emergência')),
                ('endereco_logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('endereco_numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('endereco_complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('endereco_bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('endereco_cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('endereco_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('endereco_cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('data_admissao', models.DateField(verbose_name='Data de Admissão')),
                ('data_demissao', models.DateField(blank=True, null=True, verbose_name='Data de Demissão')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('cargo', models.CharField(max_length=100, verbose_name='Cargo')),
                ('tipo_contrato', models.CharField(choices=[('CLT', 'CLT'), ('PJ', 'Pessoa Jurídica'), ('ESTAGIO', 'Estágio'), ('APRENDIZ', 'Aprendiz'), ('TEMPORARIO', 'Temporário')], default='CLT', max_length=20, verbose_name='Tipo de Contrato')),
                ('jornada_trabalho_horas', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('24.00'))], verbose_name='Jornada de Trabalho (horas/dia)')),
                ('salario_base', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Salário Base')),
                ('banco', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco')),
                ('agencia', models.CharField(blank=True, max_length=20, null=True, verbose_name='Agência')),
                ('conta', models.CharField(blank=True, max_length=20, null=True, verbose_name='Conta')),
                ('tipo_conta', models.CharField(blank=True, choices=[('CORRENTE', 'Corrente'), ('POUPANCA', 'Poupança')], max_length=20, null=True, verbose_name='Tipo de Conta')),
                ('pis', models.CharField(blank=True, max_length=14, null=True, verbose_name='PIS/PASEP')),
                ('ctps', models.CharField(blank=True, max_length=20, null=True, verbose_name='CTPS')),
                ('titulo_eleitor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Título de Eleitor')),
                ('reservista', models.CharField(blank=True, max_length=20, null=True, verbose_name='Certificado de Reservista')),
                ('numero_dependentes', models.PositiveIntegerField(default=0, verbose_name='Número de Dependentes')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department', verbose_name='Departamento')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios', to='core.tenant', verbose_name='Empresa')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funcionario_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Sistema (Opcional)')),
            ],
            options={
                'verbose_name': 'funcionário',
                'verbose_name_plural': 'funcionários',
                'ordering': ['nome_completo'],
                'unique_together': {('tenant', 'cpf')},
            },
        ),
        migrations.CreateModel(
            name='Folga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data_inicio', models.DateField(verbose_name='Data de Início da Folga')),
                ('data_fim', models.DateField(verbose_name='Data de Fim da Folga')),
                ('tipo_folga', models.CharField(choices=[('JUSTIFICADA', 'Justificada'), ('INJUSTIFICADA', 'Injustificada'), ('BANCO_HORAS', 'Banco de Horas'), ('FERIADO', 'Feriado'), ('LICENCA_MEDICA', 'Licença Médica'), ('LICENCA_MATERNIDADE', 'Licença Maternidade'), ('LICENCA_PATERNIDADE', 'Licença Paternidade'), ('LUTO', 'Luto'), ('CASAMENTO', 'Casamento'), ('DOACAO_SANGUE', 'Doação de Sangue')], max_length=20, verbose_name='Tipo de Folga')),
                ('motivo', models.TextField(blank=True, null=True, verbose_name='Motivo')),
                ('documento_comprobatorio', models.FileField(blank=True, null=True, upload_to='folgas_documentos/', verbose_name='Documento Comprobatório')),
                ('status', models.CharField(choices=[('SOLICITADA', 'Solicitada'), ('APROVADA', 'Aprovada'), ('REJEITADA', 'Rejeitada'), ('CONCLUIDA', 'Concluída')], default='SOLICITADA', max_length=20, verbose_name='Status')),
                ('data_aprovacao', models.DateField(blank=True, null=True, verbose_name='Data de Aprovação/Rejeição')),
                ('observacoes_aprovacao', models.TextField(blank=True, null=True, verbose_name='Observações da Aprovação')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Aprovado Por')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folgas', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folgas', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'folga',
                'verbose_name_plural': 'folgas',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Ferias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('periodo_aquisitivo_inicio', models.DateField(verbose_name='Início Período Aquisitivo')),
                ('periodo_aquisitivo_fim', models.DateField(verbose_name='Fim Período Aquisitivo')),
                ('data_inicio', models.DateField(verbose_name='Data de Início das Férias')),
                ('data_fim', models.DateField(verbose_name='Data de Fim das Férias')),
                ('dias_gozados', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)], verbose_name='Dias Gozados')),
                ('abono_pecuniario', models.BooleanField(default=False, verbose_name='Abono Pecuniário (Venda de Férias)')),
                ('dias_abono', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Dias de Abono')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('valor_pago', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Pago')),
                ('status', models.CharField(choices=[('AGENDADA', 'Agendada'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada')], default='AGENDADA', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ferias', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ferias', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'férias',
                'verbose_name_plural': 'férias',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Dependente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('tipo_dependente', models.CharField(choices=[('FILHO', 'Filho(a)'), ('CONJUGE', 'Cônjuge'), ('PAI', 'Pai'), ('MAE', 'Mãe'), ('OUTRO', 'Outro')], max_length=20, verbose_name='Tipo de Dependente')),
                ('dependente_ir', models.BooleanField(default=True, verbose_name='Dependente para IR')),
                ('dependente_salario_familia', models.BooleanField(default=True, verbose_name='Dependente para Salário Família')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependentes', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependentes', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'dependente',
                'verbose_name_plural': 'dependentes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='CartaoPonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data_hora_registro', models.DateTimeField(verbose_name='Data e Hora do Registro')),
                ('tipo_registro', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SAIDA', 'Saída'), ('INICIO_ALMOCO', 'Início Almoço'), ('FIM_ALMOCO', 'Fim Almoço'), ('ENTRADA_EXTRA', 'Entrada Hora Extra'), ('SAIDA_EXTRA', 'Saída Hora Extra')], max_length=20, verbose_name='Tipo de Registro')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('localizacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Localização (GPS)')),
                ('justificativa', models.TextField(blank=True, null=True, verbose_name='Justificativa')),
                ('aprovado', models.BooleanField(default=True, verbose_name='Aprovado')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pontos_aprovados', to=settings.AUTH_USER_MODEL, verbose_name='Aprovado Por')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cartao_ponto', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cartao_ponto', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'cartão de ponto',
                'verbose_name_plural': 'cartões de ponto',
                'ordering': ['-data_hora_registro'],
            },
        ),
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('tipo_beneficio', models.CharField(choices=[('INSS', 'INSS'), ('FGTS', 'FGTS'), ('IRRF', 'Imposto de Renda Retido na Fonte'), ('VALE_TRANSPORTE', 'Vale Transporte'), ('VALE_ALIMENTACAO', 'Vale Alimentação'), ('VALE_REFEICAO', 'Vale Refeição'), ('PLANO_SAUDE', 'Plano de Saúde'), ('PLANO_ODONTOLOGICO', 'Plano Odontológico'), ('SEGURO_VIDA', 'Seguro de Vida'), ('AUXILIO_CRECHE', 'Auxílio Creche'), ('AUXILIO_EDUCACAO', 'Auxílio Educação'), ('PARTICIPACAO_LUCROS', 'Participação nos Lucros'), ('COMISSAO', 'Comissão'), ('BONUS', 'Bônus'), ('ADIANTAMENTO', 'Adiantamento'), ('DESCONTO_ATRASO', 'Desconto por Atraso'), ('DESCONTO_FALTA', 'Desconto por Falta'), ('OUTRO', 'Outro')], max_length=50, verbose_name='Tipo de Benefício/Desconto')),
                ('categoria', models.CharField(choices=[('BENEFICIO', 'Benefício'), ('DESCONTO', 'Desconto'), ('PROVENTO', 'Provento')], max_length=20, verbose_name='Categoria')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('data_referencia', models.DateField(verbose_name='Data de Referência')),
                ('recorrente', models.BooleanField(default=False, verbose_name='Recorrente')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'benefício/desconto',
                'verbose_name_plural': 'benefícios/descontos',
                'ordering': ['-data_referencia', 'tipo_beneficio'],
            },
        ),
        migrations.CreateModel(
            name='SalarioHistorico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('data_vigencia', models.DateField(verbose_name='Data de Vigência')),
                ('valor_salario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor do Salário')),
                ('motivo_alteracao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Motivo da Alteração')),
                ('alterado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Alterado Por')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_salarios', to='funcionarios.funcionario', verbose_name='Funcionário')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_salarios', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'histórico salarial',
                'verbose_name_plural': 'históricos salariais',
                'ordering': ['-data_vigencia'],
            },
        ),
        migrations.CreateModel(
            name='DecimoTerceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('ano_referencia', models.PositiveIntegerField(verbose_name='Ano de Referência')),
                ('tipo_parcela', models.CharField(choices=[('PRIMEIRA', 'Primeira Parcela'), ('SEGUNDA', 'Segunda Parcela'), ('INTEGRAL', 'Integral')], max_length=10, verbose_name='Tipo de Parcela')),
                ('meses_trabalhados', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Meses Trabalhados')),
                ('valor_bruto', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Bruto')),
                ('desconto_inss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Desconto INSS')),
                ('desconto_irrf', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Desconto IRRF')),
                ('outros_descontos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Outros Descontos')),
                ('valor_liquido', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Líquido')),
                ('data_pagamento', models.DateField(verbose_name='Data de Pagamento')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('PAGO', 'Pago'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=10, verbose_name='Status de Pagamento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decimo_terceiro', to='core.tenant', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decimo_terceiro', to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'décimo terceiro',
                'verbose_name_plural': 'décimos terceiros',
                'ordering': ['-ano_referencia', 'funcionario__nome_completo'],
                'unique_together': {('tenant', 'funcionario', 'ano_referencia', 'tipo_parcela')},
            },
        ),
        migrations.CreateModel(
            name='HorarioTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('dia_semana', models.CharField(choices=[('SEGUNDA', 'Segunda-feira'), ('TERCA', 'Terça-feira'), ('QUARTA', 'Quarta-feira'), ('QUINTA', 'Quinta-feira'), ('SEXTA', 'Sexta-feira'), ('SABADO', 'Sábado'), ('DOMINGO', 'Domingo')], max_length=10, verbose_name='Dia da Semana')),
                ('hora_entrada', models.TimeField(verbose_name='Hora de Entrada')),
                ('hora_saida', models.TimeField(verbose_name='Hora de Saída')),
                ('hora_inicio_almoco', models.TimeField(blank=True, null=True, verbose_name='Hora Início Almoço')),
                ('hora_fim_almoco', models.TimeField(blank=True, null=True, verbose_name='Hora Fim Almoço')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios_trabalho', to='funcionarios.funcionario', verbose_name='Funcionário')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios_trabalho', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'horário de trabalho',
                'verbose_name_plural': 'horários de trabalho',
                'ordering': ['funcionario__nome_completo', 'dia_semana'],
                'unique_together': {('tenant', 'funcionario', 'dia_semana')},
            },
        ),
    ]
