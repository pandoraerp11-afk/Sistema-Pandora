# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('dias_expiracao_padrao', models.PositiveIntegerField(default=30, verbose_name='Dias para Expiração Padrão')),
                ('dias_retencao_lidas', models.PositiveIntegerField(default=90, verbose_name='Dias de Retenção para Notificações Lidas')),
                ('dias_retencao_arquivadas', models.PositiveIntegerField(default=365, verbose_name='Dias de Retenção para Notificações Arquivadas')),
                ('max_notificacoes_por_hora', models.PositiveIntegerField(default=50, verbose_name='Máximo de Notificações por Hora')),
                ('agrupar_notificacoes_similares', models.BooleanField(default=True, verbose_name='Agrupar Notificações Similares')),
                ('email_habilitado', models.BooleanField(default=True, verbose_name='E-mail Habilitado')),
                ('push_habilitado', models.BooleanField(default=True, verbose_name='Push Notifications Habilitado')),
                ('sms_habilitado', models.BooleanField(default=False, verbose_name='SMS Habilitado')),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracao_notificacao', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuração de Notificação',
                'verbose_name_plural': 'Configurações de Notificações',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('tipo', models.CharField(choices=[('info', 'Informação'), ('warning', 'Aviso'), ('error', 'Erro'), ('success', 'Sucesso'), ('alert', 'Alerta')], default='info', max_length=10, verbose_name='Tipo')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], default='media', max_length=10, verbose_name='Prioridade')),
                ('status', models.CharField(choices=[('nao_lida', 'Não Lida'), ('lida', 'Lida'), ('arquivada', 'Arquivada'), ('expirada', 'Expirada')], default='nao_lida', max_length=10, verbose_name='Status')),
                ('data_expiracao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Expiração')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Leitura')),
                ('url_acao', models.URLField(blank=True, null=True, verbose_name='URL de Ação')),
                ('modulo_origem', models.CharField(blank=True, max_length=50, null=True, verbose_name='Módulo de Origem')),
                ('evento_origem', models.CharField(blank=True, max_length=100, null=True, verbose_name='Evento de Origem')),
                ('dados_extras', models.JSONField(blank=True, default=dict, verbose_name='Dados Extras')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='core.tenant', verbose_name='Empresa')),
                ('usuario_destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Destinatário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LogNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=255, verbose_name='Ação')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('notificacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification', verbose_name='Notificação')),
            ],
            options={
                'verbose_name': 'Log de Notificação',
                'verbose_name_plural': 'Logs de Notificações',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='NotificationAdvanced',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('source_module', models.CharField(blank=True, max_length=50, null=True)),
                ('source_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('source_object_id', models.CharField(blank=True, max_length=50, null=True)),
                ('action_url', models.URLField(blank=True, null=True)),
                ('action_text', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=15)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('read_date', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adv_notifications', to='core.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('date', models.DateField()),
                ('hour', models.PositiveIntegerField()),
                ('notifications_created', models.PositiveIntegerField(default=0)),
                ('notifications_sent', models.PositiveIntegerField(default=0)),
                ('notifications_delivered', models.PositiveIntegerField(default=0)),
                ('notifications_read', models.PositiveIntegerField(default=0)),
                ('email_sent', models.PositiveIntegerField(default=0)),
                ('email_delivered', models.PositiveIntegerField(default=0)),
                ('email_opened', models.PositiveIntegerField(default=0)),
                ('email_clicked', models.PositiveIntegerField(default=0)),
                ('sms_sent', models.PositiveIntegerField(default=0)),
                ('sms_delivered', models.PositiveIntegerField(default=0)),
                ('push_sent', models.PositiveIntegerField(default=0)),
                ('push_delivered', models.PositiveIntegerField(default=0)),
                ('push_opened', models.PositiveIntegerField(default=0)),
                ('avg_processing_time', models.FloatField(default=0.0)),
                ('avg_delivery_time', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('complaint_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_metrics', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('status', models.CharField(default='pending', max_length=15)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('read_date', models.DateTimeField(blank=True, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('push_sent', models.BooleanField(default=False)),
                ('inapp_sent', models.BooleanField(default=False)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='notifications.notificationadvanced')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_recipients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('email_address', models.EmailField(max_length=254)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_status', models.CharField(default='pending', max_length=20)),
                ('message_id', models.CharField(blank=True, max_length=120, null=True)),
                ('opened', models.BooleanField(default=False)),
                ('opened_date', models.DateTimeField(blank=True, null=True)),
                ('clicked', models.BooleanField(default=False)),
                ('clicked_date', models.DateTimeField(blank=True, null=True)),
                ('provider', models.CharField(default='internal', max_length=50)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('notification_recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_deliveries', to='notifications.notificationrecipient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationRelatedObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('object_id', models.PositiveIntegerField()),
                ('relationship_type', models.CharField(default='related', max_length=30)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_objects', to='notifications.notificationadvanced')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('source_module', models.CharField(blank=True, max_length=50, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('inapp_title', models.CharField(blank=True, max_length=200, null=True)),
                ('inapp_body', models.TextField(blank=True, null=True)),
                ('email_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('email_body_html', models.TextField(blank=True, null=True)),
                ('email_body_text', models.TextField(blank=True, null=True)),
                ('push_title', models.CharField(blank=True, max_length=200, null=True)),
                ('push_body', models.CharField(blank=True, max_length=500, null=True)),
                ('sms_text', models.CharField(blank=True, max_length=320, null=True)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_templates', to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('source_module', models.CharField(max_length=50)),
                ('event_type', models.CharField(max_length=100)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('active', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('recipient_type', models.CharField(default='specific_users', max_length=30)),
                ('recipient_config', models.JSONField(blank=True, default=dict)),
                ('escalation_enabled', models.BooleanField(default=False)),
                ('escalation_delay_minutes', models.PositiveIntegerField(default=0)),
                ('escalation_recipients', models.JSONField(blank=True, default=list)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_rules', to='core.tenant')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='notifications.notificationtemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='notificationadvanced',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='PreferenciaUsuarioNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('receber_notificacoes', models.BooleanField(default=True, verbose_name='Receber Notificações')),
                ('receber_info', models.BooleanField(default=True, verbose_name='Receber Informações')),
                ('receber_warning', models.BooleanField(default=True, verbose_name='Receber Avisos')),
                ('receber_error', models.BooleanField(default=True, verbose_name='Receber Erros')),
                ('receber_success', models.BooleanField(default=True, verbose_name='Receber Sucessos')),
                ('receber_alert', models.BooleanField(default=True, verbose_name='Receber Alertas')),
                ('receber_baixa', models.BooleanField(default=True, verbose_name='Receber Prioridade Baixa')),
                ('receber_media', models.BooleanField(default=True, verbose_name='Receber Prioridade Média')),
                ('receber_alta', models.BooleanField(default=True, verbose_name='Receber Prioridade Alta')),
                ('receber_critica', models.BooleanField(default=True, verbose_name='Receber Prioridade Crítica')),
                ('modulos_bloqueados', models.JSONField(blank=True, default=list, verbose_name='Módulos Bloqueados')),
                ('email_habilitado', models.BooleanField(default=True, verbose_name='E-mail Habilitado')),
                ('push_habilitado', models.BooleanField(default=True, verbose_name='Push Notifications Habilitado')),
                ('sms_habilitado', models.BooleanField(default=False, verbose_name='SMS Habilitado')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferencia_notificacao', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Preferência de Notificação do Usuário',
                'verbose_name_plural': 'Preferências de Notificações dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='TenantNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('max_notifications_per_hour', models.PositiveIntegerField(default=200)),
                ('max_notifications_per_day', models.PositiveIntegerField(default=2000)),
                ('enable_auto_grouping', models.BooleanField(default=True)),
                ('grouping_window_minutes', models.PositiveIntegerField(default=5)),
                ('business_hours_start', models.TimeField(blank=True, null=True)),
                ('business_hours_end', models.TimeField(blank=True, null=True)),
                ('default_email_enabled', models.BooleanField(default=True)),
                ('default_sms_enabled', models.BooleanField(default=False)),
                ('default_push_enabled', models.BooleanField(default=True)),
                ('default_inapp_enabled', models.BooleanField(default=True)),
                ('notification_retention_days', models.PositiveIntegerField(default=365)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('inapp_enabled', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('daily_digest_enabled', models.BooleanField(default=False)),
                ('daily_digest_time', models.TimeField(blank=True, null=True)),
                ('weekly_digest_enabled', models.BooleanField(default=False)),
                ('weekly_digest_day', models.PositiveSmallIntegerField(blank=True, help_text='0=Segunda ... 6=Domingo', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['tenant', 'usuario_destinatario', 'status'], name='notificatio_tenant__f5ae94_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['tenant', 'tipo', 'prioridade'], name='notificatio_tenant__211a5a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['modulo_origem', 'evento_origem'], name='notificatio_modulo__510c6a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationmetrics',
            unique_together={('tenant', 'date', 'hour')},
        ),
    ]
