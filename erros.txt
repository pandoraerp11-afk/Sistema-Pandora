PLC0415 `import` should be at the top-level of a file
   --> admin\forms.py:133:9
    |
131 |     def clean_value(self):
132 |         """Valida se o valor é um JSON válido."""
133 |         import json
    |         ^^^^^^^^^^^
134 |
135 |         value = self.cleaned_data["value"]
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> admin\forms.py:140:13
    |
138 |             return value
139 |         except json.JSONDecodeError:
140 |             raise forms.ValidationError("O valor deve ser um JSON válido.")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\forms.py:190:9
    |
188 |     def clean_custom_branding(self):
189 |         """Valida se o custom_branding é um JSON válido."""
190 |         import json
    |         ^^^^^^^^^^^
191 |
192 |         value = self.cleaned_data["custom_branding"]
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> admin\forms.py:198:17
    |
196 |                 return value
197 |             except json.JSONDecodeError:
198 |                 raise forms.ValidationError("A customização deve ser um JSON válido.")
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
199 |         return value
    |

SIM102 Use a single `if` statement instead of nested `if` statements
  --> admin\signals.py:67:5
   |
66 |       # Verifica se o campo 'is_tenant_admin' foi alterado de False para True
67 | /     if not created and hasattr(instance, "tracker") and instance.tracker.has_changed("is_tenant_admin"):
68 | |         if instance.tracker.previous("is_tenant_admin") is False and instance.is_tenant_admin is True:
   | |______________________________________________________________________________________________________^
69 |               is_newly_made_admin = True
   |
help: Combine `if` statements using `and`

E501 Line too long (125 > 120)
  --> admin\signals.py:76:121
   |
74 |         create_system_alert(
75 |             title=f"Novo privilégio de Admin: {instance.tenant.name}",
76 |             description=f"O usuário '{user_name}' recebeu privilégios de administrador na empresa '{instance.tenant.name}'.",
   |                                                                                                                         ^^^^^
77 |             severity="high",  # Promoção a admin é um evento de alta importância
78 |             alert_type="security",
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> admin\tests\test_admin_dashboard.py:69:40
   |
67 |                 description=f"Descrição do alerta {i + 1}",
68 |                 alert_type="system",
69 |                 severity="high" if i < 2 else "medium",
   |                                        ^
70 |                 status="open",
71 |             )
   |

PLR0913 Too many arguments in function definition (9 > 5)
  --> admin\utils.py:15:5
   |
15 | def log_admin_activity(
   |     ^^^^^^^^^^^^^^^^^^
16 |     user,
17 |     action,
   |

PLC0415 `import` should be at the top-level of a file
  --> admin\utils.py:77:9
   |
76 |     try:
77 |         from core.models import CustomUser, Tenant
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
78 |
79 |         # Métricas básicas
   |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> admin\utils.py:123:100
    |
121 |             "tenant_growth_rate": round(tenant_growth_rate, 2),
122 |             "current_week_tenants": current_week_tenants,
123 |             "system_status": "healthy" if critical_alerts == 0 else "warning" if critical_alerts < 5 else "critical",
    |                                                                                                    ^
124 |         }
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> admin\utils.py:149:5
    |
149 | def create_system_alert(title, description, severity="medium", alert_type="system", tenant=None, metadata=None):
    |     ^^^^^^^^^^^^^^^^^^^
150 |     """
151 |     Cria um alerta do sistema.
    |

E501 Line too long (123 > 120)
   --> admin\utils.py:268:121
    |
267 |         logger.info(
268 |             f"Limpeza concluída: {metrics_count} métricas, {activities_count} atividades, {alerts_count} alertas removidos"
    |                                                                                                                         ^^^
269 |         )
    |

PLR0911 Too many return statements (10 > 6)
   --> admin\utils.py:282:5
    |
282 | def validate_system_configuration(key, value):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
283 |     """
284 |     Valida configurações do sistema antes de salvar.
    |

PLR0912 Too many branches (14 > 12)
   --> admin\utils.py:282:5
    |
282 | def validate_system_configuration(key, value):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
283 |     """
284 |     Valida configurações do sistema antes de salvar.
    |

PLR2004 Magic value used in comparison, consider replacing `65535` with a constant variable
   --> admin\utils.py:302:68
    |
301 |         elif key == "smtp_port":
302 |             if not isinstance(value, int) or value <= 0 or value > 65535:
    |                                                                    ^^^^^
303 |                 return False, "Porta SMTP deve ser um número entre 1 e 65535"
    |

PLR2004 Magic value used in comparison, consider replacing `365` with a constant variable
   --> admin\utils.py:308:24
    |
306 |             if not isinstance(value, int) or value < 1:
307 |                 return False, "Dias de retenção de backup deve ser pelo menos 1"
308 |             if value > 365:
    |                        ^^^
309 |                 return False, "Dias de retenção de backup não pode exceder 365"
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> admin\utils.py:318:29
    |
316 |             if not isinstance(value, str) or len(value.strip()) == 0:
317 |                 return False, "Nome do site não pode estar vazio"
318 |             if len(value) > 100:
    |                             ^^^
319 |                 return False, "Nome do site não pode exceder 100 caracteres"
    |

PLC0415 `import` should be at the top-level of a file
  --> admin\views.py:59:9
   |
57 |     if request.user.is_superuser:
58 |         # Super Admin: Dados globais do sistema
59 |         from core.models import Tenant
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
60 |         from user_management.models import PerfilUsuarioEstendido
   |

PLC0415 `import` should be at the top-level of a file
  --> admin\views.py:60:9
   |
58 |         # Super Admin: Dados globais do sistema
59 |         from core.models import Tenant
60 |         from user_management.models import PerfilUsuarioEstendido
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
61 |
62 |         # Métricas principais
   |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:107:9
    |
105 |             return redirect(reverse("core:tenant_select"))
106 |
107 |         from core.models import TenantUser
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
108 |         from user_management.models import PerfilUsuarioEstendido
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:108:9
    |
107 |         from core.models import TenantUser
108 |         from user_management.models import PerfilUsuarioEstendido
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
109 |
110 |         # Métricas da empresa
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:226:5
    |
225 |     # Paginação
226 |     from django.core.paginator import Paginator
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
227 |
228 |     paginator = Paginator(alerts, 25)
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:267:5
    |
266 |     # Agrupar por categoria
267 |     from itertools import groupby
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
268 |
269 |     configs_by_category = {}
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:571:13
    |
569 |         """Retorna o total de funcionários ativos."""
570 |         try:
571 |             from funcionarios.models import Funcionario
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
572 |
573 |             return Funcionario.objects.filter(ativo=True).count()
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:584:13
    |
583 |             # Contas a pagar vencidas
584 |             from financeiro.models import ContaPagar
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
585 |
586 |             contas_vencidas = ContaPagar.objects.filter(
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:592:13
    |
591 |             # Obras com problemas
592 |             from obras.models import Obra
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
593 |
594 |             obras_problemas = Obra.objects.filter(status__in=["parada", "atrasada"]).count()
    |

E722 Do not use bare `except`
   --> admin\views.py:598:9
    |
597 |             return pendencias
598 |         except Exception:
    |         ^^^^^^
599 |             return 12  # Valor fictício
    |

E722 Do not use bare `except`
   --> admin\views.py:613:9
    |
611 |             performance = (produtividade + qualidade + eficiencia + pontualidade) / 4
612 |             return round(performance)
613 |         except Exception:
    |         ^^^^^^
614 |             return 87
    |

E722 Do not use bare `except`
   --> admin\views.py:621:9
    |
619 |             # Integração com sistema de tarefas se existir
620 |             return 8  # Valor fictício
621 |         except Exception:
    |         ^^^^^^
622 |             return 8
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:644:13
    |
642 |         """Retorna dados de performance da equipe."""
643 |         try:
644 |             from funcionarios.models import Funcionario
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
645 |
646 |             funcionarios = []
    |

E722 Do not use bare `except`
   --> admin\views.py:661:9
    |
660 |             return funcionarios
661 |         except Exception:
    |         ^^^^^^
662 |             # Dados fictícios para demonstração
663 |             return [
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:699:13
    |
698 |             # Buscar atividades de diferentes módulos
699 |             from datetime import timedelta
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
700 |
701 |             from django.contrib.auth import get_user_model
    |

PLC0415 `import` should be at the top-level of a file
   --> admin\views.py:701:13
    |
699 |             from datetime import timedelta
700 |
701 |             from django.contrib.auth import get_user_model
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
702 |
703 |             # Últimos logins
    |

E722 Do not use bare `except`
   --> admin\views.py:720:9
    |
719 |             return activities
720 |         except Exception:
    |         ^^^^^^
721 |             # Atividades fictícias
722 |             return [
    |

PLR0912 Too many branches (17 > 12)
  --> agenda\forms.py:67:9
   |
65 |         }
66 |
67 |     def __init__(self, *args, **kwargs):
   |         ^^^^^^^^
68 |         self.request = kwargs.pop("request", None)
69 |         super().__init__(*args, **kwargs)
   |

PLR0915 Too many statements (54 > 50)
  --> agenda\forms.py:67:9
   |
65 |         }
66 |
67 |     def __init__(self, *args, **kwargs):
   |         ^^^^^^^^
68 |         self.request = kwargs.pop("request", None)
69 |         super().__init__(*args, **kwargs)
   |

PLC0415 `import` should be at the top-level of a file
   --> agenda\forms.py:133:21
    |
131 |                 conversa_id = self.request.GET.get("conversa_id")
132 |                 if conversa_id and not self.instance.pk:
133 |                     from chat.models import Conversa
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |
135 |                     conversa = Conversa.objects.get(id=conversa_id)
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> agenda\forms.py:179:17
    |
177 |               # Verificar sobreposição
178 |               for conflito in conflitos:
179 | /                 if conflito.data_fim:
180 | |                     if data_inicio < conflito.data_fim and (data_fim or data_inicio) > conflito.data_inicio:
    | |____________________________________________________________________________________________________________^
181 |                           raise ValidationError(
182 |                               f'Conflito de horário com o evento "{conflito.titulo}" '
    |
help: Combine `if` statements using `and`

E501 Line too long (125 > 120)
  --> agenda\management\commands\audit_evento_tipo_procedimento.py:29:121
   |
27 |             )
28 |             self.stdout.write(
29 |                 "Após 14 dias consecutivos com Total=0, remover o choice legado em agenda.models.Evento.TIPO_EVENTO_CHOICES."
   |                                                                                                                         ^^^^^
30 |             )
31 |         else:
   |

PLR0912 Too many branches (15 > 12)
  --> agenda\management\commands\send_daily_agenda_digest.py:16:9
   |
14 |         parser.add_argument("--hour", type=int, help="Força a execução como se fosse esta hora (0-23)")
15 |
16 |     def handle(self, *args, **options):
   |         ^^^^^^
17 |         now = timezone.now()
18 |         hora_atual = options.get("hour") if options.get("hour") is not None else now.hour
   |

PLC0415 `import` should be at the top-level of a file
  --> agenda\management\commands\send_daily_agenda_digest.py:45:17
   |
43 |             for uid in usuarios:
44 |                 user = None
45 |                 from django.contrib.auth import get_user_model
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
46 |
47 |                 User = get_user_model()
   |

E501 Line too long (123 > 120)
  --> agenda\management\commands\send_event_reminders.py:62:121
   |
60 |             usuario_destinatario=usuario,
61 |             titulo=titulo,
62 |             mensagem=f"Evento às {evento.data_inicio.strftime('%H:%M')} no dia {evento.data_inicio.strftime('%d/%m/%Y')}.",
   |                                                                                                                         ^^^
63 |             tipo="alert",
64 |             prioridade="alta",
   |

PLC0415 `import` should be at the top-level of a file
  --> agenda\models.py:72:9
   |
71 |     def save(self, *args, **kwargs):  # Garantir uuid e ajustar status compatível
72 |         from uuid import uuid4
   |         ^^^^^^^^^^^^^^^^^^^^^^
73 |
74 |         if not self.uuid:
   |

PLC0415 `import` should be at the top-level of a file
   --> agenda\views.py:259:17
    |
257 |         if conversa_id:
258 |             try:
259 |                 from chat.models import Conversa
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
260 |
261 |                 conversa = Conversa.objects.get(id=conversa_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> agenda\views.py:282:17
    |
280 |         if conversa_id:
281 |             try:
282 |                 from chat.models import Conversa, Mensagem
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
283 |
284 |                 conversa = Conversa.objects.get(id=conversa_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> agenda\views.py:342:9
    |
340 | def aplicar_lembretes_padrao(evento, cleaned_data):
341 |     try:
342 |         from .models import AgendaConfiguracao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
343 |
344 |         tenant = evento.tenant
    |

PLR2004 Magic value used in comparison, consider replacing `12` with a constant variable
   --> agenda\views.py:481:17
    |
479 |     # Criar datas para o mês
480 |     primeiro_dia = date(year, month, 1)
481 |     if month == 12:
    |                 ^^
482 |         ultimo_dia = date(year + 1, 1, 1) - timedelta(days=1)
483 |     else:
    |

PLR2004 Magic value used in comparison, consider replacing `12` with a constant variable
   --> agenda\views.py:505:40
    |
503 |     mes_anterior = month - 1 if month > 1 else 12
504 |     ano_anterior = year if month > 1 else year - 1
505 |     mes_proximo = month + 1 if month < 12 else 1
    |                                        ^^
506 |     ano_proximo = year if month < 12 else year + 1
    |

PLR2004 Magic value used in comparison, consider replacing `12` with a constant variable
   --> agenda\views.py:506:35
    |
504 |     ano_anterior = year if month > 1 else year - 1
505 |     mes_proximo = month + 1 if month < 12 else 1
506 |     ano_proximo = year if month < 12 else year + 1
    |                                   ^^
507 |
508 |     context = {
    |

PLR0911 Too many return statements (8 > 6)
  --> agendamentos\api_views.py:28:9
   |
26 |     """
27 |
28 |     def has_permission(self, request, view):
   |         ^^^^^^^^^^^^^^
29 |         u = request.user
30 |         if not u or not u.is_authenticated:
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\api_views.py:42:13
   |
40 |         # Enforcement opcional de permissões nativas Django
41 |         try:
42 |             from django.conf import settings as dj_settings
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
43 |
44 |             if getattr(dj_settings, "ENABLE_AGENDAMENTOS_MODEL_PERMS", False):
   |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:101:21
    |
 99 |                 )("pk")
100 |                 if pk:
101 |                     from agendamentos.models import Slot as _Slot
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
102 |
103 |                     sl = _Slot.objects.filter(id=pk).select_related("tenant").first()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:109:9
    |
107 |             except Exception:
108 |                 pass
109 |         from clientes.models import AcessoCliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
110 |
111 |         # Se ainda sem tenant: aceitar se usuário tem qualquer acesso ativo (a view lidará com validação específica depois)
    |

E501 Line too long (123 > 120)
   --> agendamentos\api_views.py:111:121
    |
109 |         from clientes.models import AcessoCliente
110 |
111 |         # Se ainda sem tenant: aceitar se usuário tem qualquer acesso ativo (a view lidará com validação específica depois)
    |                                                                                                                         ^^^
112 |         if not tenant:
113 |             return AcessoCliente.objects.filter(usuario=u, cliente__status="active").exists()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:121:5
    |
119 |     Se múltiplos, aceita request.data['cliente_id'] contanto que pertença ao conjunto permitido.
120 |     """
121 |     from clientes.models import Cliente
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
122 |
123 |     tenant = get_current_tenant(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:142:9
    |
140 |     def get_queryset(self):
141 |         tenant = get_current_tenant(self.request)
142 |         from django.core.cache import cache
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
143 |
144 |         from agendamentos.services import get_slots_cache_version
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:144:9
    |
142 |         from django.core.cache import cache
143 |
144 |         from agendamentos.services import get_slots_cache_version
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
145 |
146 |         qs_base = Disponibilidade.objects.filter(tenant=tenant, ativo=True)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:192:9
    |
190 |     def gerar_slots(self, request, pk=None):
191 |         disp = self.get_object()
192 |         from .services import SlotService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
193 |
194 |         criados, existentes = SlotService.gerar_slots(disp)
    |

PLR0912 Too many branches (17 > 12)
   --> agendamentos\api_views.py:203:9
    |
201 |     permission_classes = [permissions.IsAuthenticated, IsAgendamentoProfissionalOuSecretaria]
202 |
203 |     def get_queryset(self):
    |         ^^^^^^^^^^^^
204 |         from django.utils import timezone
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:204:9
    |
203 |     def get_queryset(self):
204 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
205 |
206 |         tenant = get_current_tenant(self.request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:220:9
    |
218 |         servico_id = self.request.query_params.get("servico") or self.request.query_params.get("servico_id")
219 |         # Cache chaveada por filtros básicos
220 |         from django.core.cache import cache
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
221 |
222 |         from agendamentos.services import get_slots_cache_version
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:222:9
    |
220 |         from django.core.cache import cache
221 |
222 |         from agendamentos.services import get_slots_cache_version
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
223 |
224 |         cache_key = None
    |

E501 Line too long (154 > 120)
   --> agendamentos\api_views.py:226:121
    |
224 | …
225 | …
226 | …:{data or '-'}:{disponivel or '-'}:{servico_id or '-'}:{get_slots_cache_version()}"
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
227 | …
228 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:251:17
    |
249 |         if servico_id and tenant is not None:
250 |             try:
251 |                 from django.conf import settings as dj_settings
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
252 |
253 |                 if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:254:21
    |
253 |                 if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
254 |                     from .models import ProfissionalProcedimento
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
255 |
256 |                     qs = qs.filter(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:305:9
    |
303 |         if "tenant_id" not in request.session and slot.tenant_id:
304 |             request.session["tenant_id"] = slot.tenant_id
305 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
306 |
307 |         cliente_id = request.data.get("cliente_id")
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:310:9
    |
308 |         if not cliente_id:
309 |             return Response({"detail": _("cliente_id obrigatório")}, status=400)
310 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
311 |
312 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:318:13
    |
316 |         servico_id = request.data.get("servico_id")
317 |         if servico_id:
318 |             from servicos.models import Servico as _Servico
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
319 |
320 |             try:
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:348:9
    |
346 |     def waitlist(self, request, pk=None):
347 |         slot = self.get_object()
348 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
349 |
350 |         from .services import AgendamentoService
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:350:9
    |
348 |         from clientes.models import Cliente
349 |
350 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
351 |
352 |         cliente_id = request.data.get("cliente_id")
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:391:9
    |
389 |         Replica lógica essencial da v2 evitando duplicação de regras de negócio.
390 |         """
391 |         from rest_framework import serializers as drf_serializers
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
392 |
393 |         from .services import AgendamentoService
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:393:9
    |
391 |         from rest_framework import serializers as drf_serializers
392 |
393 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
394 |
395 |         tenant = get_current_tenant(self.request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:401:21
    |
399 |                 sid = getattr(self.request, "session", {}).get("tenant_id")
400 |                 if sid:
401 |                     from core.models import Tenant as _Tenant
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
402 |
403 |                     tenant = _Tenant.objects.filter(id=sid).first()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:421:13
    |
419 |         # Enforce permissão clínica
420 |         if servico_id:
421 |             from servicos.models import Servico as _Servico
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
422 |
423 |             try:
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\api_views.py:426:17
    |
424 |                 _serv = _Servico.objects.select_related("perfil_clinico").get(id=servico_id)
425 |             except _Servico.DoesNotExist:
426 |                 raise permissions.PermissionDenied(_("Serviço inválido"))
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
427 |             if _serv.is_clinical and not can_schedule_clinical_service(user, _serv):
428 |                 raise permissions.PermissionDenied(str(CLINICAL_SCHEDULING_DENIED_MESSAGE))
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\api_views.py:444:13
    |
442 |                 )
443 |         except ValueError as e:
444 |             raise drf_serializers.ValidationError({"detail": str(e)})
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
445 |         serializer.instance = ag
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:450:9
    |
448 |     @action(detail=True, methods=["post"])
449 |     def cancelar(self, request, pk=None):
450 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
451 |
452 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:462:9
    |
460 |     @action(detail=True, methods=["post"])
461 |     def reagendar(self, request, pk=None):
462 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
463 |
464 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:475:13
    |
473 |                 return Response({"detail": "novo_slot inválido"}, status=400)
474 |         if nova_data_inicio:
475 |             from django.utils.dateparse import parse_datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
476 |
477 |             nova_data_inicio = parse_datetime(nova_data_inicio)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:479:13
    |
477 |             nova_data_inicio = parse_datetime(nova_data_inicio)
478 |         if nova_data_fim:
479 |             from django.utils.dateparse import parse_datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
480 |
481 |             nova_data_fim = parse_datetime(nova_data_fim)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:498:9
    |
496 |     @action(detail=True, methods=["post"])
497 |     def checkin(self, request, pk=None):
498 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
499 |
500 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:509:9
    |
507 |     @action(detail=True, methods=["post"])
508 |     def concluir(self, request, pk=None):
509 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
510 |
511 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:520:9
    |
518 |     @action(detail=True, methods=["post"])
519 |     def resolver_pendencias(self, request, pk=None):
520 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
521 |
522 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:531:9
    |
529 |         Retorna o id do evento criado/atualizado ou null se desabilitado.
530 |         """
531 |         from .services import SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
532 |
533 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:546:9
    |
544 |     def get_queryset(self):  # possibilidade de filtros/otimizações futuras
545 |         qs = super().get_queryset()
546 |         from django.conf import settings as _s
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
547 |
548 |         if not getattr(_s, "USE_NOVO_AGENDAMENTO", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:553:9
    |
552 |       def get_serializer_class(self):
553 | /         from .serializers import (
554 | |             AgendamentoV2CreateSerializer,
555 | |             AgendamentoV2DetailSerializer,
556 | |             AgendamentoV2ListSerializer,
557 | |         )
    | |_________^
558 |
559 |           if self.action in ("list", "stats", "capacidade"):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:569:9
    |
567 |     @action(detail=False, methods=["get"])
568 |     def stats(self, request):
569 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
570 |
571 |         tenant = get_current_tenant(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:589:9
    |
587 |     def capacidade(self, request):
588 |         """Capacidade agregada por profissional e data (filtros opcionais data_start, data_end)."""
589 |         from django.db.models import Count, Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
590 |
591 |         tenant = get_current_tenant(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:608:9
    |
606 |     def perform_create(self, serializer):
607 |         # Substitui lógica de v1 para usar service e depois serializar
608 |         from rest_framework import serializers as drf_serializers
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
609 |
610 |         from .services import AgendamentoService
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:610:9
    |
608 |         from rest_framework import serializers as drf_serializers
609 |
610 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
611 |
612 |         tenant = get_current_tenant(self.request)
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\api_views.py:643:13
    |
641 |                 )
642 |         except ValueError as e:
643 |             raise drf_serializers.ValidationError({"detail": str(e)})
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
644 |         serializer.instance = ag
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:649:9
    |
647 |         response = super().create(request, *args, **kwargs)
648 |         # Re-serializa com detail serializer para incluir campos derivados (id, auditoria vazia)
649 |         from .serializers import AgendamentoV2DetailSerializer
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
650 |
651 |         if response.status_code == 201 and isinstance(response.data, dict) and "id" not in response.data:
    |

PLR2004 Magic value used in comparison, consider replacing `201` with a constant variable
   --> agendamentos\api_views.py:651:36
    |
649 |         from .serializers import AgendamentoV2DetailSerializer
650 |
651 |         if response.status_code == 201 and isinstance(response.data, dict) and "id" not in response.data:
    |                                    ^^^
652 |             (
653 |                 getattr(getattr(response, "data", None), "get", lambda *_: None)("id")
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:680:9
    |
679 |     def get_queryset(self):
680 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
681 |
682 |         tenant = get_current_tenant(self.request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:697:17
    |
695 |         if servico_id and tenant is not None:
696 |             try:
697 |                 from django.conf import settings as dj_settings
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
698 |
699 |                 if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:700:21
    |
699 |                 if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
700 |                     from .models import ProfissionalProcedimento
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
701 |
702 |                     qs = qs.filter(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:711:9
    |
709 |             except Exception:
710 |                 pass
711 |         from django.core.cache import cache
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
712 |
713 |         from agendamentos.services import get_slots_cache_version
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:713:9
    |
711 |         from django.core.cache import cache
712 |
713 |         from agendamentos.services import get_slots_cache_version
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
714 |
715 |         cache_key = f"ag:slots_cli:{tenant.id if tenant else '-'}:{profissional_id or '-'}:{data or '-'}:{servico_id or '-'}:{get_slo…
    |

E501 Line too long (153 > 120)
   --> agendamentos\api_views.py:715:121
    |
713 | …
714 | …
715 | …issional_id or '-'}:{data or '-'}:{servico_id or '-'}:{get_slots_cache_version()}"
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
716 | …
717 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:732:9
    |
730 |         if "tenant_id" not in request.session and slot.tenant_id:
731 |             request.session["tenant_id"] = slot.tenant_id
732 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
733 |
734 |         cliente = _resolver_cliente_do_usuario(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:739:13
    |
737 |         servico_id = request.data.get("servico_id")
738 |         if servico_id:
739 |             from servicos.models import Servico as _Servico
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
740 |
741 |             try:
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:794:9
    |
793 |     def perform_create(self, serializer):
794 |         from rest_framework import serializers as drf_serializers
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
795 |
796 |         from .services import AgendamentoService
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:796:9
    |
794 |         from rest_framework import serializers as drf_serializers
795 |
796 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
797 |
798 |         tenant = get_current_tenant(self.request)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:813:13
    |
811 |         servico = self.request.data.get("servico_id")
812 |         if servico:
813 |             from servicos.models import Servico as _Servico
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
814 |
815 |             try:
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\api_views.py:818:17
    |
816 |                 _serv = _Servico.objects.select_related("perfil_clinico").get(id=servico)
817 |             except _Servico.DoesNotExist:
818 |                 raise permissions.PermissionDenied(_("Serviço inválido"))
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
819 |             if _serv.is_clinical and not can_schedule_clinical_service(user, _serv):
820 |                 raise permissions.PermissionDenied(str(CLINICAL_SCHEDULING_DENIED_MESSAGE))
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\api_views.py:837:13
    |
835 |                 )
836 |         except ValueError as e:
837 |             raise drf_serializers.ValidationError({"detail": str(e)})
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
838 |         serializer.instance = ag
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:842:9
    |
840 |     @action(detail=True, methods=["post"])
841 |     def cancelar(self, request, pk=None):
842 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
843 |
844 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:854:9
    |
852 |     @action(detail=True, methods=["post"])
853 |     def reagendar(self, request, pk=None):
854 |         from .services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
855 |
856 |         ag = self.get_object()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:867:13
    |
865 |                 return Response({"detail": "novo_slot inválido"}, status=400)
866 |         if nova_data_inicio:
867 |             from django.utils.dateparse import parse_datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
868 |
869 |             nova_data_inicio = parse_datetime(nova_data_inicio)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\api_views.py:871:13
    |
869 |             nova_data_inicio = parse_datetime(nova_data_inicio)
870 |         if nova_data_fim:
871 |             from django.utils.dateparse import parse_datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
872 |
873 |             nova_data_fim = parse_datetime(nova_data_fim)
    |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\apps.py:10:9
   |
 9 |     def ready(self):
10 |         from . import signals  # noqa: F401
   |         ^^^^^^^^^^^^^^^^^^^^^
   |

PLR0912 Too many branches (16 > 12)
  --> agendamentos\management\commands\backfill_agendamentos.py:20:9
   |
18 |         )
19 |
20 |     def handle(self, *args, **options):
   |         ^^^^^^
21 |         limit = options["limit"]
22 |         dry = options["dry_run"]
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\management\commands\backfill_agendamentos.py:45:29
   |
43 |                         if legacy_slot.disponibilidade_id:
44 |                             ld = legacy_slot.disponibilidade
45 |                             from agendamentos.models import Disponibilidade
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
46 |
47 |                             disp = Disponibilidade.objects.filter(
   |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\management\commands\backfill_agendamentos.py:128:9
    |
127 |     def _seed_permissions(self):
128 |         from django.contrib.auth.models import Group, Permission
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
129 |
130 |         modelos = ["agendamento", "disponibilidade", "slot", "auditoriaagendamento"]
    |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\management\commands\seed_agendamentos_perms.py:8:9
   |
 7 |     def handle(self, *args, **options):
 8 |         from django.contrib.auth.models import Group, Permission
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 |
10 |         modelos = ["agendamento", "disponibilidade", "slot", "auditoriaagendamento"]
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\models.py:65:9
   |
63 |     @property
64 |     def disponivel(self):
65 |         from django.conf import settings
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
66 |
67 |         limite = self.capacidade_total
   |

E501 Line too long (127 > 120)
   --> agendamentos\models.py:154:121
    |
153 |     def __str__(self):
154 |         return f"{self.profissional} habilitado em {getattr(self.servico, 'nome_servico', self.servico_id)} ({self.tenant_id})"
    |                                                                                                                         ^^^^^^^
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\serializers.py:113:9
    |
111 |     def get_auditoria(self, obj):
112 |         # Lazy import para evitar custo em listagem
113 |         from .models import AuditoriaAgendamento
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
114 |
115 |         eventos = AuditoriaAgendamento.objects.filter(agendamento=obj).order_by("-created_at")[:20]
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\serializers.py:146:13
    |
144 |         # Autocompletar horários via slot quando fornecido e datas ausentes
145 |         if slot and (not data_inicio or not data_fim):
146 |             from datetime import timedelta
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
147 |
148 |             attrs["data_inicio"] = slot.horario
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:100:9
    |
 98 |       if not v:
 99 |           v = str(time.time())
100 | /         try:
101 | |             cache.set(_SLOTS_CACHE_VERSION_KEY, v, 86400)  # 1 dia de retenção da versão
102 | |         except Exception:
103 | |             pass
    | |________________^
104 |       return v
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:117:5
    |
115 |     Protegido por flag ENABLE_CAPACITY_GAUGES.
116 |     """
117 |     from django.conf import settings as _s
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
118 |
119 |     if not getattr(_s, "ENABLE_CAPACITY_GAUGES", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:129:5
    |
127 |         base = base.filter(tenant_id=tenant_id)
128 |     # agrega por profissional
129 |     from django.db.models import Sum
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
130 |
131 |     agg = base.values("profissional_id").annotate(ct=Sum("capacidade_total"), cu=Sum("capacidade_utilizada"))
    |

PLR0912 Too many branches (18 > 12)
   --> agendamentos\services.py:155:5
    |
155 | def _mirror_evento(agendamento: Agendamento, *, criar_se_ausente=True):  # pragma: no cover (feature flag)
    |     ^^^^^^^^^^^^^^
156 |     """Cria ou atualiza um Evento espelho quando ENABLE_EVENT_MIRROR=True.
157 |     Usa a mesma chave de metadata já utilizada pelos signals históricos: 'evento_agenda_id'.
    |

PLR0915 Too many statements (55 > 50)
   --> agendamentos\services.py:155:5
    |
155 | def _mirror_evento(agendamento: Agendamento, *, criar_se_ausente=True):  # pragma: no cover (feature flag)
    |     ^^^^^^^^^^^^^^
156 |     """Cria ou atualiza um Evento espelho quando ENABLE_EVENT_MIRROR=True.
157 |     Usa a mesma chave de metadata já utilizada pelos signals históricos: 'evento_agenda_id'.
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:163:9
    |
161 |         return
162 |     try:
163 |         from agenda.models import Evento
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
164 |     except Exception:
165 |         return
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:173:13
    |
171 |           try:
172 |               agendamento.save(update_fields=["metadata"])
173 | /             try:  # pragma: no cover
174 | |                 EVENTO_METADATA_MIGRACOES_TOTAL.inc()
175 | |             except Exception:
176 | |                 pass
    | |____________________^
177 |           except Exception:
178 |               pass
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:200:13
    |
198 |               agendamento.save(update_fields=["metadata"])
199 |           except Exception:
200 | /             try:  # pragma: no cover
201 | |                 MIRROR_FALHAS_TOTAL.inc()
202 | |             except Exception:
203 | |                 pass
    | |____________________^
204 |               return
205 |       elif evento_id:
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:225:13
    |
223 |                       ev.save(update_fields=["data_inicio", "data_fim", "status", "data_atualizacao"])
224 |           except Exception:
225 | /             try:  # pragma: no cover
226 | |                 MIRROR_FALHAS_TOTAL.inc()
227 | |             except Exception:
228 | |                 pass
    | |____________________^
229 |               return
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:242:13
    |
240 |             if not locked.disponivel:
241 |                 raise ValueError("Slot indisponível")
242 |             from django.conf import settings as _s
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
243 |
244 |             limite = locked.capacidade_total
    |

PLR0913 Too many arguments in function definition (11 > 5)
   --> agendamentos\services.py:291:9
    |
289 | class AgendamentoService:
290 |     @staticmethod
291 |     def criar(
    |         ^^^^^
292 |         *,
293 |         tenant,
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:321:13
    |
319 |               )
320 |           except ValueError:
321 | /             try:  # pragma: no cover
322 | |                 AGENDAMENTOS_CRIACAO_ERROS_TOTAL.inc()
323 | |             except Exception:
324 | |                 pass
    | |____________________^
325 |               raise
    |
help: Replace with `contextlib.suppress(Exception)`

PLR0913 Too many arguments in function definition (11 > 5)
   --> agendamentos\services.py:328:9
    |
327 |     @staticmethod
328 |     def _criar_impl(
    |         ^^^^^^^^^^^
329 |         *,
330 |         tenant,
    |

PLR0912 Too many branches (25 > 12)
   --> agendamentos\services.py:328:9
    |
327 |     @staticmethod
328 |     def _criar_impl(
    |         ^^^^^^^^^^^
329 |         *,
330 |         tenant,
    |

PLR0915 Too many statements (68 > 50)
   --> agendamentos\services.py:328:9
    |
327 |     @staticmethod
328 |     def _criar_impl(
    |         ^^^^^^^^^^^
329 |         *,
330 |         tenant,
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:342:9
    |
340 |         user=None,
341 |     ):
342 |         from servicos.models import Servico as Serv
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
343 |
344 |         proc_obj = None
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:346:9
    |
344 |         proc_obj = None
345 |         # Flag para exigir servico
346 |         from django.conf import settings as dj_settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
347 |
348 |         require_serv = getattr(dj_settings, "REQUIRE_SERVICO", False)
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> agendamentos\services.py:356:21
    |
354 |                     proc_obj = Serv.objects.get(id=servico, tenant=tenant, ativo=True, is_clinical=True)
355 |                 except Serv.DoesNotExist:
356 |                     raise ValueError("Serviço inválido")
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
357 |             else:
358 |                 proc_obj = servico
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:363:17
    |
361 |             # Validação de competência Profissional x Serviço (feature flag)
362 |             if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
363 |                 from .models import ProfissionalProcedimento
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
364 |
365 |                 ok = ProfissionalProcedimento.objects.filter(
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> agendamentos\services.py:408:9
    |
406 |           if data_fim <= data_inicio:
407 |               raise ValueError("data_fim deve ser maior que data_inicio")
408 | /         if slot and proc_obj:
409 | |             # Heurística simples de incompatibilidade (slot único curto vs duração longa)
410 | |             if (data_fim - data_inicio).total_seconds() > 3600:  # >1h
    | |_______________________________________________________________^
411 |                   raise ValueError("Duração do serviço maior que o slot disponível")
412 |           with transaction.atomic():
    |
help: Combine `if` statements using `and`

PLR2004 Magic value used in comparison, consider replacing `3600` with a constant variable
   --> agendamentos\services.py:410:59
    |
408 |         if slot and proc_obj:
409 |             # Heurística simples de incompatibilidade (slot único curto vs duração longa)
410 |             if (data_fim - data_inicio).total_seconds() > 3600:  # >1h
    |                                                           ^^^^
411 |                 raise ValueError("Duração do serviço maior que o slot disponível")
412 |         with transaction.atomic():
    |

PLR0915 Too many statements (51 > 50)
   --> agendamentos\services.py:462:9
    |
461 |     @staticmethod
462 |     def cancelar(agendamento: Agendamento, *, motivo: str, user=None):
    |         ^^^^^^^^
463 |         try:
464 |             if agendamento.status in ["CANCELADO", "CONCLUIDO"]:
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:467:17
    |
465 |                 return agendamento
466 |             if agendamento.origem == "CLIENTE":  # antecedência só para cliente
467 |                 from django.utils import timezone
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
468 |
469 |                 antecedencia = (agendamento.data_inicio - timezone.now()).total_seconds() / 60.0
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:473:13
    |
471 |                       raise ValueError("Cancelamento não permitido dentro da antecedência mínima")
472 |           except ValueError:
473 | /             try:  # pragma: no cover
474 | |                 AGENDAMENTOS_CANCELAMENTO_ERROS_TOTAL.inc()
475 | |             except Exception:
476 | |                 pass
    | |____________________^
477 |               raise
478 |           anterior = agendamento.status
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:482:13
    |
480 |         agendamento.save(update_fields=["status", "updated_at"])
481 |         if agendamento.slot:
482 |             from django.conf import settings as _s
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
483 |
484 |             with transaction.atomic():
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:508:29
    |
506 |                             # Calcular fim (usa duração slot ou disponibilidade)
507 |                             disp = locked.disponibilidade
508 |                             from datetime import timedelta as _td
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
509 |
510 |                             fim = inicio + _td(minutes=disp.duracao_slot_minutos)
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:532:29
    |
530 |   …                         motivo=f"Promoção automática após cancelamento #{agendamento.id}",
531 |   …                     )
532 | / …                     try:  # pragma: no cover
533 | | …                         WAITLIST_PROMOCOES_TOTAL.inc()
534 | | …                     except Exception:
535 | | …                         pass
    | |______________________________^
536 |   …                     bump_slots_cache_version()
537 |   …                     _update_capacity_gauges(locked.tenant_id)
    |
help: Replace with `contextlib.suppress(Exception)`

E501 Line too long (121 > 120)
   --> agendamentos\services.py:544:121
    |
542 | …                         msg_prof=f"Cliente {entry.cliente} promovido do waitlist para slot {locked.horario}.",
543 | …                         titulo_cli="Sua vaga ficou disponível",
544 | …                         msg_cli=f"Seu agendamento foi criado a partir da lista de espera para {locked.horario}.",
    |                                                                                                                   ^
545 | …                         tipo="info",
546 | …                     )
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> agendamentos\services.py:568:9
    |
567 |     @staticmethod
568 |     def reagendar(
    |         ^^^^^^^^^
569 |         agendamento: Agendamento,
570 |         *,
    |

PLR0912 Too many branches (15 > 12)
   --> agendamentos\services.py:568:9
    |
567 |     @staticmethod
568 |     def reagendar(
    |         ^^^^^^^^^
569 |         agendamento: Agendamento,
570 |         *,
    |

PLR0915 Too many statements (53 > 50)
   --> agendamentos\services.py:568:9
    |
567 |     @staticmethod
568 |     def reagendar(
    |         ^^^^^^^^^
569 |         agendamento: Agendamento,
570 |         *,
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:588:13
    |
586 |                   raise ValueError("Limite de reagendamentos excedido")
587 |           except ValueError:
588 | /             try:  # pragma: no cover
589 | |                 AGENDAMENTOS_REAGENDAMENTO_ERROS_TOTAL.inc()
590 | |             except Exception:
591 | |                 pass
    | |____________________^
592 |               raise
593 |           AgendamentoService.cancelar(agendamento, motivo=motivo or "Reagendado", user=user)
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:604:25
    |
602 |                     disp = getattr(novo_slot, "disponibilidade", None)
603 |                     if disp and getattr(disp, "duracao_slot_minutos", None):
604 |                         from datetime import timedelta as _td
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
605 |
606 |                         nova_data_fim = nova_data_inicio + _td(minutes=disp.duracao_slot_minutos)
    |

E501 Line too long (122 > 120)
   --> agendamentos\services.py:654:121
    |
652 |             msg_prof=f"Agendamento #{novo.id} ({nome_proc}) reagendado (anterior #{agendamento.id}).",
653 |             titulo_cli=f"Agendamento Reagendado - {nome_proc}",
654 |             msg_cli=f"Seu agendamento ({nome_proc}) foi reagendado para {novo.data_inicio}. (original #{agendamento.id})",
    |                                                                                                                         ^^
655 |             tipo="info",
656 |         )
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:672:13
    |
670 |                   raise ValueError("Pendências clínicas não resolvidas: " + ", ".join(pendencias))
671 |           except ValueError:
672 | /             try:  # pragma: no cover
673 | |                 AGENDAMENTOS_CHECKIN_ERROS_TOTAL.inc()
674 | |             except Exception:
675 | |                 pass
    | |____________________^
676 |               raise
677 |           agendamento.status = "EM_ANDAMENTO"
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:695:13
    |
693 |                   raise ValueError("Conclusão só permitida para EM_ANDAMENTO ou CONFIRMADO")
694 |           except ValueError:
695 | /             try:  # pragma: no cover
696 | |                 AGENDAMENTOS_CONCLUSAO_ERROS_TOTAL.inc()
697 | |             except Exception:
698 | |                 pass
    | |____________________^
699 |               raise
700 |           anterior = agendamento.status
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:726:9
    |
724 |     @staticmethod
725 |     def inscrever_waitlist(slot: Slot, *, cliente, prioridade=100):
726 |         from django.conf import settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
727 |
728 |         if not getattr(settings, "ENABLE_WAITLIST", False):
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:761:13
    |
759 |           try:
760 |               slot = SlotService.reservar(slot, quantidade=quantidade)
761 | /             try:  # pragma: no cover
762 | |                 SLOTS_RESERVADOS_TOTAL.inc()
763 | |             except Exception:
764 | |                 pass
    | |____________________^
765 |               return slot
766 |           except Exception:
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:767:13
    |
765 |               return slot
766 |           except Exception:
767 | /             try:  # pragma: no cover
768 | |                 SLOTS_RESERVA_ERROS_TOTAL.inc()
769 | |             except Exception:
770 | |                 pass
    | |____________________^
771 |               raise
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:776:9
    |
774 |     @staticmethod
775 |     def criar_agendamento(**kwargs):
776 |         from time import monotonic
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
777 |
778 |         t0 = monotonic()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:790:9
    |
788 |     @staticmethod
789 |     def cancelar_agendamento(agendamento: Agendamento, *, motivo: str, user=None):
790 |         from time import monotonic
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
791 |
792 |         t0 = monotonic()
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> agendamentos\services.py:805:9
    |
804 |     @staticmethod
805 |     def reagendar_agendamento(
    |         ^^^^^^^^^^^^^^^^^^^^^
806 |         agendamento: Agendamento,
807 |         *,
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\services.py:814:9
    |
812 |         motivo=None,
813 |     ):
814 |         from time import monotonic
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
815 |
816 |         t0 = monotonic()
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:836:9
    |
834 |       def checkin(agendamento: Agendamento, *, user=None):
835 |           ag = AgendamentoService.checkin(agendamento, user=user)
836 | /         try:  # pragma: no cover
837 | |             AGENDAMENTOS_CHECKIN_TOTAL.inc()
838 | |         except Exception:
839 | |             pass
    | |________________^
840 |           return ag
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:845:9
    |
843 |       def concluir(agendamento: Agendamento, *, user=None):
844 |           ag = AgendamentoService.concluir(agendamento, user=user)
845 | /         try:  # pragma: no cover
846 | |             AGENDAMENTOS_CONCLUIDOS_TOTAL.inc()
847 | |         except Exception:
848 | |             pass
    | |________________^
849 |           return ag
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:858:9
    |
856 |       def inscrever_waitlist(slot: Slot, *, cliente, prioridade=100):
857 |           obj = AgendamentoService.inscrever_waitlist(slot, cliente=cliente, prioridade=prioridade)
858 | /         try:  # pragma: no cover
859 | |             WAITLIST_INSCRICOES_TOTAL.inc()
860 | |         except Exception:
861 | |             pass
    | |________________^
862 |           return obj
    |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> agendamentos\services.py:869:9
    |
867 |           Retorna o id do evento (ou None se desabilitado/não criado)."""
868 |           _mirror_evento(agendamento, criar_se_ausente=True)
869 | /         try:  # pragma: no cover
870 | |             EVENTO_SYNC_TOTAL.inc()
871 | |         except Exception:
872 | |             pass
    | |________________^
873 |           # Recarrega metadata atual (pode ter sido alterada por _mirror_evento)
874 |           agendamento.refresh_from_db(fields=["metadata"])
    |
help: Replace with `contextlib.suppress(Exception)`

E501 Line too long (128 > 120)
  --> agendamentos\tasks.py:51:121
   |
49 |                         usuario_destinatario=ac.usuario,
50 |                         titulo="Você não compareceu",
51 |                         mensagem=f"Seu agendamento #{ag.id} foi marcado como não comparecido. Entre em contato para reagendar.",
   |                                                                                                                         ^^^^^^^^
52 |                         tipo="warning",
53 |                         modulo_origem="agendamentos",
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\tests.py:35:9
   |
33 |         )
34 |         # Criar manualmente dois slots para teste
35 |         from datetime import datetime
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |
37 |         timezone.get_current_timezone()
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\tests.py:74:9
   |
73 |     def test_reserva_slot_erros_metric(self):
74 |         from agendamentos.services import SLOTS_RESERVA_ERROS_TOTAL, SchedulingService
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
75 |
76 |         # Forçar lotação do slot
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\tests.py:88:9
   |
86 |     @override_settings(AG_SLOTS_CACHE_TTL=5)
87 |     def test_cache_slots_invalida_em_reserva(self):
88 |         from rest_framework.test import APIRequestFactory, force_authenticate
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
89 |
90 |         from .api_views import SlotViewSet
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\tests.py:90:9
   |
88 |         from rest_framework.test import APIRequestFactory, force_authenticate
89 |
90 |         from .api_views import SlotViewSet
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
91 |
92 |         factory = APIRequestFactory()
   |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:114:9
    |
112 |     @override_settings(AG_DISP_CACHE_TTL=5)
113 |     def test_cache_disponibilidades_por_papel(self):
114 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
115 |
116 |         from .api_views import DisponibilidadeViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:116:9
    |
114 |         from rest_framework.test import APIRequestFactory, force_authenticate
115 |
116 |         from .api_views import DisponibilidadeViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
117 |
118 |         factory = APIRequestFactory()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:133:9
    |
131 |     @override_settings(ENABLE_CAPACITY_GAUGES=True)
132 |     def test_gauges_capacidade_atualizam_em_gerar_slots(self):
133 |         from agendamentos.services import SLOTS_CAP_TOTAL_GAUGE
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |
135 |         # Criar uma disponibilidade nova e gerar slots para garantir atualização
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:154:9
    |
153 |     def test_counters_erros_criacao(self):
154 |         from agendamentos.services import AGENDAMENTOS_CRIACAO_ERROS_TOTAL
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
155 |
156 |         # Forçar erro: serviço obrigatório se flag REQUIRE_SERVICO=True (simular via override)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:172:9
    |
170 |     @override_settings(ENABLE_EVENT_MIRROR=True)
171 |     def test_counter_migracao_metadata_evento(self):
172 |         from agendamentos.services import SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
173 |
174 |         # Criar agendamento com metadata legado simulada
    |

E501 Line too long (132 > 120)
   --> agendamentos\tests.py:278:121
    |
276 |     def setUp(self):
277 |         self.tenant = Tenant.objects.create(name="TC", subdomain="tc")
278 |         # Profissional principal usado como self.prof e também self.user (para compatibilidade com outros testes que usam self.user)
    |                                                                                                                         ^^^^^^^^^^^^
279 |         self.prof = User.objects.create_user(username="prof_cc", password="x", is_staff=True)
280 |         self.user = self.prof
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:296:9
    |
294 |             capacidade_por_slot=1,
295 |         )
296 |         from datetime import datetime
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
297 |
298 |         self.slot = Slot.objects.create(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:314:9
    |
312 |         )
313 |         # Serviço clínico para testes legado (substitui self.procedimento)
314 |         from datetime import timedelta as td
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
315 |
316 |         self.servico_cc = Servico.objects.create(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:348:9
    |
347 |     def test_concorrencia_reserva(self):
348 |         import threading
    |         ^^^^^^^^^^^^^^^^
349 |
350 |         t1 = threading.Thread(target=self._tentar_reservar, args=(self.c1,))
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:401:9
    |
399 |         # Criar segundo cliente e inscrever na waitlist deste slot (lotado)
400 |         c2 = Cliente.objects.create(tenant=self.tenant, nome_razao_social="Cliente 2", tipo_pessoa="PF")
401 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
402 |
403 |         S.inscrever_waitlist(self.slot, cliente=c2, prioridade=10)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:412:9
    |
410 |         self.assertEqual(novo.metadata.get("waitlist_promocao"), True)
411 |         # WaitlistEntry deve estar PROMOVIDO
412 |         from .models import WaitlistEntry
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
413 |
414 |         w = WaitlistEntry.objects.get(slot=self.slot, cliente=c2)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:472:9
    |
470 |             tipo_servico="Teste",
471 |         )
472 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
473 |
474 |         S.checkin(ag)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:493:9
    |
491 |         )
492 |         self.assertIn("pendencias", ag.metadata)
493 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
494 |
495 |         with self.assertRaises(ValueError):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:519:9
    |
517 |         )
518 |         self.assertIn("pendencias", ag.metadata)
519 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
520 |
521 |         S.resolver_pendencias(ag)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:541:9
    |
539 |             tipo_servico="Consulta",
540 |         )
541 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
542 |
543 |         with self.assertRaises(ValueError):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:559:9
    |
557 |             tipo_servico="Teste",
558 |         )
559 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
560 |
561 |         cadeia = [ag]
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:582:9
    |
581 |     def test_overbooking_controlado_flag(self):
582 |         from django.conf import settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
583 |
584 |         if not getattr(settings, "ENABLE_CONTROLLED_OVERBOOK", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:606:9
    |
605 |     def test_waitlist(self):
606 |         from django.conf import settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
607 |
608 |         if not getattr(settings, "ENABLE_WAITLIST", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:613:9
    |
611 |         SlotService.reservar(self.slot)
612 |         cliente2 = Cliente.objects.create(tenant=self.tenant, nome_razao_social="Cliente 2", tipo_pessoa="PF")
613 |         from .services import AgendamentoService as S
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
614 |
615 |         entry = S.inscrever_waitlist(self.slot, cliente=cliente2, prioridade=50)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:620:9
    |
618 |     def test_reserva_api_slot_com_servico(self):
619 |         # Simula chamada da ação reservar usando serviço para duração automática
620 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
621 |
622 |         from .api_views import SlotViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:622:9
    |
620 |         from rest_framework.test import APIRequestFactory, force_authenticate
621 |
622 |         from .api_views import SlotViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
623 |
624 |         factory = APIRequestFactory()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:640:9
    |
638 |         inicio = timezone.datetime.fromisoformat(data["data_inicio"].replace("Z", "+00:00"))
639 |         fim = timezone.datetime.fromisoformat(data["data_fim"].replace("Z", "+00:00"))
640 |         from servicos.models import ServicoClinico
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
641 |
642 |         sc = ServicoClinico.objects.get(servico=self.servico)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:682:9
    |
680 |         evento_id = (ag.metadata or {}).get("evento_agenda_id")
681 |         self.assertIsNotNone(evento_id, "Evento espelho não criado")
682 |         from agenda.models import Evento
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
683 |
684 |         ev = Evento.objects.get(id=evento_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:705:9
    |
703 |         self.cliente = Cliente.objects.create(tenant=self.tenant, nome_razao_social="Cliente Sync", tipo_pessoa="PF")
704 |         hoje = timezone.localdate()
705 |         from datetime import datetime as dt
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
706 |
707 |         tz = timezone.get_current_timezone()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:738:9
    |
737 |     def test_sync_evento_endpoint_retem_ou_cria(self):
738 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
739 |
740 |         from .api_views import AgendamentoViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:740:9
    |
738 |         from rest_framework.test import APIRequestFactory, force_authenticate
739 |
740 |         from .api_views import AgendamentoViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
741 |
742 |         # Remover chave para forçar recriação
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:755:9
    |
753 |         self.assertEqual(resp.status_code, 200, getattr(resp, "data", None))
754 |         self.assertIsNotNone(resp.data.get("evento_id"))
755 |         from agenda.models import Evento
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
756 |
757 |         self.assertTrue(Evento.objects.filter(id=resp.data["evento_id"]).exists())
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:764:9
    |
762 |         meta = self.ag.metadata or {}
763 |         # Criar evento espelho removendo chave atual e usando nome legado
764 |         from agenda.models import Evento
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
765 |
766 |         ev = Evento.objects.create(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:781:9
    |
779 |         self.ag.save(update_fields=["metadata"])
780 |         # Chamar sync_evento para disparar migração
781 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
782 |
783 |         from .api_views import AgendamentoViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:783:9
    |
781 |         from rest_framework.test import APIRequestFactory, force_authenticate
782 |
783 |         from .api_views import AgendamentoViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
784 |
785 |         factory = APIRequestFactory()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:798:9
    |
796 |     @override_settings(ENABLE_EVENT_MIRROR=False)
797 |     def test_sync_evento_endpoint_desabilitado(self):
798 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
799 |
800 |         from .api_views import AgendamentoViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:800:9
    |
798 |         from rest_framework.test import APIRequestFactory, force_authenticate
799 |
800 |         from .api_views import AgendamentoViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
801 |
802 |         factory = APIRequestFactory()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:823:9
    |
822 |     def test_counter_incrementa_criacao(self):
823 |         from agendamentos.services import AGENDAMENTOS_CRIADOS_TOTAL, SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
824 |
825 |         inicio = timezone.now() + timedelta(hours=1)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:868:9
    |
867 |     def test_sync_evento_nao_cria_quando_flag_off(self):
868 |         from rest_framework.test import APIRequestFactory, force_authenticate
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
869 |
870 |         from .api_views import AgendamentoViewSet
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:870:9
    |
868 |         from rest_framework.test import APIRequestFactory, force_authenticate
869 |
870 |         from .api_views import AgendamentoViewSet
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
871 |
872 |         self.assertIsNone((self.ag.metadata or {}).get("evento_agenda_id"))
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:893:9
    |
891 |         # Criar dois slots para reagendamento
892 |         hoje = timezone.localdate()
893 |         from datetime import datetime as dt
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
894 |
895 |         tz = timezone.get_current_timezone()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:931:9
    |
930 |     def test_cancelamento_incrementa_counter(self):
931 |         from agendamentos.services import AGENDAMENTOS_CANCELADOS_TOTAL, SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
932 |
933 |         base_val = getattr(getattr(AGENDAMENTOS_CANCELADOS_TOTAL, "_value", None), "get", lambda: None)()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:940:9
    |
939 |     def test_reagendamento_incrementa_counter(self):
940 |         from agendamentos.services import AGENDAMENTOS_REAGENDADOS_TOTAL, SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
941 |
942 |         base_val = getattr(getattr(AGENDAMENTOS_REAGENDADOS_TOTAL, "_value", None), "get", lambda: None)()
    |

F811 Redefinition of unused `test_cancelamento_incrementa_counter` from line 930
   --> agendamentos\tests.py:949:9
    |
947 |             self.assertGreaterEqual(novo_val, base_val + 1)
948 |
949 |     def test_cancelamento_incrementa_counter(self):
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `test_cancelamento_incrementa_counter` redefined here
950 |         from agendamentos.services import AGENDAMENTOS_CANCELADOS_TOTAL, SchedulingService
    |
   ::: agendamentos\tests.py:930:9
    |
928 |         )
929 |
930 |     def test_cancelamento_incrementa_counter(self):
    |         ------------------------------------ previous definition of `test_cancelamento_incrementa_counter` here
931 |         from agendamentos.services import AGENDAMENTOS_CANCELADOS_TOTAL, SchedulingService
    |
help: Remove definition: `test_cancelamento_incrementa_counter`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:950:9
    |
949 |     def test_cancelamento_incrementa_counter(self):
950 |         from agendamentos.services import AGENDAMENTOS_CANCELADOS_TOTAL, SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
951 |
952 |         base_val = getattr(getattr(AGENDAMENTOS_CANCELADOS_TOTAL, "_value", None), "get", lambda: None)()
    |

F811 Redefinition of unused `test_reagendamento_incrementa_counter` from line 939
   --> agendamentos\tests.py:958:9
    |
956 |             self.assertGreaterEqual(novo_val, base_val + 1)
957 |
958 |     def test_reagendamento_incrementa_counter(self):
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `test_reagendamento_incrementa_counter` redefined here
959 |         from agendamentos.services import AGENDAMENTOS_REAGENDADOS_TOTAL, SchedulingService
    |
   ::: agendamentos\tests.py:939:9
    |
937 |             self.assertGreaterEqual(novo_val, base_val + 1)
938 |
939 |     def test_reagendamento_incrementa_counter(self):
    |         ------------------------------------- previous definition of `test_reagendamento_incrementa_counter` here
940 |         from agendamentos.services import AGENDAMENTOS_REAGENDADOS_TOTAL, SchedulingService
    |
help: Remove definition: `test_reagendamento_incrementa_counter`

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:959:9
    |
958 |     def test_reagendamento_incrementa_counter(self):
959 |         from agendamentos.services import AGENDAMENTOS_REAGENDADOS_TOTAL, SchedulingService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
960 |
961 |         base_val = getattr(getattr(AGENDAMENTOS_REAGENDADOS_TOTAL, "_value", None), "get", lambda: None)()
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\tests.py:994:9
    |
992 |         )
993 |         # Um slot futuro
994 |         from datetime import datetime as dt
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
995 |
996 |         tz = timezone.get_current_timezone()
    |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1013:9
     |
1012 |     def test_list_v2_vazio(self):
1013 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1014 |
1015 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1015:9
     |
1013 |         from rest_framework.test import APIRequestFactory, force_authenticate
1014 |
1015 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1016 |
1017 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1037:9
     |
1035 |         self.cliente = Cliente.objects.create(tenant=self.tenant, nome_razao_social="Cliente V2", tipo_pessoa="PF")
1036 |         # Usuário somente visualização (viewer) para teste de permissões
1037 |         from django.contrib.auth.models import Group
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1038 |
1039 |         self.viewer = User.objects.create_user(username="viewer_v2", password="x", is_staff=False)
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1070:9
     |
1069 |     def test_list_v2_populado(self):
1070 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1071 |
1072 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1072:9
     |
1070 |         from rest_framework.test import APIRequestFactory, force_authenticate
1071 |
1072 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1073 |
1074 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1086:9
     |
1085 |     def test_ro_group_can_list_but_cannot_modify(self):
1086 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1087 |
1088 |         from .api_views import AgendamentoViewSet, DisponibilidadeViewSet, SlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1088:9
     |
1086 |         from rest_framework.test import APIRequestFactory, force_authenticate
1087 |
1088 |         from .api_views import AgendamentoViewSet, DisponibilidadeViewSet, SlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1089 |
1090 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1132:9
     |
1130 |         self.user_com_perm = User.objects.create_user(username="comperm", password="x", is_staff=True)
1131 |         # Concede permissão add_agendamento somente ao segundo usuário
1132 |         from django.contrib.auth.models import Permission
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1133 |
1134 |         perm = Permission.objects.get(codename="add_agendamento")
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1150:9
     |
1148 |             capacidade_por_slot=1,
1149 |         )
1150 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1151 |
1152 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1162:9
     |
1161 |     def _create(self, acting_user):
1162 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1163 |
1164 |         from .api_views import AgendamentoViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1164:9
     |
1162 |         from rest_framework.test import APIRequestFactory, force_authenticate
1163 |
1164 |         from .api_views import AgendamentoViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1165 |
1166 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1228:9
     |
1226 |             )
1227 |         # Adiciona competência
1228 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1229 |
1230 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1276:9
     |
1274 |             capacidade_por_slot=1,
1275 |         )
1276 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1277 |
1278 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1300:9
     |
1298 |         )
1299 |         # Concede competência apenas ao p1
1300 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1301 |
1302 |         ProfissionalProcedimento.objects.create(tenant=self.tenant, profissional=self.p1, servico=self.proc, ativo=True)
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1306:9
     |
1304 |     @override_settings(ENFORCE_COMPETENCIA=True)
1305 |     def test_listagem_slots_filtra_por_competencia_quando_servico(self):
1306 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1307 |
1308 |         from .api_views import SlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1308:9
     |
1306 |         from rest_framework.test import APIRequestFactory, force_authenticate
1307 |
1308 |         from .api_views import SlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1309 |
1310 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1354:9
     |
1353 |     def _post_create(self, user, profissional_id=None):
1354 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1355 |
1356 |         from .api_views import AgendamentoViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1356:9
     |
1354 |         from rest_framework.test import APIRequestFactory, force_authenticate
1355 |
1356 |         from .api_views import AgendamentoViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1357 |
1358 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1383:9
     |
1381 |     def test_create_com_competencia_sucesso(self):
1382 |         # Conceder competência
1383 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1384 |
1385 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1394:9
     |
1392 |     def test_reagendar_action_sucesso(self):
1393 |         # Preparar agendamento válido (com competência)
1394 |         from .models import Disponibilidade, ProfissionalProcedimento, Slot
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1395 |
1396 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1412:9
     |
1410 |             capacidade_por_slot=1,
1411 |         )
1412 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1413 |
1414 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1440:9
     |
1438 |         )
1439 |         # Chamar ação reagendar
1440 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1441 |
1442 |         from .api_views import AgendamentoViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1442:9
     |
1440 |         from rest_framework.test import APIRequestFactory, force_authenticate
1441 |
1442 |         from .api_views import AgendamentoViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1443 |
1444 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1464:9
     |
1462 |         # Cliente e vínculo de portal
1463 |         self.cliente = Cliente.objects.create(tenant=self.tenant, nome_razao_social="Cliente Portal", tipo_pessoa="PF")
1464 |         from clientes.models import AcessoCliente
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1465 |
1466 |         AcessoCliente.objects.create(cliente=self.cliente, usuario=self.user_cli)
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1482:9
     |
1480 |             capacidade_por_slot=1,
1481 |         )
1482 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1483 |
1484 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1517:9
     |
1515 |     def _auth_req(self, req):
1516 |         req.session = {"tenant_id": self.tenant.id}
1517 |         from rest_framework.test import force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1518 |
1519 |         force_authenticate(req, user=self.user_cli)
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1524:9
     |
1522 |     def test_cliente_lista_slots_filtrando_por_competencia_e_reserva_sucesso(self):
1523 |         # Conceder competência ao profissional
1524 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1525 |
1526 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1530:9
     |
1528 |         )
1529 |         # Listagem
1530 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1531 |
1532 |         from .api_views import ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1532:9
     |
1530 |         from rest_framework.test import APIRequestFactory
1531 |
1532 |         from .api_views import ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1533 |
1534 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1553:9
     |
1552 |     def test_cliente_reserva_sem_competencia_retorna_400(self):
1553 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1554 |
1555 |         from .api_views import ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1555:9
     |
1553 |         from rest_framework.test import APIRequestFactory
1554 |
1555 |         from .api_views import ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1556 |
1557 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1565:9
     |
1563 |     def test_cliente_lista_agendamentos_e_cancelar(self):
1564 |         # Preparar reserva com competência
1565 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1566 |
1567 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1570:9
     |
1568 |             tenant=self.tenant, profissional=self.prof, servico=self.proc, ativo=True
1569 |         )
1570 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1571 |
1572 |         from .api_views import ClienteAgendamentoViewSet, ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1572:9
     |
1570 |         from rest_framework.test import APIRequestFactory
1571 |
1572 |         from .api_views import ClienteAgendamentoViewSet, ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1573 |
1574 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1597:9
     |
1595 |     def test_cliente_reagendar_com_novo_slot_sem_datas(self):
1596 |         # Conceder competência e criar reserva inicial
1597 |         from .models import ProfissionalProcedimento
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1598 |
1599 |         ProfissionalProcedimento.objects.create(
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1602:9
     |
1600 |             tenant=self.tenant, profissional=self.prof, servico=self.proc, ativo=True
1601 |         )
1602 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1603 |
1604 |         from .api_views import ClienteAgendamentoViewSet, ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1604:9
     |
1602 |         from rest_framework.test import APIRequestFactory
1603 |
1604 |         from .api_views import ClienteAgendamentoViewSet, ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1605 |
1606 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1627:9
     |
1625 |         Testa se as APIs do portal do cliente exigem autenticação.
1626 |         """
1627 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1628 |
1629 |         from .api_views import ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1629:9
     |
1627 |         from rest_framework.test import APIRequestFactory
1628 |
1629 |         from .api_views import ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1630 |
1631 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1643:9
     |
1641 |         Testa se as APIs do portal do cliente funcionam com usuário autenticado.
1642 |         """
1643 |         from rest_framework.test import APIRequestFactory
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1644 |
1645 |         from .api_views import ClienteSlotViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1645:9
     |
1643 |         from rest_framework.test import APIRequestFactory
1644 |
1645 |         from .api_views import ClienteSlotViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1646 |
1647 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1666:9
     |
1665 |         # Criar role e relacionamentos corretos
1666 |         from core.models import Role, TenantUser
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1667 |
1668 |         admin_role = Role.objects.create(tenant=self.tenant, name="ADMIN", description="Administrator")
     |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
    --> agendamentos\tests.py:1792:109
     |
1791 |         # Verifica se o agendamento foi criado
1792 |         self.assertTrue(Agendamento.objects.filter(cliente=self.cliente, profissional=self.prof).count() >= 2)
     |                                                                                                             ^
1793 |
1794 |     def test_dashboard_view(self):
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1822:9
     |
1821 |         # Criar role e relacionamentos corretos
1822 |         from core.models import Role, TenantUser
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1823 |
1824 |         admin_role = Role.objects.create(tenant=self.tenant, name="ADMIN", description="Administrator")
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1841:9
     |
1840 |         # Criar alguns slots
1841 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1842 |
1843 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1893:9
     |
1892 |         # Criar role e relacionamentos corretos
1893 |         from core.models import Role, TenantUser
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1894 |
1895 |         admin_role = Role.objects.create(tenant=self.tenant, name="ADMIN", description="Administrator")
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1975:9
     |
1974 |     def test_list_v2_serializer_shape(self):
1975 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1976 |
1977 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1977:9
     |
1975 |         from rest_framework.test import APIRequestFactory, force_authenticate
1976 |
1977 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1978 |
1979 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1993:9
     |
1992 |     def test_detail_v2_serializer_includes_auditoria(self):
1993 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1994 |
1995 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:1995:9
     |
1993 |         from rest_framework.test import APIRequestFactory, force_authenticate
1994 |
1995 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1996 |
1997 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2007:9
     |
2006 |     def test_create_v2(self):
2007 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2008 |
2009 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2009:9
     |
2007 |         from rest_framework.test import APIRequestFactory, force_authenticate
2008 |
2009 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2010 |
2011 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2052:9
     |
2050 |             capacidade_por_slot=1,
2051 |         )
2052 |         from datetime import datetime as dt
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2053 |
2054 |         tz = timezone.get_current_timezone()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2064:9
     |
2063 |     def test_create_via_slot(self):
2064 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2065 |
2066 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2066:9
     |
2064 |         from rest_framework.test import APIRequestFactory, force_authenticate
2065 |
2066 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2067 |
2068 |         factory = APIRequestFactory()
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2086:9
     |
2085 |     def test_validation_error_sem_slot_e_datas(self):
2086 |         from rest_framework.test import APIRequestFactory, force_authenticate
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2087 |
2088 |         from .api_views import AgendamentoV2ViewSet
     |

PLC0415 `import` should be at the top-level of a file
    --> agendamentos\tests.py:2088:9
     |
2086 |         from rest_framework.test import APIRequestFactory, force_authenticate
2087 |
2088 |         from .api_views import AgendamentoV2ViewSet
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2089 |
2090 |         factory = APIRequestFactory()
     |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> agendamentos\tests\test_views.py:31:36
   |
29 |     response = client.get(url)
30 |
31 |     assert response.status_code == 200
   |                                    ^^^
32 |     assert "agendamentos/agendamento_home.html" in [t.name for t in response.templates]
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
  --> agendamentos\tests\test_views.py:41:54
   |
40 |     # Verifica os valores calculados
41 |     assert response.context["total_agendamentos"] == 3
   |                                                      ^
42 |     assert response.context["confirmados_hoje"] == 1
43 |     assert response.context["pendentes_hoje"] == 1
   |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> agendamentos\tests\test_views.py:54:36
   |
52 |     response = client.get(url)
53 |
54 |     assert response.status_code == 302
   |                                    ^^^
55 |     assert "/login/" in response.url
   |

PLR0913 Too many arguments in function definition (6 > 5)
  --> agendamentos\utils.py:13:5
   |
13 | def notificar_profissional_e_clientes(
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
14 |     agendamento: Agendamento, *, titulo_prof, msg_prof, titulo_cli=None, msg_cli=None, tipo="info"
15 | ):
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\views.py:36:5
   |
34 |     pendentes_hoje = qs.filter(status="PENDENTE", data_inicio__date=today).count()
35 |     proximos_agendamentos = futuros.order_by("data_inicio")[:10]
36 |     from collections import Counter
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |
38 |     status_counts = Counter(qs.filter(data_inicio__date=today).values_list("status", flat=True))
   |

PLC0415 `import` should be at the top-level of a file
  --> agendamentos\views.py:85:9
   |
83 |         # Contexto legado + novo layout ultra modern
84 |         ctx["status_choices"] = STATUS_AGENDAMENTO
85 |         from servicos.models import Servico
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
86 |
87 |         ctx["servicos"] = Servico.objects.filter(tenant=self.get_tenant(), ativo=True, is_clinical=True).order_by(
   |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:283:13
    |
281 |         # Lista de serviços clínicos (substitui procedimentos)
282 |         try:
283 |             from servicos.models import Servico
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
284 |
285 |             ctx["servicos"] = Servico.objects.filter(tenant=self.get_tenant(), ativo=True, is_clinical=True).order_by(
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:324:9
    |
322 |         ctx["waitlist"] = slot.waitlist.select_related("cliente").order_by("prioridade", "created_at")
323 |         # clientes para inscrição (simplificado: os que não possuem agendamento neste slot)
324 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
325 |
326 |         ag_clientes = slot.agendamentos.values_list("cliente_id", flat=True)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:333:9
    |
331 | def gerar_slots_view(request):  # pragma: no cover - UI
332 |     if request.method == "POST":
333 |         from .models import Disponibilidade
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
334 |
335 |         disp_id = request.POST.get("disponibilidade_id")
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:347:13
    |
345 |             hora_fim = request.POST.get("hora_fim")
346 |             duracao = int(request.POST.get("duracao_minutos", 30))
347 |             from core.models import CustomUser
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
348 |
349 |             from .models import Disponibilidade
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:349:13
    |
347 |             from core.models import CustomUser
348 |
349 |             from .models import Disponibilidade
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
350 |
351 |             prof = get_object_or_404(CustomUser, pk=profissional_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:368:5
    |
367 | def waitlist_inscrever_view(request, slot_id):  # pragma: no cover - UI
368 |     from .models import WaitlistEntry
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
369 |
370 |     slot = get_object_or_404(Slot, pk=slot_id, tenant=getattr(request.user, "tenant", None))
    |

PLC0415 `import` should be at the top-level of a file
   --> agendamentos\views.py:374:13
    |
372 |         cliente_id = request.POST.get("cliente_id")
373 |         if cliente_id:
374 |             from clientes.models import Cliente
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
375 |
376 |             cliente = get_object_or_404(Cliente, pk=cliente_id)
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> agendamentos\views.py:608:63
    |
606 |             {
607 |                 "label": "Top 3",
608 |                 "value": top3[2].cliente.__str__() if total > 2 else "-",
    |                                                               ^
609 |                 "icon": "fas fa-user-clock",
610 |                 "color": "secondary",
    |

F821 Undefined name `List`
 --> ai_auditor\analyzers\performance.py:5:56
  |
4 | class PerformanceAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                        ^^^^
6 |         issues = []
  |

F821 Undefined name `Dict`
 --> ai_auditor\analyzers\performance.py:5:61
  |
4 | class PerformanceAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                             ^^^^
6 |         issues = []
  |

F821 Undefined name `Any`
 --> ai_auditor\analyzers\performance.py:5:71
  |
4 | class PerformanceAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                                       ^^^
6 |         issues = []
  |

F821 Undefined name `List`
 --> ai_auditor\analyzers\security.py:5:56
  |
4 | class SecurityAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                        ^^^^
6 |         issues = []
  |

F821 Undefined name `Dict`
 --> ai_auditor\analyzers\security.py:5:61
  |
4 | class SecurityAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                             ^^^^
6 |         issues = []
  |

F821 Undefined name `Any`
 --> ai_auditor\analyzers\security.py:5:71
  |
4 | class SecurityAnalyzer(BaseAnalyzer):
5 |     def analyze(self, file_path: str, content: str) -> List[Dict[str, Any]]:
  |                                                                       ^^^
6 |         issues = []
  |

PLR0912 Too many branches (14 > 12)
  --> ai_auditor\management\commands\fix_code_issues.py:25:9
   |
23 |         )
24 |
25 |     def handle(self, *args, **options):
   |         ^^^^^^
26 |         tenant_id = options.get("tenant_id")
27 |         issue_id = options.get("issue_id")
   |

PLR0915 Too many statements (55 > 50)
  --> ai_auditor\management\commands\fix_code_issues.py:25:9
   |
23 |         )
24 |
25 |     def handle(self, *args, **options):
   |         ^^^^^^
26 |         tenant_id = options.get("tenant_id")
27 |         issue_id = options.get("issue_id")
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> ai_auditor\management\commands\fix_code_issues.py:36:13
   |
34 |             tenant = apps.get_model("core", "Tenant").objects.get(id=tenant_id)
35 |         except apps.get_model("core", "Tenant").DoesNotExist:
36 |             raise CommandError(f"Tenant com ID {tenant_id} não encontrado.")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |
38 |         if not issue_id and not session_id:
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> ai_auditor\management\commands\fix_code_issues.py:64:17
   |
63 |               except CodeIssue.DoesNotExist:
64 | /                 raise CommandError(
65 | |                     f"Problema com ID {issue_id} não encontrado ou não é auto-corrigível para o Tenant {tenant.name}."
66 | |                 )
   | |_________________^
67 |               except Exception as e:
68 |                   self.stdout.write(self.style.ERROR(f"Erro ao corrigir problema {issue_id}: {e}"))
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> ai_auditor\management\commands\fix_code_issues.py:103:17
    |
102 |               except AuditSession.DoesNotExist:
103 | /                 raise CommandError(
104 | |                     f"Sessão de Auditoria com ID {session_id} não encontrada para o Tenant {tenant.name}."
105 | |                 )
    | |_________________^
106 |
107 |           self.stdout.write(
    |

PLR0915 Too many statements (54 > 50)
  --> ai_auditor\management\commands\generate_tests.py:28:9
   |
26 |         )
27 |
28 |     def handle(self, *args, **options):
   |         ^^^^^^
29 |         tenant_id = options.get("tenant_id")
30 |         app_name = options.get("app_name")
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> ai_auditor\management\commands\generate_tests.py:42:13
   |
40 |             tenant = apps.get_model("core", "Tenant").objects.get(id=tenant_id)
41 |         except apps.get_model("core", "Tenant").DoesNotExist:
42 |             raise CommandError(f"Tenant com ID {tenant_id} não encontrado.")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
43 |
44 |         self.stdout.write(
   |

PLR0912 Too many branches (15 > 12)
  --> ai_auditor\management\commands\run_full_audit.py:21:9
   |
19 |         parser.add_argument("--user_id", type=int, help="ID do Usuário que está executando a auditoria.")
20 |
21 |     def handle(self, *args, **options):
   |         ^^^^^^
22 |         tenant_id = options.get("tenant_id")
23 |         user_id = options.get("user_id")
   |

PLR0915 Too many statements (63 > 50)
  --> ai_auditor\management\commands\run_full_audit.py:21:9
   |
19 |         parser.add_argument("--user_id", type=int, help="ID do Usuário que está executando a auditoria.")
20 |
21 |     def handle(self, *args, **options):
   |         ^^^^^^
22 |         tenant_id = options.get("tenant_id")
23 |         user_id = options.get("user_id")
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> ai_auditor\management\commands\run_full_audit.py:31:13
   |
29 |             tenant = apps.get_model("core", "Tenant").objects.get(id=tenant_id)
30 |         except apps.get_model("core", "Tenant").DoesNotExist:
31 |             raise CommandError(f"Tenant com ID {tenant_id} não encontrado.")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 |
33 |         user = None
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> ai_auditor\management\commands\system_health_report.py:36:13
   |
34 |             tenant = apps.get_model("core", "Tenant").objects.get(id=tenant_id)
35 |         except apps.get_model("core", "Tenant").DoesNotExist:
36 |             raise CommandError(f"Tenant com ID {tenant_id} não encontrado.")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |
38 |         os.makedirs(output_dir, exist_ok=True)
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:19:46
   |
17 |         total_issues = CodeIssue.objects.filter(session__tenant=tenant).count()
18 |         critical_issues = CodeIssue.objects.filter(
19 |             session__tenant=tenant, severity=\'critical\'
   |                                              ^
20 |         ).count()
21 |         high_issues = CodeIssue.objects.filter(
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:19:47
   |
17 |         total_issues = CodeIssue.objects.filter(session__tenant=tenant).count()
18 |         critical_issues = CodeIssue.objects.filter(
19 |             session__tenant=tenant, severity=\'critical\'
   |                                               ^^^^^^^^^^^
20 |         ).count()
21 |         high_issues = CodeIssue.objects.filter(
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:22:46
   |
20 |         ).count()
21 |         high_issues = CodeIssue.objects.filter(
22 |             session__tenant=tenant, severity=\'high\'
   |                                              ^
23 |         ).count()
24 |         medium_issues = CodeIssue.objects.filter(
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:22:47
   |
20 |         ).count()
21 |         high_issues = CodeIssue.objects.filter(
22 |             session__tenant=tenant, severity=\'high\'
   |                                               ^^^^^^^
23 |         ).count()
24 |         medium_issues = CodeIssue.objects.filter(
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:25:46
   |
23 |         ).count()
24 |         medium_issues = CodeIssue.objects.filter(
25 |             session__tenant=tenant, severity=\'medium\'
   |                                              ^
26 |         ).count()
27 |         low_issues = CodeIssue.objects.filter(
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:25:47
   |
23 |         ).count()
24 |         medium_issues = CodeIssue.objects.filter(
25 |             session__tenant=tenant, severity=\'medium\'
   |                                               ^^^^^^^^^
26 |         ).count()
27 |         low_issues = CodeIssue.objects.filter(
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:28:46
   |
26 |         ).count()
27 |         low_issues = CodeIssue.objects.filter(
28 |             session__tenant=tenant, severity=\'low\'
   |                                              ^
29 |         ).count()
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:28:47
   |
26 |         ).count()
27 |         low_issues = CodeIssue.objects.filter(
28 |             session__tenant=tenant, severity=\'low\'
   |                                               ^^^^^^
29 |         ).count()
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:32:13
   |
31 |         context = {
32 |             \'latest_sessions\': latest_sessions,
   |             ^
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:32:14
   |
31 |         context = {
32 |             \'latest_sessions\': latest_sessions,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:33:13
   |
31 |         context = {
32 |             \'latest_sessions\': latest_sessions,
33 |             \'total_issues\': total_issues,
   |             ^
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:33:14
   |
31 |         context = {
32 |             \'latest_sessions\': latest_sessions,
33 |             \'total_issues\': total_issues,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:34:13
   |
32 |             \'latest_sessions\': latest_sessions,
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
   |             ^
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:34:14
   |
32 |             \'latest_sessions\': latest_sessions,
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:35:13
   |
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
   |             ^
36 |             \'medium_issues\': medium_issues,
37 |             \'low_issues\': low_issues,
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:35:14
   |
33 |             \'total_issues\': total_issues,
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |             \'medium_issues\': medium_issues,
37 |             \'low_issues\': low_issues,
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:36:13
   |
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
   |             ^
37 |             \'low_issues\': low_issues,
38 |         }
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:36:14
   |
34 |             \'critical_issues\': critical_issues,
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |             \'low_issues\': low_issues,
38 |         }
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:37:13
   |
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
37 |             \'low_issues\': low_issues,
   |             ^
38 |         }
39 |         return render(request, \'ai_auditor/dashboard.html\', context)
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:37:14
   |
35 |             \'high_issues\': high_issues,
36 |             \'medium_issues\': medium_issues,
37 |             \'low_issues\': low_issues,
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
38 |         }
39 |         return render(request, \'ai_auditor/dashboard.html\', context)
   |

invalid-syntax: Expected a newline after line continuation character
  --> ai_auditor\reports\dashboard.py:39:32
   |
37 |             \'low_issues\': low_issues,
38 |         }
39 |         return render(request, \'ai_auditor/dashboard.html\', context)
   |                                ^
   |

invalid-syntax: missing closing quote in string literal
  --> ai_auditor\reports\dashboard.py:39:33
   |
37 |             \'low_issues\': low_issues,
38 |         }
39 |         return render(request, \'ai_auditor/dashboard.html\', context)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

invalid-syntax: unexpected EOF while parsing
--> ai_auditor\reports\dashboard.py:1:1
 |
 |

F811 Redefinition of unused `datetime` from line 1
 --> ai_auditor\views.py:1:8
  |
1 | import datetime
  |        -------- previous definition of `datetime` here
2 | import json
3 | import re
4 | from datetime import datetime
  |                      ^^^^^^^^ `datetime` redefined here
5 | from pathlib import Path
  |
help: Remove definition: `datetime`

PLR0911 Too many return statements (10 > 6)
   --> ai_auditor\views.py:567:9
    |
565 |     # (método check_code_quality legacy removido; ruff cobre lint/format fora da aplicação)
566 |
567 |     def generate_ai_response(self, message, tenant):
    |         ^^^^^^^^^^^^^^^^^^^^
568 |         """
569 |         Gera uma resposta da IA baseada na mensagem do usuário.
    |

E501 Line too long (123 > 120)
   --> ai_auditor\views.py:798:120
    |
796 | • "gerar relatório" - Dashboards e métricas
797 |
798 | **💡 Posso analisar {CodeIssue.objects.filter(session__tenant=tenant).count()} problemas já identificados no seu sistema.**
    |                                                                                                                         ^^^
799 |
800 | Como posso ajudar você hoje? Digite `/auditoria` para começar!"""
    |

F821 Undefined name `queryset`
   --> ai_auditor\views.py:941:16
    |
939 |         return context
940 |
941 |         return queryset.order_by("-severity", "-created_at")
    |                ^^^^^^^^
942 |
943 |     def get_context_data(self, **kwargs):
    |

F811 Redefinition of unused `get_context_data` from line 923
   --> ai_auditor\views.py:943:9
    |
941 |         return queryset.order_by("-severity", "-created_at")
942 |
943 |     def get_context_data(self, **kwargs):
    |         ^^^^^^^^^^^^^^^^ `get_context_data` redefined here
944 |         context = super().get_context_data(**kwargs)
945 |         context["title"] = "Problemas de Código"
    |
   ::: ai_auditor\views.py:923:9
    |
921 |             queryset = queryset.filter(issue_type=issue_type)
922 |
923 |     def get_context_data(self, **kwargs):
    |         ---------------- previous definition of `get_context_data` here
924 |         context = super().get_context_data(**kwargs)
925 |         tenant = get_current_tenant(self.request)
    |
help: Remove definition: `get_context_data`

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
    --> ai_auditor\views.py:1492:29
     |
1491 |         security_count = issues.filter(issue_type="security").count()
1492 |         if security_count > 5:
     |                             ^
1493 |             recommendations.append(f"🔒 {security_count} problemas de segurança identificados - revisar políticas")
     |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
    --> ai_auditor\views.py:1496:32
     |
1495 |         performance_count = issues.filter(issue_type="performance").count()
1496 |         if performance_count > 10:
     |                                ^^
1497 |             recommendations.append(f"⚡ {performance_count} problemas de performance - otimização necessária")
     |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
  --> apropriacao\forms.py:68:33
   |
66 |         if descricao:
67 |             descricao = descricao.strip()
68 |             if len(descricao) < 5:
   |                                 ^
69 |                 raise forms.ValidationError("A descrição deve ter pelo menos 5 caracteres.")
70 |         return descricao
   |

PLC0415 `import` should be at the top-level of a file
  --> apropriacao\forms.py:75:13
   |
73 |         data = self.cleaned_data.get("data")
74 |         if data:
75 |             from datetime import date
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
76 |
77 |             if data > date.today():
   |

F821 Undefined name `reverse`
  --> apropriacao\views.py:27:25
   |
25 |     if not tenant:
26 |         messages.error(request, _("Por favor, selecione uma empresa para ver o dashboard."))
27 |         return redirect(reverse("core:tenant_select"))
   |                         ^^^^^^^
28 |
29 |     context = {
   |

F821 Undefined name `reverse`
  --> aprovacoes\views.py:29:25
   |
27 |     if not tenant:
28 |         messages.error(request, _("Por favor, selecione uma empresa para ver o dashboard."))
29 |         return redirect(reverse("core:tenant_select"))
   |                         ^^^^^^^
30 |
31 |     context = {
   |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
  --> assistente_web\admin.py:24:65
   |
23 |     def conteudo_resumido(self, obj):
24 |         return obj.conteudo[:50] + "..." if len(obj.conteudo) > 50 else obj.conteudo
   |                                                                 ^^
25 |
26 |     conteudo_resumido.short_description = "Conteúdo"
   |

PLR2004 Magic value used in comparison, consider replacing `30` with a constant variable
  --> assistente_web\admin.py:38:59
   |
37 |     def valor_resumido(self, obj):
38 |         return obj.valor[:30] + "..." if len(obj.valor) > 30 else obj.valor
   |                                                           ^^
39 |
40 |     valor_resumido.short_description = "Valor"
   |

PLR0912 Too many branches (26 > 12)
  --> assistente_web\core\nlp.py:14:9
   |
12 |         logger.info("Processador NLP inicializado (modo simples: palavras-chave).")
13 |
14 |     def process_command(self, command):
   |         ^^^^^^^^^^^^^^^
15 |         """Processa o comando do usuário para identificar intenção e entidades.
   |

PLR0915 Too many statements (65 > 50)
  --> assistente_web\core\nlp.py:14:9
   |
12 |         logger.info("Processador NLP inicializado (modo simples: palavras-chave).")
13 |
14 |     def process_command(self, command):
   |         ^^^^^^^^^^^^^^^
15 |         """Processa o comando do usuário para identificar intenção e entidades.
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
  --> assistente_web\skills\pandora_skills.py:46:47
   |
44 |                     for func in funcionarios[:3]:  # Limita a 3 resultados
45 |                         response += f"{func.nome} {func.sobrenome} ({func.cargo}), "
46 |                     if funcionarios.count() > 3:
   |                                               ^
47 |                         response += "e outros..."
48 |             else:
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
  --> assistente_web\skills\pandora_skills.py:82:43
   |
80 |                     for cliente in clientes[:3]:
81 |                         response += f"{cliente.nome}, "
82 |                     if clientes.count() > 3:
   |                                           ^
83 |                         response += "e outros..."
84 |             else:
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
   --> assistente_web\skills\pandora_skills.py:118:40
    |
116 |                     for obra in obras[:3]:
117 |                         response += f"Obra {obra.numero} ({obra.nome}), "
118 |                     if obras.count() > 3:
    |                                        ^
119 |                         response += "e outras..."
120 |             else:
    |

PLR0912 Too many branches (29 > 12)
  --> assistente_web\views.py:63:5
   |
61 | @require_http_methods(["POST"])
62 | @csrf_exempt
63 | def processar_comando(request):
   |     ^^^^^^^^^^^^^^^^^
64 |     """Processa comandos enviados pelo usuário"""
65 |     try:
   |

PLR0915 Too many statements (91 > 50)
  --> assistente_web\views.py:63:5
   |
61 | @require_http_methods(["POST"])
62 | @csrf_exempt
63 | def processar_comando(request):
   |     ^^^^^^^^^^^^^^^^^
64 |     """Processa comandos enviados pelo usuário"""
65 |     try:
   |

PLR2004 Magic value used in comparison, consider replacing `75` with a constant variable
  --> cadastros_gerais\admin.py:20:51
   |
18 |     def descricao_resumida(self, obj):
19 |         """Retorna uma versão curta da descrição para a lista."""
20 |         if obj.descricao and len(obj.descricao) > 75:
   |                                                   ^^
21 |             return obj.descricao[:75] + "..."
22 |         return obj.descricao or "-"
   |

PLW1641 Object does not implement `__hash__` method
  --> cadastros_gerais\models.py:9:7
   |
 9 | class UnidadeMedida(models.Model):
   |       ^^^^^^^^^^^^^
10 |     """
11 |     Representa as unidades de medida utilizáveis no sistema (ex: Unidade, Metro, KG).
   |

F823 Local variable `_` referenced before assignment
   --> cadastros_gerais\views.py:126:18
    |
124 | @login_required
125 | def unidade_medida_import(request):
126 |     page_title = _("Importar Unidades de Medida")
    |                  ^
127 |     form = UnidadeMedidaImportForm()
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> cadastros_gerais\views.py:145:37
    |
143 |                 reader = csv.reader(io_string, delimiter=";")
144 |                 for linha in reader:
145 |                     if len(linha) < 2:
    |                                     ^
146 |                         continue
147 |                     nome_unidade = linha[0].strip()
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> cadastros_gerais\views.py:149:74
    |
147 |                     nome_unidade = linha[0].strip()
148 |                     simbolo_unidade = linha[1].strip()
149 |                     descricao_unidade = linha[2].strip() if len(linha) > 2 else ""
    |                                                                          ^
150 |                     _, created = UnidadeMedida.objects.get_or_create(
151 |                         simbolo=simbolo_unidade,
    |

E402 Module level import not at top of file
   --> cadastros_gerais\views.py:170:1
    |
169 | # Tabelas simples internas (evitar criar arquivos neste passo)
170 | import django_tables2 as tables
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

PLR0912 Too many branches (23 > 12)
   --> chat\consumers.py:98:15
    |
 96 |             await self._broadcast_global_presence()
 97 |
 98 |     async def receive(self, text_data=None, bytes_data=None):
    |               ^^^^^^^
 99 |         if not text_data:
100 |             return
    |

PLR0915 Too many statements (56 > 50)
   --> chat\consumers.py:98:15
    |
 96 |             await self._broadcast_global_presence()
 97 |
 98 |     async def receive(self, text_data=None, bytes_data=None):
    |               ^^^^^^^
 99 |         if not text_data:
100 |             return
    |

PLR2004 Magic value used in comparison, consider replacing `60` with a constant variable
   --> chat\consumers.py:261:76
    |
259 |             users = PRESENCA_CONVERSA.get(int(self.conversa_id), {})
260 |             agora = timezone.now().timestamp()
261 |             inativos = [uid for uid, ts in users.items() if (agora - ts) > 60]
    |                                                                            ^^
262 |             for uid in inativos:
263 |                 del users[uid]
    |

PLR2004 Magic value used in comparison, consider replacing `120` with a constant variable
   --> chat\consumers.py:288:35
    |
286 |             agora = timezone.now().timestamp()
287 |             for uid, ts in list(GLOBAL_PRESENCE.items()):
288 |                 if (agora - ts) > 120:
    |                                   ^^^
289 |                     del GLOBAL_PRESENCE[uid]
290 |             online_ids = list(GLOBAL_PRESENCE.keys())
    |

PLC0415 `import` should be at the top-level of a file
   --> chat\consumers.py:344:21
    |
342 |             if atualizadas:
343 |                 try:
344 |                     from django.contrib.auth import get_user_model
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
345 |
346 |                     from notifications.views import marcar_notificacoes_chat_lidas
    |

PLC0415 `import` should be at the top-level of a file
   --> chat\consumers.py:346:21
    |
344 |                     from django.contrib.auth import get_user_model
345 |
346 |                     from notifications.views import marcar_notificacoes_chat_lidas
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
347 |
348 |                     User = get_user_model()
    |

PLC0415 `import` should be at the top-level of a file
   --> chat\consumers.py:412:9
    |
410 |     @database_sync_to_async
411 |     def _toggle_reacao(self, user_id, conversa_id, msg_id, emoji):
412 |         from .models import MensagemReacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
413 |
414 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> chat\consumers.py:425:9
    |
423 |     @database_sync_to_async
424 |     def _toggle_pin(self, user_id, conversa_id, msg_id):
425 |         from .models import MensagemFixada
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
426 |
427 |         try:
    |

PLR2004 Magic value used in comparison, consider replacing `120` with a constant variable
   --> chat\consumers.py:517:31
    |
515 |         agora = timezone.now().timestamp()
516 |         for uid, ts in list(GLOBAL_PRESENCE.items()):
517 |             if (agora - ts) > 120:
    |                               ^^^
518 |                 del GLOBAL_PRESENCE[uid]
519 |         return list(GLOBAL_PRESENCE.keys())
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> chat\models.py:62:38
   |
60 |         if self.tipo == "individual":
61 |             participantes = list(self.participantes.all()[:2])
62 |             if len(participantes) == 2:
   |                                      ^
63 |                 return f"{participantes[0].username} & {participantes[1].username}"
64 |             elif len(participantes) == 1:
   |

PLR0911 Too many return statements (7 > 6)
   --> chat\views.py:468:5
    |
466 | @csrf_exempt
467 | @login_required
468 | def api_enviar_mensagem(request):
    |     ^^^^^^^^^^^^^^^^^^^
469 |     """API para enviar mensagem via AJAX"""
470 |     if request.method != "POST":
    |

PLR0911 Too many return statements (7 > 6)
   --> chat\views.py:525:5
    |
523 | @csrf_exempt
524 | @login_required
525 | def api_marcar_como_lida(request):
    |     ^^^^^^^^^^^^^^^^^^^^
526 |     """API para marcar mensagem como lida"""
527 |     if request.method != "POST":
    |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
   --> chat\views.py:590:76
    |
588 |                 "ultima_mensagem": {
589 |                     "conteudo": ultima_mensagem.conteudo[:50] + "..."
590 |                     if ultima_mensagem and len(ultima_mensagem.conteudo) > 50
    |                                                                            ^^
591 |                     else ultima_mensagem.conteudo
592 |                     if ultima_mensagem
    |

PLR0911 Too many return statements (7 > 6)
   --> chat\views.py:713:5
    |
712 | @login_required
713 | def api_upload_arquivo(request):
    |     ^^^^^^^^^^^^^^^^^^
714 |     """Upload de arquivo/imagem para conversa, broadcast via WebSocket.
    |

PLR2004 Magic value used in comparison, consider replacing `32` with a constant variable
   --> chat\views.py:818:21
    |
816 |     except Mensagem.DoesNotExist:
817 |         return JsonResponse({"status": "error", "message": "Mensagem não encontrada"})
818 |     if len(emoji) > 32:
    |                     ^^
819 |         return JsonResponse({"status": "error", "message": "Emoji inválido"})
820 |     reacao, created = MensagemReacao.objects.get_or_create(mensagem=msg, usuario=user, emoji=emoji)
    |

E501 Line too long (176 > 120)
   --> clientes\admin.py:113:121
    |
112 | …
113 | …soajuridica__razao_social' - pode precisar de lógica mais complexa se quiser ordenar por ambos
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
114 | …
115 | …
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> clientes\admin.py:117:53
    |
115 |     def documento_principal_formatado(self, obj):
116 |         doc = obj.documento_principal
117 |         if obj.tipo == "PF" and doc and len(doc) == 11:
    |                                                     ^^
118 |             return f"{doc[:3]}.{doc[3:6]}.{doc[6:9]}-{doc[9:]}"  # Formata CPF
119 |         elif obj.tipo == "PJ" and doc and len(doc) == 14:
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> clientes\admin.py:119:55
    |
117 |         if obj.tipo == "PF" and doc and len(doc) == 11:
118 |             return f"{doc[:3]}.{doc[3:6]}.{doc[6:9]}-{doc[9:]}"  # Formata CPF
119 |         elif obj.tipo == "PJ" and doc and len(doc) == 14:
    |                                                       ^^
120 |             return f"{doc[:2]}.{doc[2:5]}.{doc[5:8]}/{doc[8:12]}-{doc[12:]}"  # Formata CNPJ
121 |         return doc
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> clientes\admin.py:136:40
    |
135 |     def cpf_formatado(self, obj):
136 |         if obj.cpf and len(obj.cpf) == 11:
    |                                        ^^
137 |             return f"{obj.cpf[:3]}.{obj.cpf[3:6]}.{obj.cpf[6:9]}-{obj.cpf[9:]}"
138 |         return obj.cpf
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> clientes\admin.py:161:42
    |
160 |     def cnpj_formatado(self, obj):
161 |         if obj.cnpj and len(obj.cnpj) == 14:
    |                                          ^^
162 |             return f"{obj.cnpj[:2]}.{obj.cnpj[2:5]}.{obj.cnpj[5:8]}/{obj.cnpj[8:12]}-{obj.cnpj[12:]}"
163 |         return obj.cnpj
    |

SIM102 Use a single `if` statement instead of nested `if` statements
  --> clientes\forms.py:23:13
   |
21 |                   if "form-check-input" not in current_classes:
22 |                       current_classes.add("form-check-input")
23 | /             elif isinstance(widget, FileInput) or not isinstance(widget, forms.HiddenInput):
24 | |                 if "form-control" not in current_classes:
   | |_________________________________________________________^
25 |                       current_classes.add("form-control")
26 |               if isinstance(widget, Select) and "select2" not in current_classes:
   |
help: Combine `if` statements using `and`

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> clientes\models.py:124:41
    |
122 |         if legacy_documento:
123 |             # Heurística simples: 14+ chars com '/' ou '-' => CNPJ, senão CPF
124 |             if len(legacy_documento) >= 14 and any(ch in legacy_documento for ch in ["/", "-"]):
    |                                         ^^
125 |                 self._legacy_cnpj = self._legacy_cnpj or legacy_documento
126 |                 if not tipo_pessoa and "tipo" not in kwargs:
    |

E501 Line too long (132 > 120)
   --> clientes\models.py:235:121
    |
234 |     def __str__(self):
235 |         return f"{self.get_tipo_display()}: {self.valor} ({self.cliente.nome_display if self.cliente else 'Cliente não associado'})"
    |                                                                                                                         ^^^^^^^^^^^^
    |

PLR0912 Too many branches (13 > 12)
   --> clientes\views.py:536:5
    |
534 | @login_required
535 | @transaction.atomic
536 | def cliente_import(request):
    |     ^^^^^^^^^^^^^^
537 |     """View para importação de clientes via arquivo"""
538 |     if request.method == "POST":
    |

F811 Redefinition of unused `ClienteDeleteView` from line 461
   --> clientes\views.py:699:7
    |
699 | class ClienteDeleteView(ClienteMixin, DeleteView):
    |       ^^^^^^^^^^^^^^^^^ `ClienteDeleteView` redefined here
700 |     """View para excluir cliente"""
    |
   ::: clientes\views.py:461:7
    |
461 | class ClienteDeleteView(ClienteMixin, DeleteView):
    |       ----------------- previous definition of `ClienteDeleteView` here
462 |     model = Cliente
463 |     template_name = "clientes/clientes_confirm_delete_ultra_modern.html"
    |
help: Remove definition: `ClienteDeleteView`

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> clientes\views.py:751:21
    |
749 |     tenant_atual = get_current_tenant(request)
750 |
751 |     if len(query) < 2:
    |                     ^
752 |         return JsonResponse({"results": []})
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
  --> clientes\wizard_forms.py:28:35
   |
26 |         if cpf:
27 |             cpf_digits = "".join(ch for ch in str(cpf) if ch.isdigit())
28 |             if len(cpf_digits) != 11:
   |                                   ^^
29 |                 raise ValidationError(_("CPF deve ter 11 dígitos"))
30 |         return cpf
   |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
  --> clientes\wizard_forms.py:42:36
   |
40 |         if cnpj:
41 |             cnpj_digits = "".join(ch for ch in str(cnpj) if ch.isdigit())
42 |             if len(cnpj_digits) != 14:
   |                                    ^^
43 |                 raise ValidationError(_("CNPJ deve ter 14 dígitos"))
44 |         return cnpj
   |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> clientes\wizard_forms.py:104:35
    |
102 |             # Remover formatação para validação
103 |             cnpj_clean = "".join(filter(str.isdigit, cnpj))
104 |             if len(cnpj_clean) != 14:
    |                                   ^^
105 |                 raise ValidationError("CNPJ deve ter 14 dígitos")
106 |         return cnpj
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> clientes\wizard_forms.py:160:34
    |
158 |             # Remover formatação para validação
159 |             cpf_clean = "".join(filter(str.isdigit, cpf))
160 |             if len(cpf_clean) != 11:
    |                                  ^^
161 |                 raise ValidationError("CPF deve ter 11 dígitos")
162 |         return cpf
    |

PLC0415 `import` should be at the top-level of a file
   --> clientes\wizard_views.py:127:13
    |
125 |         """Método auxiliar para pegar o tenant atual"""
126 |         try:
127 |             from core.utils import get_current_tenant
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
128 |
129 |             return get_current_tenant(request)
    |

E722 Do not use bare `except`
   --> clientes\wizard_views.py:130:9
    |
129 |             return get_current_tenant(request)
130 |         except Exception:
    |         ^^^^^^
131 |             return None
    |

PLR0912 Too many branches (17 > 12)
   --> clientes\wizard_views.py:181:9
    |
179 |         return step_data
180 |
181 |     def finish_wizard(self):
    |         ^^^^^^^^^^^^^
182 |         """Finaliza o wizard criando ou atualizando o cliente (PF/PJ) e demais steps."""
183 |         editing_entity = self.kwargs.get("pk")
    |

PLC0415 `import` should be at the top-level of a file
   --> clientes\wizard_views.py:253:9
    |
251 |     def _process_other_wizard_steps(self, cliente, wizard_data):
252 |         """Processa dados dos steps 2 (Endereço) e 3 (Contatos) alinhados ao CORE."""
253 |         import json as _json
    |         ^^^^^^^^^^^^^^^^^^^^
254 |
255 |         # Endereço principal + adicionais
    |

PLC0415 `import` should be at the top-level of a file
   --> conftest.py:104:9
    |
102 |     """
103 |     try:
104 |         from django.conf import settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
105 |
106 |         mods = [
    |

PLC0415 `import` should be at the top-level of a file
   --> conftest.py:148:5
    |
146 |     """
147 |     del db  # ativa fixture do banco; não é usada diretamente aqui
148 |     from core.models import Tenant
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
149 |
150 |     yield
    |

PLC0415 `import` should be at the top-level of a file
   --> conftest.py:163:5
    |
161 |     """Cria um `Tenant` já com todos os módulos habilitados."""
162 |     del db  # ativa fixture do banco; não é usada diretamente aqui
163 |     from core.models import Tenant
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
164 |
165 |     tenant = Tenant.objects.create(name="Empresa Teste Auto", subdomain="empresa-auto")
    |

PLC0415 `import` should be at the top-level of a file
   --> conftest.py:179:5
    |
177 |     """
178 |     del db  # ativa fixture do banco; não é usada diretamente aqui
179 |     from django.contrib.auth import get_user_model
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
180 |
181 |     from core.models import Tenant, TenantUser
    |

PLC0415 `import` should be at the top-level of a file
   --> conftest.py:181:5
    |
179 |     from django.contrib.auth import get_user_model
180 |
181 |     from core.models import Tenant, TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
182 |
183 |     def _make(
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> core\api_views.py:206:44
    |
204 |     data = [{"id": t.id, "name": t.name, "status": t.status} for t in qs]
205 |     status_code = 200 if request.user.is_superuser else 403
206 |     return Response(data if status_code == 200 else {"detail": "Forbidden"}, status=status_code)
    |                                            ^^^
    |

E501 Line too long (125 > 120)
   --> core\api_views.py:228:121
    |
226 |     Estrutura:
227 |     [{"module": "clientes", "enabled": true/false, "decision_reason": "OK|...", "allowed": bool}]
228 |     Só superuser pode ver todos os módulos; usuário normal vê apenas módulos habilitados no tenant (ou vazios se sem tenant).
    |                                                                                                                         ^^^^^
229 |     """
230 |     tenant = getattr(request, "tenant", None)
    |

E501 Line too long (145 > 120)
   --> core\api_views.py:260:121
    |
258 | …
259 | …BLED"
260 | …denied se unified_access (para debug UI pode ser filtrado pela camada cliente)
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
261 | …UNIFIED_ACCESS", False) or enabled_flag:
262 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> core\api_views.py:390:5
    |
388 |       - include_globals: 'true' (default) para incluir globais junto com específicos.
389 |     """
390 |     from .models import Department
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
391 |
392 |     tenant_id = request.GET.get("tenant") or ""
    |

E402 Module level import not at top of file
  --> core\authorization.py:18:1
   |
16 | feitas com monkeypatch.setattr no módulo original (ex: test_authorization_logging).
17 | """
18 | from importlib import import_module
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |
20 | from django.core.cache import cache
   |

E402 Module level import not at top of file
  --> core\authorization.py:20:1
   |
18 | from importlib import import_module
19 |
20 | from django.core.cache import cache
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 | try:
   |

E402 Module level import not at top of file
  --> core\authorization.py:36:1
   |
34 | else:  # pragma: no cover
35 |     MODULE_DENY_COUNTER = None
36 | import contextlib
   | ^^^^^^^^^^^^^^^^^
37 | import json
   |

E402 Module level import not at top of file
  --> core\authorization.py:37:1
   |
35 |     MODULE_DENY_COUNTER = None
36 | import contextlib
37 | import json
   | ^^^^^^^^^^^
38 |
39 | # Razões padronizadas (strings simples para facilitar logging e cabeçalhos)
   |

PLR0911 Too many return statements (8 > 6)
  --> core\authorization.py:79:5
   |
79 | def _tenant_has_module(tenant, module_name: str) -> bool:
   |     ^^^^^^^^^^^^^^^^^^
80 |     try:
81 |         if not (tenant and module_name):
   |

PLR0911 Too many return statements (9 > 6)
   --> core\authorization.py:113:5
    |
113 | def can_access_module(user, tenant, module_name: str | None) -> AccessDecision:
    |     ^^^^^^^^^^^^^^^^^
114 |     """Decide acesso a um módulo.
    |

PLR0912 Too many branches (13 > 12)
   --> core\authorization.py:113:5
    |
113 | def can_access_module(user, tenant, module_name: str | None) -> AccessDecision:
    |     ^^^^^^^^^^^^^^^^^
114 |     """Decide acesso a um módulo.
    |

E501 Line too long (121 > 120)
   --> core\authorization.py:137:121
    |
135 |         return AccessDecision(False, REASON_MODULE_DISABLED)
136 |
137 |     # Política portal (whitelist tem precedência positiva: se estiver na whitelist, libera e não aplica resolver estrito)
    |                                                                                                                         ^
138 |     if is_portal_user(user):
139 |         portal_whitelist = getattr(settings, "PORTAL_ALLOWED_MODULES", [])
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> core\authorization.py:156:13
    |
154 |   …     if resolver:
155 |   …         allowed_action, reason_detail = resolver.resolve(user, tenant, action_code)
156 | / …         if not allowed_action:
157 | | …             if getattr(settings, "FEATURE_ENFORCE_PERMISSION_RESOLVER_STRICT", False):
    | |________________________________________________________________________________________^
158 |   …                 return AccessDecision(False, REASON_RESOLVER_DENY)
159 |   …     # Se não houver resolver ou erro, comportamento permissivo (desde que módulo habilitado) a menos que estrito exija negação em e…
    |
help: Combine `if` statements using `and`

E501 Line too long (138 > 120)
   --> core\authorization.py:159:121
    |
157 | …N_RESOLVER_STRICT", False):
158 | …R_DENY)
159 | …ivo (desde que módulo habilitado) a menos que estrito exija negação em erro
    |                                                           ^^^^^^^^^^^^^^^^^^
160 | …
161 | …ER_STRICT", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> core\authorization.py:187:13
    |
185 |         # Deduplicação temporal opcional (evita spam de logs em múltiplos reloads rápidos)
186 |         try:
187 |             from django.conf import settings as _s
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
188 |
189 |             dedup_seconds = int(getattr(_s, "LOG_MODULE_DENY_DEDUP_SECONDS", 0) or 0)
    |

PLC0415 `import` should be at the top-level of a file
   --> core\authorization.py:201:21
    |
199 |             if existing_flag:
200 |                 try:
201 |                     from .models import AuditLog  # import local para evitar circular
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
202 |
203 |                     # Busca minimalista: mesmo user/tenant/action_type OTHER + módulo na mensagem
    |

PLC0415 `import` should be at the top-level of a file
   --> core\authorization.py:219:13
    |
217 |         try:
218 |             # Incremento tolerante: usa utilitário com lock local para simular atomicidade em backends simples
219 |             from shared.cache_utils import incr_atomic  # import local p/ evitar custo global se não usado
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
220 |
221 |             metric_key = f"module_deny_count:{module_name or 'unknown'}:{reason}"
    |

PLC0415 `import` should be at the top-level of a file
   --> core\authorization.py:231:9
    |
229 |             except Exception:
230 |                 pass
231 |         from .models import AuditLog  # type: ignore
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
232 |         from .utils import get_client_ip  # type: ignore
    |

PLC0415 `import` should be at the top-level of a file
   --> core\authorization.py:232:9
    |
230 |                 pass
231 |         from .models import AuditLog  # type: ignore
232 |         from .utils import get_client_ip  # type: ignore
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
233 |
234 |         ip = get_client_ip(request) if request else None
    |

E501 Line too long (124 > 120)
   --> core\authorization.py:241:121
    |
239 |             action_type="OTHER",
240 |             ip_address=ip,
241 |             change_message=f"[MODULE_DENY] module={module_name or ''} reason={reason} tenant={getattr(tenant, 'id', None)}",
    |                                                                                                                         ^^^^
242 |         )
243 |         # Prometheus counter
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> core\authorization.py:245:13
    |
243 |           # Prometheus counter
244 |           if MODULE_DENY_COUNTER:
245 | /             try:
246 | |                 MODULE_DENY_COUNTER.labels(module=module_name or "unknown", reason=reason).inc()
247 | |             except Exception:  # pragma: no cover
248 | |                 pass
    | |____________________^
249 |           # Seta chave de deduplicação somente após criação bem-sucedida
250 |           if dedup_seconds and module_name:
    |
help: Replace with `contextlib.suppress(Exception)`

E501 Line too long (124 > 120)
   --> core\chatbot.py:147:121
    |
145 |         if not self.api_key:
146 |             logger.error("API key não configurada para OpenAI")
147 |             return "Desculpe, o chatbot não está configurado corretamente. Entre em contato com o administrador do sistema."
    |                                                                                                                         ^^^^
148 |
149 |         try:
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> core\chatbot.py:170:40
    |
168 |             response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=data)
169 |
170 |             if response.status_code == 200:
    |                                        ^^^
171 |                 result = response.json()
172 |                 return result["choices"][0]["message"]["content"]
    |

PLR2004 Magic value used in comparison, consider replacing `7` with a constant variable
   --> core\chatbot.py:323:46
    |
321 |                         prazo = datetime.datetime.fromisoformat(obra.get("prazo")).date()
322 |                         dias_restantes = (prazo - hoje).days
323 |                         if dias_restantes <= 7:
    |                                              ^
324 |                             alerts.append(
325 |                                 {
    |

PLC0415 `import` should be at the top-level of a file
  --> core\consumers.py:77:13
   |
75 |         try:
76 |             # Importar modelos necessários
77 |             from django.contrib.auth import get_user_model
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
78 |
79 |             User = get_user_model()
   |

PLC0415 `import` should be at the top-level of a file
   --> core\consumers.py:199:13
    |
197 |     def _recent_unread(self, limit=10):
198 |         try:
199 |             from notifications.models import Notification
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
200 |
201 |             qs = Notification.objects.filter(usuario_destinatario=self.user, status="nao_lida").order_by("-created_at")[
    |

PLR2004 Magic value used in comparison, consider replacing `120` with a constant variable
   --> core\consumers.py:208:80
    |
206 |                     "id": n.id,
207 |                     "titulo": n.titulo,
208 |                     "mensagem": n.mensagem[:120] + ("..." if len(n.mensagem) > 120 else ""),
    |                                                                                ^^^
209 |                     "tipo": n.tipo,
210 |                     "prioridade": n.prioridade,
    |

PLC0415 `import` should be at the top-level of a file
   --> core\consumers.py:222:13
    |
220 |     def _unread_count(self):
221 |         try:
222 |             from notifications.models import Notification
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
223 |
224 |             return Notification.objects.filter(usuario_destinatario=self.user, status="nao_lida").count()
    |

PLC0415 `import` should be at the top-level of a file
   --> core\consumers.py:231:13
    |
229 |     def _mark_read(self, notification_id):
230 |         try:
231 |             from notifications.models import Notification
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
232 |
233 |             n = Notification.objects.get(id=notification_id, usuario_destinatario=self.user)
    |

PLC0415 `import` should be at the top-level of a file
  --> core\context_processors.py:10:13
   |
 8 |     if tenant and request.user.is_authenticated:
 9 |         try:
10 |             from prontuarios.models import Atendimento
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |             hoje = timezone.localdate()
   |

PLC0415 `import` should be at the top-level of a file
   --> core\dashboard_widgets.py:233:13
    |
231 |         """Retorna dados para gráfico de crescimento de tenants"""
232 |         try:
233 |             from dateutil.relativedelta import relativedelta
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
234 |
235 |             now = timezone.now()
    |

SIM102 Use a single `if` statement instead of nested `if` statements
  --> core\forms.py:36:13
   |
34 |               widget = field.widget
35 |               current_class = widget.attrs.get("class", "")
36 | /             if not isinstance(widget, (forms.CheckboxInput, forms.FileInput, forms.RadioSelect)):
37 | |                 if "form-control" not in current_class:
   | |_______________________________________________________^
38 |                       widget.attrs["class"] = f"{current_class} form-control".strip()
39 |               if isinstance(widget, forms.Select):
   |
help: Combine `if` statements using `and`

PLC0415 `import` should be at the top-level of a file
   --> core\forms.py:292:9
    |
290 |         self.tenant = kwargs.pop("tenant", None)
291 |         super().__init__(*args, **kwargs)
292 |         from django.contrib.auth.models import Permission
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
293 |
294 |         self.fields["permissions"].queryset = Permission.objects.all().select_related("content_type")
    |

PLC0415 `import` should be at the top-level of a file
   --> core\forms.py:295:9
    |
294 |         self.fields["permissions"].queryset = Permission.objects.all().select_related("content_type")
295 |         from .models import Department, Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
296 |
297 |         user = getattr(self.request, "user", None)
    |

PLC0415 `import` should be at the top-level of a file
   --> core\forms.py:343:9
    |
341 |         super().__init__(*args, **kwargs)
342 |         # Se superuser: permitir escolher tenant explicitamente (profissional / transparente)
343 |         from .models import Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
344 |
345 |         if self.request and getattr(self.request.user, "is_superuser", False):
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> core\forms.py:388:13
    |
386 |             user = CustomUser.objects.get(models.Q(email=email_or_username) | models.Q(username=email_or_username))
387 |         except CustomUser.DoesNotExist:
388 |             raise forms.ValidationError("Usuário não encontrado com este e-mail ou nome de usuário.")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
389 |         if TenantUser.objects.filter(tenant=self.tenant, user=user).exists():
390 |             raise forms.ValidationError("Este usuário já está vinculado a esta empresa.")
    |

PLC0415 `import` should be at the top-level of a file
   --> core\forms.py:698:17
    |
696 |         if self.tenant and getattr(self.tenant, "enabled_modules", None):
697 |             try:
698 |                 import json
    |                 ^^^^^^^^^^^
699 |
700 |                 enabled_modules_data = self.tenant.enabled_modules
    |

PLC0415 `import` should be at the top-level of a file
   --> core\forms.py:714:9
    |
712 |         if not self.tenant:
713 |             raise TypeError("O tenant não foi fornecido para o formulário.")
714 |         import json
    |         ^^^^^^^^^^^
715 |
716 |         selected_modules = self.cleaned_data.get("enabled_modules", [])
    |

PLC0415 `import` should be at the top-level of a file
  --> core\home_system.py:75:9
   |
73 |     def _get_chart_data(self):
74 |         """Prepara dados para os gráficos"""
75 |         import json
   |         ^^^^^^^^^^^
76 |
77 |         try:
   |

PLC0415 `import` should be at the top-level of a file
  --> core\home_system.py:92:13
   |
90 |         except Exception:
91 |             # Em caso de erro, retorna dados vazios
92 |             import json
   |             ^^^^^^^^^^^
93 |
94 |             return {
   |

PLR0912 Too many branches (45 > 12)
  --> core\management\commands\audit_auth.py:22:9
   |
20 |         )
21 |
22 |     def handle(self, *args, **options):
   |         ^^^^^^
23 |         limit = options["limit"]
24 |         redis_url = options.get("redis_url")
   |

PLR0915 Too many statements (116 > 50)
  --> core\management\commands\audit_auth.py:22:9
   |
20 |         )
21 |
22 |     def handle(self, *args, **options):
   |         ^^^^^^
23 |         limit = options["limit"]
24 |         redis_url = options.get("redis_url")
   |

PLC0415 `import` should be at the top-level of a file
  --> core\management\commands\audit_auth.py:71:17
   |
69 |             internal = cache._cache
70 |             try:
71 |                 import pickle
   |                 ^^^^^^^^^^^^^
72 |
73 |                 seen = {}
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> core\management\commands\audit_auth.py:84:69
   |
82 |                     if val is None:
83 |                         cand = raw
84 |                         if isinstance(cand, tuple) and len(cand) >= 2:
   |                                                                     ^
85 |                             cand = cand[1]
86 |                         if isinstance(cand, bytes):
   |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\audit_auth.py:101:17
    |
 99 |             # 4. última heurística (varrer dicts públicos)
100 |             try:
101 |                 import pickle
    |                 ^^^^^^^^^^^^^
102 |
103 |                 seen = {}
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> core\management\commands\audit_auth.py:123:73
    |
121 |                         if val is None:
122 |                             cand = raw
123 |                             if isinstance(cand, tuple) and len(cand) >= 2:
    |                                                                         ^
124 |                                 cand = cand[1]
125 |                             if isinstance(cand, bytes):
    |

E501 Line too long (153 > 120)
  --> core\management\commands\audit_enabled_modules.py:12:121
   |
11 | …
12 | … de todos os tenants para o formato canonical {"modules": [..]} sem quebrar dados.'
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 | …
14 | …
   |

E501 Line too long (122 > 120)
  --> core\management\commands\audit_enabled_modules.py:67:121
   |
65 |                 if not r["canonical"]:
66 |                     self.stdout.write(
67 |                         f"[DIRTY] id={r['tenant_id']} name={r['name']} -> {r['raw']} => {r['normalized']} ({r['reason']})"
   |                                                                                                                         ^^
68 |                     )
69 |             if dirty_count == 0:
   |

PLC0415 `import` should be at the top-level of a file
  --> core\management\commands\audit_enabled_modules.py:81:13
   |
79 |         """Retorna (normalized_dict, reason_text). NÃO salva."""
80 |         try:
81 |             from core.models import Tenant as _T  # evitar referência circular
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
82 |
83 |             normalized_obj = _T._normalize_enabled_modules(raw)  # type: ignore
   |

PLR0912 Too many branches (16 > 12)
  --> core\management\commands\clear_system_cache.py:20:9
   |
18 |         )
19 |
20 |     def handle(self, *args, **options):
   |         ^^^^^^
21 |         self.stdout.write(self.style.SUCCESS("Iniciando limpeza de cache do sistema Pandora..."))
   |

PLR0915 Too many statements (61 > 50)
  --> core\management\commands\clear_system_cache.py:20:9
   |
18 |         )
19 |
20 |     def handle(self, *args, **options):
   |         ^^^^^^
21 |         self.stdout.write(self.style.SUCCESS("Iniciando limpeza de cache do sistema Pandora..."))
   |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\create_test_companies.py:301:17
    |
300 |                 # Cria endereço principal
301 |                 from core.models import Endereco
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
302 |
303 |                 endereco, endereco_created = Endereco.objects.get_or_create(
    |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\create_test_companies.py:589:13
    |
587 |         """Cria clientes para o tenant"""
588 |         try:
589 |             from clientes.models import Cliente, PessoaFisica, PessoaJuridica
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
590 |
591 |             for client_data in clients_data:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\create_test_companies.py:636:13
    |
634 |         """Cria fornecedores para o tenant"""
635 |         try:
636 |             from fornecedores.models import CategoriaFornecedor, Fornecedor, FornecedorPJ
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
637 |
638 |             for supplier_data in suppliers_data:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\create_test_companies.py:683:13
    |
681 |         """Cria produtos/serviços para o tenant - produtos são globais, não por tenant"""
682 |         try:
683 |             from cadastros_gerais.models import UnidadeMedida
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
684 |             from produtos.models import Categoria, Produto
    |

PLC0415 `import` should be at the top-level of a file
   --> core\management\commands\create_test_companies.py:684:13
    |
682 |         try:
683 |             from cadastros_gerais.models import UnidadeMedida
684 |             from produtos.models import Categoria, Produto
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
685 |
686 |             # Verificar se existem unidades de medida
    |

E501 Line too long (128 > 120)
 --> core\management\commands\metrics_dump.py:4:121
  |
3 | Objetivos:
4 | - Listar chaves de métricas conhecidas (module_deny_count:*, perm_resolver:*) em backends simples (LocMem, Redis se disponível).
  |                                                                                                                         ^^^^^^^^
5 | - Exibir valores inteiros.
6 | - Opcional --reset para zerar/remover chaves.
  |

PLR0912 Too many branches (18 > 12)
  --> core\management\commands\metrics_dump.py:26:9
   |
24 |         parser.add_argument("--contains", type=str, default=None, help="Filtro substring opcional")
25 |
26 |     def handle(self, *args, **options):
   |         ^^^^^^
27 |         reset = options["reset"]
28 |         limit = options["limit"]
   |

E501 Line too long (124 > 120)
  --> core\management\commands\seed_bella_estetica.py:16:121
   |
15 | class Command(BaseCommand):
16 |     help = "Popula dados de exemplo para a clínica 'Bella Estética' (profissionais, procedimentos, clientes, agendamentos)."
   |                                                                                                                         ^^^^
17 |
18 |     def add_arguments(self, parser):
   |

PLR0912 Too many branches (32 > 12)
  --> core\management\commands\seed_bella_estetica.py:30:9
   |
29 |     @transaction.atomic
30 |     def handle(self, *args, **options):
   |         ^^^^^^
31 |         quiet = options["quiet"]
32 |         dias = options["dias"]
   |

PLR0915 Too many statements (91 > 50)
  --> core\management\commands\seed_bella_estetica.py:30:9
   |
29 |     @transaction.atomic
30 |     def handle(self, *args, **options):
   |         ^^^^^^
31 |         quiet = options["quiet"]
32 |         dias = options["dias"]
   |

E501 Line too long (131 > 120)
  --> core\management\commands\seed_bella_estetica.py:83:121
   |
82 |             # Criar funcionário
83 |             cpf_fake = f"{random.randint(100, 999)}.{random.randint(100, 999)}.{random.randint(100, 999)}-{random.randint(10, 99)}"
   |                                                                                                                         ^^^^^^^^^^^
84 |             funcionario, _ = Funcionario.objects.get_or_create(
85 |                 tenant=tenant,
   |

E501 Line too long (132 > 120)
   --> core\management\commands\seed_bella_estetica.py:184:121
    |
182 |                     cliente=cliente,
183 |                     nome_completo=nome,
184 |                     cpf=f"{random.randint(100, 999)}.{random.randint(100, 999)}.{random.randint(100, 999)}-0{random.randint(0, 9)}",
    |                                                                                                                         ^^^^^^^^^^^^
185 |                 )
186 |             clientes.append(cliente)
    |

PLC0415 `import` should be at the top-level of a file
  --> core\management\commands\wizard_metrics_reset.py:8:9
   |
 7 |     def handle(self, *args, **options):
 8 |         from core.services import wizard_metrics
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 |
10 |         wizard_metrics.reset_all_metrics()
   |

PLR0912 Too many branches (28 > 12)
  --> core\middleware.py:27:9
   |
26 | class TenantMiddleware(MiddlewareMixin):
27 |     def process_request(self, request):
   |         ^^^^^^^^^^^^^^^
28 |         # URLs que não precisam de tenant
29 |         exempt_urls = [
   |

PLR0915 Too many statements (67 > 50)
  --> core\middleware.py:27:9
   |
26 | class TenantMiddleware(MiddlewareMixin):
27 |     def process_request(self, request):
   |         ^^^^^^^^^^^^^^^
28 |         # URLs que não precisam de tenant
29 |         exempt_urls = [
   |

PLR0911 Too many return statements (10 > 6)
   --> core\middleware.py:184:9
    |
182 |     }
183 |
184 |     def process_request(self, request):
    |         ^^^^^^^^^^^^^^^
185 |         # Verificar se é uma URL isenta
186 |         if request.path == "/":
    |

PLR0912 Too many branches (21 > 12)
   --> core\middleware.py:184:9
    |
182 |     }
183 |
184 |     def process_request(self, request):
    |         ^^^^^^^^^^^^^^^
185 |         # Verificar se é uma URL isenta
186 |         if request.path == "/":
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> core\middleware.py:288:17
    |
286 |             and request.method in self.AUDITED_METHODS
287 |             and not any(request.path.startswith(url) for url in self.EXEMPT_URLS)
288 |             and 200 <= response.status_code < 400
    |                 ^^^
289 |         ):
290 |             return response
    |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
   --> core\middleware.py:288:47
    |
286 |             and request.method in self.AUDITED_METHODS
287 |             and not any(request.path.startswith(url) for url in self.EXEMPT_URLS)
288 |             and 200 <= response.status_code < 400
    |                                               ^^^
289 |         ):
290 |             return response
    |

PLC0415 `import` should be at the top-level of a file
   --> core\mixins.py:175:9
    |
174 |     def handle_no_permission(self):
175 |         from django.contrib.auth.views import redirect_to_login
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
176 |
177 |         return redirect_to_login(self.request.get_full_path())
    |

PLC0415 `import` should be at the top-level of a file
   --> core\mixins.py:190:9
    |
189 |     def handle_no_permission(self):  # Redirecionar para login ao invés de 403 para alinhar com testes
190 |         from django.contrib.auth.views import redirect_to_login
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
191 |
192 |         return redirect_to_login(self.request.get_full_path())
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:104:13
    |
102 |         # Compat testes: se em ambiente de teste e enabled_modules vazio, auto popular com todos módulos conhecidos
103 |         try:
104 |             from django.conf import settings
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
105 |
106 |             if getattr(settings, "TESTING", False) and (not self.enabled_modules or self.enabled_modules == {}):
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:110:21
    |
108 |                 mods = []
109 |                 try:
110 |                     from django.conf import settings as _s
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
111 |
112 |                     for item in getattr(_s, "PANDORA_MODULES", []):
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:132:9
    |
130 |     @staticmethod
131 |     def _normalize_enabled_modules(raw):  # pragma: no cover - coberto indiretamente por testes
132 |         import json as _json
    |         ^^^^^^^^^^^^^^^^^^^^
133 |
134 |         normalized = []
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:870:9
    |
868 |     @tenant.setter
869 |     def tenant(self, value):
870 |         from .models import TenantUser  # import local para evitar ordem
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
871 |
872 |         if not value:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:888:13
    |
887 |         def add(self, *tenants):
888 |             from .models import TenantUser  # local import para evitar ciclos
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
889 |
890 |             for tenant in tenants:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\models.py:964:9
    |
963 |     def clean(self):
964 |         from django.core.exceptions import ValidationError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
965 |
966 |         super().clean()
    |

PLC0415 `import` should be at the top-level of a file
    --> core\models.py:1002:9
     |
1001 |     def clean(self):
1002 |         from django.core.exceptions import ValidationError
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1003 |
1004 |         super().clean()
     |

PLC0415 `import` should be at the top-level of a file
    --> core\models.py:1260:9
     |
1258 |     @property
1259 |     def vigente(self):
1260 |         from django.utils import timezone
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1261 |
1262 |         hoje = timezone.now().date()
     |

E501 Line too long (124 > 120)
  --> core\signals.py:92:121
   |
90 |         logger.error(f"❌ ERRO ao criar modelos relacionados para {instance.name}: {e}")
91 |         logger.error(
92 |             f"   - Dados do tenant: tipo={instance.tipo_pessoa}, cnpj={instance.cnpj}, razao_social={instance.razao_social}"
   |                                                                                                                         ^^^^
93 |         )
94 |         # Re-raise para não mascarar o erro
   |

B025 try-except block with duplicate exception `NoReverseMatch`
  --> core\templatetags\core_filters.py:53:16
   |
51 |         except NoReverseMatch:
52 |             return "#"
53 |         except NoReverseMatch:
   |                ^^^^^^^^^^^^^^
54 |             return "#"
   |

PLC0415 `import` should be at the top-level of a file
   --> core\templatetags\core_tags.py:198:9
    |
196 |     """
197 |     try:
198 |         import json
    |         ^^^^^^^^^^^
199 |
200 |         return json.dumps(value)
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> core\templatetags\core_tags.py:240:30
    |
238 |         cpf_clean = "".join(filter(str.isdigit, str(cpf)))
239 |
240 |         if len(cpf_clean) != 11:
    |                              ^^
241 |             return cpf  # Retorna original se não tiver 11 dígitos
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> core\templatetags\core_tags.py:261:31
    |
259 |         cnpj_clean = "".join(filter(str.isdigit, str(cnpj)))
260 |
261 |         if len(cnpj_clean) != 14:
    |                               ^^
262 |             return cnpj  # Retorna original se não tiver 14 dígitos
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> core\templatetags\core_tags.py:282:32
    |
280 |         phone_clean = "".join(filter(str.isdigit, str(phone)))
281 |
282 |         if len(phone_clean) == 10:
    |                                ^^
283 |             # Telefone fixo: (XX) XXXX-XXXX
284 |             return f"({phone_clean[:2]}) {phone_clean[2:6]}-{phone_clean[6:10]}"
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> core\templatetags\core_tags.py:285:34
    |
283 |             # Telefone fixo: (XX) XXXX-XXXX
284 |             return f"({phone_clean[:2]}) {phone_clean[2:6]}-{phone_clean[6:10]}"
285 |         elif len(phone_clean) == 11:
    |                                  ^^
286 |             # Celular: (XX) 9XXXX-XXXX
287 |             return f"({phone_clean[:2]}) {phone_clean[2:7]}-{phone_clean[7:11]}"
    |

PLR0911 Too many return statements (7 > 6)
  --> core\templatetags\menu_tags.py:44:9
   |
42 |         is_admin_of_tenant = TenantUser.objects.filter(tenant=tenant, user=user, is_tenant_admin=True).exists()
43 |
44 |     def can_view_module(module_config):
   |         ^^^^^^^^^^^^^^^
45 |         """Verifica se o usuário pode visualizar o módulo.
46 |         Se FEATURE_UNIFIED_ACCESS estiver ativa e authorization disponível, usa a função central.
   |

E501 Line too long (123 > 120)
  --> core\templatetags\menu_tags.py:71:121
   |
69 |             return False
70 |
71 |     # Se usuário não tem tenant e não é superuser, provavelmente é usuário somente portal -> não renderiza menu corporativo
   |                                                                                                                         ^^^
72 |     if not tenant and not user.is_superuser:
73 |         return ""
   |

E722 Do not use bare `except`
   --> core\templatetags\menu_tags.py:99:5
    |
 97 |     try:
 98 |         return render_to_string("core/sidebar_menu.html", menu_context, request=request)
 99 |     except Exception:
    |     ^^^^^^
100 |         # Fallback para o sistema antigo se o template não existir
101 |         return _render_menu_fallback(processed_groups, request)
    |

E501 Line too long (154 > 120)
   --> core\templatetags\menu_tags.py:209:121
    |
207 | … do submenu
208 | …
209 | … class="{child_link_class}"><span class="nav-text">{child["name"]}</span></a></li>'
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
210 | …
211 | …
    |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_dashboard_widgets_smoke.py:9:9
   |
 7 |     # Se módulo referenciar model inexistente, injeta stub para permitir import leve
 8 |     try:
 9 |         from user_management import models as um_models
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |     except Exception:
11 |         um_models = None
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_dashboard_widgets_smoke.py:25:5
   |
24 |         monkeypatch.setattr("user_management.models.Usuario", _UsuarioStub, raising=False)
25 |     from core.dashboard_widgets import CoreDashboardWidgets
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 |     mgr = CoreDashboardWidgets(request=None)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_departments_api.py:32:32
   |
30 |     # 1) Sem tenant => somente globais
31 |     resp = client.get(url)
32 |     assert resp.status_code == 200
   |                                ^^^
33 |     data = resp.json()["results"]
34 |     ids = {d["id"] for d in data}
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_departments_api.py:39:32
   |
37 |     # 2) Com tenant t1 + include_globals=true (default) => global + t1
38 |     resp = client.get(url, {"tenant": t1.id})
39 |     assert resp.status_code == 200
   |                                ^^^
40 |     data = resp.json()["results"]
41 |     names = {d["name"] for d in data}
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_departments_api.py:46:32
   |
44 |     # 3) Com tenant t1 + include_globals=false => apenas t1
45 |     resp = client.get(url, {"tenant": t1.id, "include_globals": "false"})
46 |     assert resp.status_code == 200
   |                                ^^^
47 |     data = resp.json()["results"]
48 |     names = {d["name"] for d in data}
   |

PLC0415 `import` should be at the top-level of a file
 --> core\tests\test_enabled_modules_normalization.py:7:5
  |
5 | def test_normalization_various_formats(settings):
6 |     settings.FEATURE_STRICT_ENABLED_MODULES = True
7 |     from core.models import Tenant
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 |     cases = [
  |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_enabled_modules_normalization.py:31:5
   |
29 | def test_audit_command_detection(settings, capsys):
30 |     settings.FEATURE_STRICT_ENABLED_MODULES = False  # evitar auto normalizar nesta criação
31 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 |
33 |     t = Tenant.objects.create(nome="Legacy", slug="legacy", enabled_modules=["x", "y", "x"])
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_enabled_modules_normalization.py:35:5
   |
33 |     t = Tenant.objects.create(nome="Legacy", slug="legacy", enabled_modules=["x", "y", "x"])
34 |     # Rodar auditoria sem apply
35 |     from django.core.management import call_command
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |
37 |     call_command("audit_enabled_modules")
   |

PLC0415 `import` should be at the top-level of a file
 --> core\tests\test_smoke_chatbot_home.py:7:5
  |
6 | def test_chatbot_instantiation_and_simple_process(tmp_path, monkeypatch):
7 |     from core.chatbot import PandoraChatbot
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 |     # Cria config mínima
  |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_smoke_chatbot_home.py:25:5
   |
24 | def test_home_system_metrics_empty_ok():
25 |     from core.home_system import CoreHomeSystem
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 |     hs = CoreHomeSystem()
   |

E402 Module level import not at top of file
  --> core\tests\test_utils_and_inactivity.py:74:1
   |
73 | # ---------------- SessionInactivityMiddleware -----------------
74 | from core.middleware_session_inactivity import SessionInactivityMiddleware
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
75 | from user_management.models import SessaoUsuario
   |

E402 Module level import not at top of file
  --> core\tests\test_utils_and_inactivity.py:75:1
   |
73 | # ---------------- SessionInactivityMiddleware -----------------
74 | from core.middleware_session_inactivity import SessionInactivityMiddleware
75 | from user_management.models import SessaoUsuario
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

PLR2004 Magic value used in comparison, consider replacing `2.5` with a constant variable
   --> core\tests\test_utils_formatting_json.py:114:25
    |
112 |     assert back["n"] == 1
113 |     # roundtrip decimal becomes float
114 |     assert back["d"] == 2.5
    |                         ^^^
115 |     # invalid returns {}
116 |     assert utils.json_deserialize("invalid json") == {}
    |

PLR2004 Magic value used in comparison, consider replacing `12` with a constant variable
  --> core\tests\test_wizard_correlation_header.py:69:32
   |
67 |     assert resp.status_code in (302, 303)
68 |     cid = resp.headers.get("X-Wizard-Correlation-Id") or resp.get("X-Wizard-Correlation-Id")
69 |     assert cid and len(cid) == 12
   |                                ^^
70 |
71 |     # Tenant criado com subdomain normalizado (único)
   |

E501 Line too long (157 > 120)
  --> core\tests\test_wizard_e2e.py:54:121
   |
52 | …
53 | …
54 | …min_nome":"Admin Um","admin_senha":"Segura123","admin_confirmar_senha":"Segura123"}]'
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
55 | …
56 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_finish_exception.py:26:5
   |
25 |     # Forçar exceção logo após consolidar dados mockando form save
26 |     from core import wizard_views
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:18:5
   |
17 |     # Simular duas sessões tocadas no passado e não ativas
18 |     import time as _t
   |     ^^^^^^^^^^^^^^^^^
19 |
20 |     from core.services import wizard_metrics as wm
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:20:5
   |
18 |     import time as _t
19 |
20 |     from core.services import wizard_metrics as wm
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 |     with wm._lock:  # acessar diretamente estruturas internas (teste de infra)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:27:32
   |
25 |     url = reverse("core:wizard_metrics")
26 |     resp = client.get(url)
27 |     assert resp.status_code == 200
   |                                ^^^
28 |     data = resp.json()["wizard_metrics"]
29 |     # Como threshold = 0.1, ambas devem ser consideradas abandonadas e removidas
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:30:42
   |
28 |     data = resp.json()["wizard_metrics"]
29 |     # Como threshold = 0.1, ambas devem ser consideradas abandonadas e removidas
30 |     assert data["abandoned_sessions"] >= 2
   |                                          ^
31 |     # Chamada subsequente não deve contar novamente (já prunadas)
32 |     resp2 = client.get(url)
   |

E501 Line too long (142 > 120)
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:39:121
   |
37 | …
38 | … client, settings):
39 | … outcome) retrocompatível e que snapshot expõe last_finish_correlation_id."""
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^
40 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:52:5
   |
51 |     # Forçar registro manual simulando finalização
52 |     from core.services import wizard_metrics as wm
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
53 |
54 |     wm.set_last_finish_correlation_id("abc123cid999")
   |

PLR2004 Magic value used in comparison, consider replacing `0.05` with a constant variable
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:60:19
   |
58 |     lat, cid, outcome = calls[-1]
59 |     assert cid == "abc123cid999"
60 |     assert lat == 0.05
   |                   ^^^^
61 |     assert outcome is None  # chamada manual sem outcome
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:65:32
   |
63 |     url = reverse("core:wizard_metrics")
64 |     resp = client.get(url)
65 |     assert resp.status_code == 200
   |                                ^^^
66 |     snapshot = resp.json()["wizard_metrics"]
67 |     assert snapshot["last_finish_correlation_id"] == "abc123cid999"
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_metrics_abandon_and_sink.py:73:5
   |
71 | def test_wizard_metrics_latency_outcomes_and_time_to_abandon(monkeypatch, client, settings):
72 |     """Simula diferentes outcomes registrando latências e abandono com mock de tempo."""
73 |     from core.services import wizard_metrics as wm
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
74 |
75 |     # Mock time
   |

PLC0415 `import` should be at the top-level of a file
  --> core\tests\test_wizard_metrics_endpoint.py:15:5
   |
13 |     3. Staff -> 200 com payload esperado
14 |     """
15 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 |     staff = User.objects.create_user(username="staff", email="s@example.com", password="x12345678", is_staff=True)
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> core\tests\test_wizard_metrics_endpoint.py:37:32
   |
35 |     resp = client.get(url)
36 |     # Deve ser 403 direto (view faz check manual de staff)
37 |     assert resp.status_code == 403
   |                                ^^^
38 |     client.logout()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_wizard_metrics_endpoint.py:43:32
   |
41 |     client.force_login(staff)
42 |     resp = client.get(url)
43 |     assert resp.status_code == 200
   |                                ^^^
44 |     data = resp.json()
45 |     assert "wizard_metrics" in data
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> core\tests\test_wizard_metrics_no_tenant.py:14:32
   |
12 |     url = reverse("core:wizard_metrics")
13 |     resp = client.get(url)
14 |     assert resp.status_code == 200
   |                                ^^^
15 |     payload = resp.json()
16 |     assert "wizard_metrics" in payload
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> core\tests\test_wizard_metrics_reset_command.py:22:42
   |
20 |     assert before["counters"]["finish_success"] == 1
21 |     assert before["counters"]["finish_subdomain_duplicate"] == 1
22 |     assert before["latency"]["count"] >= 2
   |                                          ^
23 |
24 |     # Executa comando
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> core\tests\test_wizard_services.py:55:31
   |
53 |         data = {"admins_json": '[{"email":"a@a","nome":"A"},{"email":"b@b","nome":"B"}]'}
54 |         admins, bulk = parse_admins_payload(data)
55 |         assert len(admins) == 2
   |                               ^
56 |         assert bulk is None
   |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
  --> core\tests\test_wizard_services.py:80:31
   |
78 |         data = {"admins_json": str(items).replace("'", '"')}
79 |         admins, _ = parse_admins_payload(data)
80 |         assert len(admins) == 50
   |                               ^^
81 |
82 |     def test_malformed_logs_warning(self, caplog):
   |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
  --> core\utils.py:35:21
   |
33 |         return ""
34 |     cnpj = re.sub(r"\D", "", str(cnpj))
35 |     if len(cnpj) != 14:
   |                     ^^
36 |         return cnpj
37 |     return f"{cnpj[:2]}.{cnpj[2:5]}.{cnpj[5:8]}/{cnpj[8:12]}-{cnpj[12:]}"
   |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
  --> core\utils.py:45:20
   |
43 |         return ""
44 |     cpf = re.sub(r"\D", "", str(cpf))
45 |     if len(cpf) != 11:
   |                    ^^
46 |         return cpf
47 |     return f"{cpf[:3]}.{cpf[3:6]}.{cpf[6:9]}-{cpf[9:]}"
   |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
  --> core\utils.py:55:22
   |
53 |         return ""
54 |     phone = re.sub(r"\D", "", str(phone))
55 |     if len(phone) == 11:
   |                      ^^
56 |         return f"({phone[:2]}) {phone[2:7]}-{phone[7:]}"
57 |     elif len(phone) == 10:
   |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
  --> core\utils.py:57:24
   |
55 |     if len(phone) == 11:
56 |         return f"({phone[:2]}) {phone[2:7]}-{phone[7:]}"
57 |     elif len(phone) == 10:
   |                        ^^
58 |         return f"({phone[:2]}) {phone[2:6]}-{phone[6:]}"
59 |     return phone
   |

PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
  --> core\utils.py:67:20
   |
65 |         return ""
66 |     cep = re.sub(r"\D", "", str(cep))
67 |     if len(cep) != 8:
   |                    ^
68 |         return cep
69 |     return f"{cep[:5]}-{cep[5:]}"
   |

E722 Do not use bare `except`
  --> core\utils.py:79:9
   |
77 |         try:
78 |             value = Decimal(str(value))
79 |         except Exception:
   |         ^^^^^^
80 |             return str(value)
81 |     return str(value.quantize(Decimal(10) ** -decimal_places)).replace(".", ",")
   |

E722 Do not use bare `except`
  --> core\utils.py:93:5
   |
91 |     try:
92 |         return Decimal(value)
93 |     except Exception:
   |     ^^^^^^
94 |         return Decimal("0")
   |

E722 Do not use bare `except`
   --> core\utils.py:105:9
    |
103 |             # Tenta converter de string ISO (YYYY-MM-DD) para objeto date
104 |             date_obj = datetime.strptime(date_obj, "%Y-%m-%d").date()
105 |         except Exception:
    |         ^^^^^^
106 |             return date_obj
107 |     try:
    |

E722 Do not use bare `except`
   --> core\utils.py:109:5
    |
107 |     try:
108 |         return date_obj.strftime(format_str)
109 |     except Exception:
    |     ^^^^^^
110 |         return str(date_obj)
    |

E722 Do not use bare `except`
   --> core\utils.py:121:5
    |
119 |     try:
120 |         return datetime.strptime(date_str, format_str).date()
121 |     except Exception:
    |     ^^^^^^
122 |         return None
    |

PLR0912 Too many branches (16 > 12)
   --> core\utils.py:198:5
    |
198 | def get_current_tenant(request):
    |     ^^^^^^^^^^^^^^^^^^
199 |     """
200 |     Obtém o tenant (empresa) atual a partir da sessão do usuário.
    |

PLC0415 `import` should be at the top-level of a file
  --> core\views.py:61:9
   |
59 |     try:
60 |         # Importa o sistema de home
61 |         from .home_system import CoreHomeSystem
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
62 |
63 |         # Inicializa o sistema de home
   |

PLC0415 `import` should be at the top-level of a file
   --> core\views.py:109:9
    |
107 |     # Se usuário só tem conta de portal cliente e nenhum TenantUser, redireciona para portal
108 |     try:
109 |         from portal_cliente.models import ContaCliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
110 |
111 |         has_tenant_membership = Tenant.objects.filter(tenant_users__user=request.user, status="active").exists()
    |

PLR0911 Too many return statements (7 > 6)
   --> core\views.py:146:5
    |
146 | def login_view(request):
    |     ^^^^^^^^^^
147 |     """View para autenticação de usuários"""
148 |     if request.user.is_authenticated:
    |

PLR0912 Too many branches (19 > 12)
   --> core\views.py:146:5
    |
146 | def login_view(request):
    |     ^^^^^^^^^^
147 |     """View para autenticação de usuários"""
148 |     if request.user.is_authenticated:
    |

PLR0915 Too many statements (55 > 50)
   --> core\views.py:146:5
    |
146 | def login_view(request):
    |     ^^^^^^^^^^
147 |     """View para autenticação de usuários"""
148 |     if request.user.is_authenticated:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\views.py:180:21
    |
178 |                 # NOVO: Fallback para usuários que têm apenas conta de Portal Cliente (sem vínculo TenantUser)
179 |                 try:
180 |                     from portal_cliente.models import ContaCliente
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
181 |
182 |                     contas_portal = ContaCliente.objects.filter(usuario=user, ativo=True).select_related(
    |

E501 Line too long (128 > 120)
   --> core\views.py:186:121
    |
184 |                     )
185 |                     if contas_portal.exists():
186 |                         # Se não possui nenhum tenant ativo via TenantUser mas tem conta portal, permitir login direto no portal
    |                                                                                                                         ^^^^^^^^
187 |                         has_tenant_membership = Tenant.objects.filter(tenant_users__user=user, status="active").exists()
188 |                         if not has_tenant_membership:
    |

E501 Line too long (122 > 120)
   --> core\views.py:189:121
    |
187 |                         has_tenant_membership = Tenant.objects.filter(tenant_users__user=user, status="active").exists()
188 |                         if not has_tenant_membership:
189 |                             # Se todas as contas portal referem ao mesmo tenant, salvar na sessão (opcional para métricas)
    |                                                                                                                         ^^
190 |                             tenant_ids = list(
191 |                                 {c.cliente.tenant_id for c in contas_portal if c.cliente and c.cliente.tenant_id}
    |

PLR0911 Too many return statements (8 > 6)
   --> core\views.py:248:5
    |
247 | @login_required
248 | def tenant_select(request):
    |     ^^^^^^^^^^^^^
249 |     """View para seleção de tenant quando usuário tem múltiplos acessos"""
    |

PLR0912 Too many branches (15 > 12)
   --> core\views.py:248:5
    |
247 | @login_required
248 | def tenant_select(request):
    |     ^^^^^^^^^^^^^
249 |     """View para seleção de tenant quando usuário tem múltiplos acessos"""
    |

E501 Line too long (122 > 120)
   --> core\views.py:459:121
    |
457 |                     messages.success(
458 |                         request,
459 |                         f'Status da empresa "{tenant.name}" alterado para "{status_display[tenant.status]}" com sucesso!',
    |                                                                                                                         ^^
460 |                     )
461 |                 except Tenant.DoesNotExist:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\views.py:757:5
    |
755 | def role_permissions(request, pk):
756 |     """View para gerenciar permissões de um cargo"""
757 |     from django.contrib.auth.models import Permission
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
758 |     from django.contrib.contenttypes.models import ContentType
    |

PLC0415 `import` should be at the top-level of a file
   --> core\views.py:758:5
    |
756 |     """View para gerenciar permissões de um cargo"""
757 |     from django.contrib.auth.models import Permission
758 |     from django.contrib.contenttypes.models import ContentType
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
759 |
760 |     # Verificar permissões
    |

PLC0415 `import` should be at the top-level of a file
    --> core\views.py:1084:9
     |
1082 |     else:
1083 |         tenant_user = get_object_or_404(TenantUser, pk=pk, tenant=request.tenant)
1084 |         from django.http import HttpResponseForbidden
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1085 |
1086 |         if not TenantUser.objects.filter(tenant=request.tenant, user=request.user, is_tenant_admin=True).exists():
     |

E501 Line too long (136 > 120)
    --> core\views.py:1093:121
     |
1091 | …
1092 | …
1093 | …t_full_name() or tenant_user.user.username} será implementado em breve.",
     |                                                           ^^^^^^^^^^^^^^^^
1094 | …
     |

PLC0415 `import` should be at the top-level of a file
    --> core\views.py:1107:9
     |
1105 |     else:
1106 |         tenant_user = get_object_or_404(TenantUser, pk=pk, tenant=request.tenant)
1107 |         from django.http import HttpResponseForbidden
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1108 |
1109 |         if not TenantUser.objects.filter(tenant=request.tenant, user=request.user, is_tenant_admin=True).exists():
     |

PLC0415 `import` should be at the top-level of a file
    --> core\views.py:1132:9
     |
1130 |         tenant_user = get_object_or_404(TenantUser, pk=pk, tenant=request.tenant)
1131 |         # Exigir que o solicitante seja admin do tenant
1132 |         from django.http import HttpResponseForbidden
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1133 |
1134 |         if not TenantUser.objects.filter(tenant=request.tenant, user=request.user, is_tenant_admin=True).exists():
     |

E501 Line too long (123 > 120)
    --> core\views.py:1141:121
     |
1139 |     messages.info(
1140 |         request,
1141 |         f"Reset de senha para {tenant_user.user.get_full_name() or tenant_user.user.username} será implementado em breve.",
     |                                                                                                                         ^^^
1142 |     )
     |

PLC0415 `import` should be at the top-level of a file
  --> core\wizard_extensions.py:91:9
   |
89 |         super().__init__(*args, **kwargs)
90 |         # Importação lazy para evitar problemas circulares
91 |         from clientes.models import Cliente
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
92 |
93 |         self.entity_model = Cliente
   |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_extensions.py:107:9
    |
105 |         super().__init__(*args, **kwargs)
106 |         # Importação lazy
107 |         from fornecedores.models import Fornecedor
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
108 |
109 |         self.entity_model = Fornecedor
    |

E501 Line too long (130 > 120)
   --> core\wizard_forms.py:102:121
    |
100 | …                     const icon = document.createElement('i');
101 | …                     icon.className = 'fas fa-file';
102 | …                     const text = document.createTextNode(' ' + file.name + ' (' + (file.size / 1024).toFixed(1) + ' KB)');
    |                                                                                                                   ^^^^^^^^^^
103 | …                     li.appendChild(icon);
104 | …                     li.appendChild(text);
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> core\wizard_forms.py:183:21
    |
181 |                 except ValidationError as e:
182 |                     # Re-lançar erros de validação com contexto do arquivo
183 |                     raise ValidationError(f"Arquivo {i + 1}: {str(e)}")
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
184 |
185 |         return result
    |

E501 Line too long (127 > 120)
   --> core\wizard_forms.py:492:121
    |
491 |     # Campo oculto para manter a lista de endereços adicionais em JSON
492 |     # Estrutura esperada: [ { tipo:'COB'|'ENT'|'FISCAL'|'OUTRO', logradouro:'', numero:'', ... , principal: true|false }, ... ]
    |                                                                                                                         ^^^^^^^
493 |     additional_addresses_json = forms.CharField(
494 |         required=False,
    |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_forms.py:590:9
    |
588 |     def clean_additional_addresses_json(self):
589 |         """Garante que o JSON seja válido e seja uma lista; retorna string normalizada."""
590 |         import json
    |         ^^^^^^^^^^^
591 |
592 |         data = self.cleaned_data.get("additional_addresses_json")
    |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
   --> core\wizard_forms.py:601:30
    |
599 |                 return "[]"
600 |             # Opcional: limitar tamanho para evitar payloads excessivos
601 |             if len(parsed) > 50:
    |                              ^^
602 |                 parsed = parsed[:50]
603 |             return json.dumps(parsed, ensure_ascii=False)
    |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_forms.py:734:9
    |
733 |     def clean_contacts_json(self):
734 |         import json
    |         ^^^^^^^^^^^
735 |
736 |         raw = self.cleaned_data.get("contacts_json")
    |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_forms.py:770:9
    |
769 |     def clean_socials_json(self):
770 |         import json
    |         ^^^^^^^^^^^
771 |         from urllib.parse import urlparse
    |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_forms.py:771:9
    |
769 |     def clean_socials_json(self):
770 |         import json
771 |         from urllib.parse import urlparse
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
772 |
773 |         raw = self.cleaned_data.get("socials_json")
    |

PLC0415 `import` should be at the top-level of a file
    --> core\wizard_forms.py:1161:9
     |
1159 |           - Usa metadados de AVAILABLE_MODULES se existir; caso contrário gera label capitalizada.
1160 |         """
1161 |         import os
     |         ^^^^^^^^^
1162 |
1163 |         from django.conf import settings
     |

PLC0415 `import` should be at the top-level of a file
    --> core\wizard_forms.py:1163:9
     |
1161 |         import os
1162 |
1163 |         from django.conf import settings
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1164 |
1165 |         base_dir = getattr(settings, "BASE_DIR", None)
     |

F811 Redefinition of unused `__init__` from line 1196
    --> core\wizard_forms.py:1307:9
     |
1305 |         }
1306 |
1307 |     def __init__(self, *args, **kwargs):
     |         ^^^^^^^^ `__init__` redefined here
1308 |         self._editing_tenant_pk = kwargs.pop("editing_tenant_pk", None)
1309 |         super().__init__(*args, **kwargs)
     |
    ::: core\wizard_forms.py:1196:9
     |
1194 |         return discovered
1195 |
1196 |     def __init__(self, *args, **kwargs):
     |         -------- previous definition of `__init__` here
1197 |         """Inicializa o form unificando configurações de módulos e ajustes de campos numéricos.
     |
help: Remove definition: `__init__`

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_views.py:894:9
    |
892 |     def serialize_existing_contacts(self, tenant: Tenant) -> str:
893 |         """Serializa contatos existentes para JSON."""
894 |         from core.models import Contato
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
895 |
896 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> core\wizard_views.py:916:9
    |
914 |     def _save_multi_contacts(self, tenant: Tenant, raw_json: str) -> None:
915 |         """Salva uma coleção de contatos, substituindo os existentes."""
916 |         from core.models import Contato
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
917 |
918 |         try:
    |

PLC0415 `import` should be at the top-level of a file
    --> core\wizard_views.py:1042:9
     |
1040 |       def process_admin_data(self, tenant: Tenant, admin_data: dict[str, Any]) -> None:
1041 |           """Cria ou associa usuários administradores ao tenant usando bulk operations."""
1042 | /         from core.services.wizard_admins import (
1043 | |             generate_secure_password,
1044 | |             parse_admins_payload,
1045 | |         )
     | |_________^
1046 |
1047 |           admins, bulk_password = parse_admins_payload({"main": admin_data})
     |

SIM105 Use `contextlib.suppress(ImportError)` instead of `try`-`except`-`pass`
  --> cotacoes\apps.py:11:9
   |
 9 |       def ready(self):
10 |           """Importa signals quando o app estiver carregado."""
11 | /         try:
12 | |             import cotacoes.signals  # noqa
13 | |         except ImportError:
14 | |             pass
   | |________________^
   |
help: Replace with `contextlib.suppress(ImportError)`

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\metrics.py:133:9
    |
131 |     """
132 |     try:
133 |         from core.models import Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |         from cotacoes.models import Cotacao, PropostaFornecedor
135 |         from fornecedores.models import Fornecedor
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\metrics.py:134:9
    |
132 |     try:
133 |         from core.models import Tenant
134 |         from cotacoes.models import Cotacao, PropostaFornecedor
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
135 |         from fornecedores.models import Fornecedor
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\metrics.py:135:9
    |
133 |         from core.models import Tenant
134 |         from cotacoes.models import Cotacao, PropostaFornecedor
135 |         from fornecedores.models import Fornecedor
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
136 |
137 |         for tenant in Tenant.objects.all():
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\metrics.py:153:9
    |
152 |     except Exception as e:
153 |         import logging
    |         ^^^^^^^^^^^^^^
154 |
155 |         logger = logging.getLogger(__name__)
    |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\models.py:73:17
   |
71 |         if "tenant" not in kwargs or kwargs.get("tenant") is None:
72 |             try:
73 |                 from core.models import Tenant as _Tenant
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
74 |
75 |                 tenant = _Tenant.objects.first()
   |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\models.py:83:9
   |
81 |         if "descricao" not in kwargs:
82 |             kwargs["descricao"] = kwargs.get("titulo", "") or ""
83 |         from django.utils import timezone as _tz
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
84 |
85 |         if validade_legada and "prazo_proposta" not in kwargs:
   |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\models.py:96:17
   |
94 |         if "criado_por" not in kwargs:
95 |             try:
96 |                 from django.contrib.auth import get_user_model as _gum
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
97 |
98 |                 U = _gum()
   |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:123:9
    |
121 |     def validate_prazo_proposta(self, value):
122 |         """Valida se prazo é futuro."""
123 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
124 |
125 |         if value <= timezone.now():
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:137:9
    |
135 |     def create(self, validated_data):
136 |         """Cria cotação com itens."""
137 |         from core.utils import get_current_tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
138 |
139 |         from .services.cotacao_service import CotacaoService
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:139:9
    |
137 |         from core.utils import get_current_tenant
138 |
139 |         from .services.cotacao_service import CotacaoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
140 |
141 |         itens_data = validated_data.pop("itens")
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:247:9
    |
245 |     def validate_validade_proposta(self, value):
246 |         """Valida se validade é futura."""
247 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
248 |
249 |         if value <= timezone.now().date():
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> cotacoes\serializers.py:262:13
    |
260 |             fornecedor = acesso.fornecedor
261 |         except AcessoFornecedor.DoesNotExist:
262 |             raise serializers.ValidationError("Usuário não tem acesso de fornecedor")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
263 |
264 |         # Verificar se pode participar
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:273:9
    |
271 |     def create(self, validated_data):
272 |         """Cria proposta."""
273 |         from .services.cotacao_service import PropostaService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
274 |
275 |         request = self.context["request"]
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\serializers.py:304:9
    |
302 |     def update(self, instance, validated_data):
303 |         """Atualiza item usando service."""
304 |         from .services.cotacao_service import PropostaService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 |
306 |         return PropostaService.atualizar_item_proposta(
    |

PLR0913 Too many arguments in function definition (9 > 5)
  --> cotacoes\services\cotacao_service.py:24:9
   |
23 |     @staticmethod
24 |     def criar_cotacao(
   |         ^^^^^^^^^^^^^
25 |         tenant,
26 |         titulo: str,
   |

PLR0913 Too many arguments in function definition (7 > 5)
   --> cotacoes\services\cotacao_service.py:194:9
    |
193 |     @staticmethod
194 |     def criar_proposta(
    |         ^^^^^^^^^^^^^^
195 |         cotacao: Cotacao,
196 |         fornecedor,
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\services\cotacao_service.py:209:13
    |
207 |         pode, motivo = cotacao.pode_receber_proposta(fornecedor)
208 |         if not pode:
209 |             import os
    |             ^^^^^^^^^
210 |
211 |             bypass = os.environ.get("RELAX_FORNECEDOR_TESTS") == "1"
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> cotacoes\services\cotacao_service.py:247:9
    |
246 |     @staticmethod
247 |     def atualizar_item_proposta(
    |         ^^^^^^^^^^^^^^^^^^^^^^^
248 |         proposta: PropostaFornecedor,
249 |         item_cotacao_id: int,
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> cotacoes\services\cotacao_service.py:273:13
    |
272 |         except PropostaFornecedorItem.DoesNotExist:
273 |             raise ValueError("Item da proposta não encontrado")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
274 |
275 |     @staticmethod
    |

PLR0912 Too many branches (20 > 12)
  --> cotacoes\services\proposta_item_service.py:30:9
   |
29 |     @classmethod
30 |     def atualizar_inline(
   |         ^^^^^^^^^^^^^^^^
31 |         cls,
32 |         proposta,
   |

PLR0915 Too many statements (51 > 50)
  --> cotacoes\services\proposta_item_service.py:30:9
   |
29 |     @classmethod
30 |     def atualizar_inline(
   |         ^^^^^^^^^^^^^^^^
31 |         cls,
32 |         proposta,
   |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> cotacoes\services\proposta_item_service.py:113:13
    |
112 |               # Auditoria básica
113 | /             try:
114 | |                 AuditLog.objects.create(
115 | |                     user=user,
116 | |                     tenant=tenant,
117 | |                     action_type="UPDATE" if not created else "CREATE",
118 | |                     change_message=f"Atualização inline item proposta {proposta.id}",
119 | |                     ip_address=None,
120 | |                     content_type=None,
121 | |                     object_id=item.id,
122 | |                 )
123 | |             except Exception:  # pragma: no cover
124 | |                 pass
    | |____________________^
125 |
126 |           return item, created, {"before": before_snapshot, "after": after_snapshot}
    |
help: Replace with `contextlib.suppress(Exception)`

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\signals.py:19:9
   |
17 |     # Gerar código automaticamente se não fornecido
18 |     if not instance.codigo:
19 |         from django.utils.crypto import get_random_string
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 |         year = timezone.now().year
   |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\tasks.py:29:9
   |
27 |     """
28 |     try:
29 |         from fornecedores.models import Fornecedor
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
30 |         from portal_fornecedor.models import AcessoFornecedor
   |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\tasks.py:30:9
   |
28 |     try:
29 |         from fornecedores.models import Fornecedor
30 |         from portal_fornecedor.models import AcessoFornecedor
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
31 |
32 |         from .models import Cotacao
   |

PLC0415 `import` should be at the top-level of a file
  --> cotacoes\tasks.py:32:9
   |
30 |         from portal_fornecedor.models import AcessoFornecedor
31 |
32 |         from .models import Cotacao
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
33 |
34 |         cotacao = Cotacao.objects.get(id=cotacao_id)
   |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:106:9
    |
104 |     """
105 |     try:
106 |         from .models import Cotacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
107 |
108 |         cotacoes_vencidas = Cotacao.objects.filter(status="aberta", prazo_proposta__lt=timezone.now())
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:142:9
    |
140 |     """
141 |     try:
142 |         from portal_fornecedor.models import AcessoFornecedor
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
143 |
144 |         from .models import Cotacao
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:144:9
    |
142 |         from portal_fornecedor.models import AcessoFornecedor
143 |
144 |         from .models import Cotacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
145 |
146 |         data_limite = timezone.now() + timedelta(days=dias_antecedencia)
    |

E501 Line too long (125 > 120)
   --> cotacoes\tasks.py:177:121
    |
175 |                         send_mail(
176 |                             subject=assunto,
177 |                             message=f"A cotação {cotacao.codigo} expira em breve. Acesse o portal para enviar sua proposta.",
    |                                                                                                                         ^^^^^
178 |                             html_message=corpo_html,
179 |                             from_email=settings.DEFAULT_FROM_EMAIL,
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:221:9
    |
219 |     """
220 |     try:
221 |         from decimal import Decimal
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
222 |
223 |         from django.db import models
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:223:9
    |
221 |         from decimal import Decimal
222 |
223 |         from django.db import models
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
224 |
225 |         from core.models import Tenant
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:225:9
    |
223 |         from django.db import models
224 |
225 |         from core.models import Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
226 |
227 |         from .models import Cotacao, PropostaFornecedor
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:227:9
    |
225 |         from core.models import Tenant
226 |
227 |         from .models import Cotacao, PropostaFornecedor
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
228 |
229 |         tenant = Tenant.objects.get(id=tenant_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:276:13
    |
274 |         @health_check_component("database")
275 |         def check_database():
276 |             from django.db import connection
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
277 |
278 |             with connection.cursor() as cursor:
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:286:17
    |
284 |         def check_redis():
285 |             try:
286 |                 from django.core.cache import cache
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
287 |
288 |                 cache.set("health_check", "ok", 30)
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\tasks.py:297:17
    |
295 |         def check_email():
296 |             try:
297 |                 from django.core.mail import get_connection
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
298 |
299 |                 connection = get_connection()
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> cotacoes\tests\test_portal_fornecedor.py:23:32
   |
21 |     url = reverse("cotacoes:portal-dashboard")
22 |     resp = client.get(url)
23 |     assert resp.status_code == 200
   |                                ^^^
   |

PLR2004 Magic value used in comparison, consider replacing `404` with a constant variable
  --> cotacoes\tests\test_portal_fornecedor.py:61:32
   |
59 |     url = reverse("cotacoes:portal-dashboard")
60 |     resp = client.get(url)
61 |     assert resp.status_code == 404
   |                                ^^^
   |

E402 Module level import not at top of file
  --> cotacoes\views_portal.py:23:1
   |
21 | logger = logging.getLogger(__name__)
22 |
23 | import contextlib
   | ^^^^^^^^^^^^^^^^^
24 |
25 | from portal_fornecedor.models import AcessoFornecedor
   |

E402 Module level import not at top of file
  --> cotacoes\views_portal.py:25:1
   |
23 | import contextlib
24 |
25 | from portal_fornecedor.models import AcessoFornecedor
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from shared.portal.decorators import fornecedor_required
   |

E402 Module level import not at top of file
  --> cotacoes\views_portal.py:26:1
   |
25 | from portal_fornecedor.models import AcessoFornecedor
26 | from shared.portal.decorators import fornecedor_required
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | from .models import Cotacao, CotacaoItem, PropostaFornecedor
   |

E402 Module level import not at top of file
  --> cotacoes\views_portal.py:28:1
   |
26 | from shared.portal.decorators import fornecedor_required
27 |
28 | from .models import Cotacao, CotacaoItem, PropostaFornecedor
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 | from .services.cotacao_service import PropostaService
   |

E402 Module level import not at top of file
  --> cotacoes\views_portal.py:29:1
   |
28 | from .models import Cotacao, CotacaoItem, PropostaFornecedor
29 | from .services.cotacao_service import PropostaService
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
30 |
31 | try:
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> cotacoes\views_portal.py:55:9
   |
53 |         return AcessoFornecedor.objects.select_related("fornecedor").get(usuario=user, ativo=True)
54 |     except AcessoFornecedor.DoesNotExist:
55 |         raise Http404("Acesso de fornecedor não encontrado ou inativo")
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\views_portal.py:166:9
    |
165 |     if request.method == "POST":
166 |         from time import time as _t
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
167 |
168 |         _start = _t()
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\views_portal.py:228:9
    |
227 |     if request.method == "POST":
228 |         from time import time as _t
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
229 |
230 |         _start = _t()
    |

PLC0415 `import` should be at the top-level of a file
   --> cotacoes\views_portal.py:288:9
    |
286 |     proposta = get_object_or_404(PropostaFornecedor, pk=pk, fornecedor=acesso.fornecedor)
287 |     if request.method == "POST":
288 |         from time import time as _t
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
289 |
290 |         _start = _t()
    |

PLC0415 `import` should be at the top-level of a file
   --> documentos\models.py:198:9
    |
197 |     def clean(self):  # noqa
198 |         from django.core.exceptions import ValidationError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
199 |
200 |         # Unicidade lógica: impedir múltiplas aprovadas ativas com mesmo escopo-chave
    |

PLR2004 Magic value used in comparison, consider replacing `201` with a constant variable
  --> documentos\tests\test_bulk_setup_api.py:32:29
   |
30 |     }
31 |     r = client.post(url, data=json.dumps(payload), content_type="application/json")
32 |     assert r.status_code == 201, r.content
   |                             ^^^
33 |     data = r.json()
34 |     assert data["regras"][0]["dominio_id"] == dominio.id
   |

PLR2004 Magic value used in comparison, consider replacing `201` with a constant variable
  --> documentos\tests\test_bulk_setup_api.py:52:29
   |
50 |     }
51 |     r = client.post(url, data=json.dumps(payload), content_type="application/json")
52 |     assert r.status_code == 201, r.content
   |                             ^^^
53 |     regra = RegraDocumento.objects.get()
54 |     assert regra.dominio_id == dominio.id
   |

PLR2004 Magic value used in comparison, consider replacing `201` with a constant variable
  --> documentos\tests\test_bulk_setup_api.py:69:29
   |
67 |     }
68 |     r = client.post(url, data=json.dumps(payload), content_type="application/json")
69 |     assert r.status_code == 201, r.content
   |                             ^^^
70 |     regra = RegraDocumento.objects.get()
71 |     assert regra.dominio_id is None
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> documentos\tests\test_bulk_setup_api.py:86:29
   |
84 |     }
85 |     r = client.post(url, data=json.dumps(payload), content_type="application/json")
86 |     assert r.status_code == 400
   |                             ^^^
87 |     body = r.json()
88 |     assert "regras" in body["errors"]
   |

PLC0415 `import` should be at the top-level of a file
  --> documentos\views.py:23:5
   |
21 |     else:
22 |         recent_regras = base_qs.filter(tenant__isnull=True).order_by("-atualizado_em")[:8]
23 |     from django.db.models import Count
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |
25 |     exigencia_stats_qs = RegraDocumento.objects.values("exigencia").annotate(qtd=Count("id"))
   |

E402 Module level import not at top of file
  --> documentos\views.py:58:1
   |
58 | import json
   | ^^^^^^^^^^^
59 |
60 | from django.contrib import messages
   |

E402 Module level import not at top of file
  --> documentos\views.py:60:1
   |
58 | import json
59 |
60 | from django.contrib import messages
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
61 | from django.contrib.contenttypes.models import ContentType
62 | from django.db import transaction
   |

E402 Module level import not at top of file
  --> documentos\views.py:61:1
   |
60 | from django.contrib import messages
61 | from django.contrib.contenttypes.models import ContentType
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
62 | from django.db import transaction
63 | from django.http import Http404, JsonResponse
   |

E402 Module level import not at top of file
  --> documentos\views.py:62:1
   |
60 | from django.contrib import messages
61 | from django.contrib.contenttypes.models import ContentType
62 | from django.db import transaction
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
63 | from django.http import Http404, JsonResponse
64 | from django.shortcuts import get_object_or_404, redirect, render
   |

E402 Module level import not at top of file
  --> documentos\views.py:63:1
   |
61 | from django.contrib.contenttypes.models import ContentType
62 | from django.db import transaction
63 | from django.http import Http404, JsonResponse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
64 | from django.shortcuts import get_object_or_404, redirect, render
65 | from django.urls import reverse
   |

E402 Module level import not at top of file
  --> documentos\views.py:64:1
   |
62 | from django.db import transaction
63 | from django.http import Http404, JsonResponse
64 | from django.shortcuts import get_object_or_404, redirect, render
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
65 | from django.urls import reverse
66 | from django.utils.translation import gettext_lazy as _
   |

E402 Module level import not at top of file
  --> documentos\views.py:65:1
   |
63 | from django.http import Http404, JsonResponse
64 | from django.shortcuts import get_object_or_404, redirect, render
65 | from django.urls import reverse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
66 | from django.utils.translation import gettext_lazy as _
67 | from django.views.decorators.http import require_POST
   |

E402 Module level import not at top of file
  --> documentos\views.py:66:1
   |
64 | from django.shortcuts import get_object_or_404, redirect, render
65 | from django.urls import reverse
66 | from django.utils.translation import gettext_lazy as _
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
67 | from django.views.decorators.http import require_POST
   |

E402 Module level import not at top of file
  --> documentos\views.py:67:1
   |
65 | from django.urls import reverse
66 | from django.utils.translation import gettext_lazy as _
67 | from django.views.decorators.http import require_POST
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |
69 | from .forms import (
   |

E402 Module level import not at top of file
  --> documentos\views.py:69:1
   |
67 |   from django.views.decorators.http import require_POST
68 |
69 | / from .forms import (
70 | |     CategoriaDocumentoForm,
71 | |     DocumentoForm,
72 | |     DocumentoVersaoForm,
73 | |     DominioDocumentoForm,
74 | |     RegraDocumentoForm,
75 | |     TipoDocumentoForm,
76 | | )
   | |_^
77 |   from .models import (
78 |       CategoriaDocumento,
   |

E402 Module level import not at top of file
  --> documentos\views.py:77:1
   |
75 |       TipoDocumentoForm,
76 |   )
77 | / from .models import (
78 | |     CategoriaDocumento,
79 | |     Documento,
80 | |     DocumentoVersao,
81 | |     DominioDocumento,
82 | |     RegraDocumento,
83 | |     TipoDocumento,
84 | |     WizardTenantDocumentoTemp,
85 | | )
   | |_^
86 |   from .services import resolver_exigencias_tenant
   |

E402 Module level import not at top of file
  --> documentos\views.py:86:1
   |
84 |     WizardTenantDocumentoTemp,
85 | )
86 | from .services import resolver_exigencias_tenant
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E501 Line too long (124 > 120)
   --> documentos\views.py:297:121
    |
295 |     """Cria TipoDocumento via AJAX.
296 |     Request JSON: {nome, descricao, categoria_id, periodicidade, ativo, versionavel}
297 |     Response sucesso: {ok:true, tipo:{id,nome,descricao,categoria_nome,periodicidade,periodicidade_label,ativo,versionavel}}
    |                                                                                                                         ^^^^
298 |     """
299 |     data = request.POST or None
    |

E501 Line too long (132 > 120)
   --> documentos\views.py:342:121
    |
341 | …
342 | …model que combine (assumindo convenção de único model principal por app)
    |                                                              ^^^^^^^^^^^^
343 | …t_id)
344 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> documentos\views.py:479:5
    |
477 |                     )
478 |     # preparar sugestões de app_labels
479 |     from django.contrib.contenttypes.models import ContentType
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
480 |
481 |     app_labels = list(ContentType.objects.values_list("app_label", flat=True).distinct().order_by("app_label"))
    |

PLR0912 Too many branches (20 > 12)
   --> documentos\views.py:535:5
    |
533 | @login_required
534 | @require_POST
535 | def regra_create_ajax(request):
    |     ^^^^^^^^^^^^^^^^^
536 |     """Cria RegraDocumento via AJAX.
537 |     Espera JSON ou form data com campos mínimos: tipo, exigencia, escopo ou nivel_aplicacao.
    |

PLR0915 Too many statements (52 > 50)
   --> documentos\views.py:535:5
    |
533 | @login_required
534 | @require_POST
535 | def regra_create_ajax(request):
    |     ^^^^^^^^^^^^^^^^^
536 |     """Cria RegraDocumento via AJAX.
537 |     Espera JSON ou form data com campos mínimos: tipo, exigencia, escopo ou nivel_aplicacao.
    |

E501 Line too long (159 > 120)
   --> documentos\views.py:542:121
    |
540 | …ional model_hint)
541 | …
542 | …ncia_label,nivel_aplicacao,escopo,periodicidade,periodicidade_label,ativo,app_label}}
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
543 | …
544 | …
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> documentos\views.py:573:5
    |
571 |           if not request.user.is_superuser and not request.user.has_perm("documentos.add_regra_global"):
572 |               preliminar_errors["__all__"] = [_("Sem permissão para criar regra global")]
573 | /     if escopo == "tenant":
574 | |         # Apenas superuser ou tenant admin (simplificado aqui: superuser) pode criar.
575 | |         if not request.user.is_superuser:
    | |_________________________________________^
576 |               preliminar_errors["__all__"] = [_("Sem permissão para criar regra de tenant")]
577 |       if escopo == "entidade" and not (app_label and entidade_object_id):
    |
help: Combine `if` statements using `and`

PLC0415 `import` should be at the top-level of a file
   --> documentos\views.py:665:9
    |
663 |     form = DocumentoVersaoForm(request.POST or None, request.FILES or None)
664 |     if form.is_valid():
665 |         from django.db.models import Max
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
666 |
667 |         versao = form.save(commit=False)
    |

PLC0415 `import` should be at the top-level of a file
   --> documentos\views.py:680:5
    |
678 | def setup_inteligente(request):
679 |     """Renderiza página única para criar categorias, tipos e regras em lote."""
680 |     import json
    |     ^^^^^^^^^^^
681 |
682 |     categorias_existentes = list(CategoriaDocumento.objects.values("id", "nome").order_by("nome"))
    |

PLR0912 Too many branches (26 > 12)
   --> documentos\views.py:719:5
    |
717 | @login_required
718 | @require_POST
719 | def bulk_setup_api(request):
    |     ^^^^^^^^^^^^^^
720 |     """API simples (JSON) para criação transacional de categorias, tipos e regras.
721 |     Payload esperado:
    |

PLR0915 Too many statements (93 > 50)
   --> documentos\views.py:719:5
    |
717 | @login_required
718 | @require_POST
719 | def bulk_setup_api(request):
    |     ^^^^^^^^^^^^^^
720 |     """API simples (JSON) para criação transacional de categorias, tipos e regras.
721 |     Payload esperado:
    |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
   --> documentos\views.py:751:34
    |
750 |     # Limites simples para evitar abusos
751 |     if len(categorias_payload) > 50 or len(tipos_payload) > 50 or len(regras_payload) > 100:
    |                                  ^^
752 |         return JsonResponse({"error": "Limite excedido."}, status=400)
    |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
   --> documentos\views.py:751:61
    |
750 |     # Limites simples para evitar abusos
751 |     if len(categorias_payload) > 50 or len(tipos_payload) > 50 or len(regras_payload) > 100:
    |                                                             ^^
752 |         return JsonResponse({"error": "Limite excedido."}, status=400)
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> documentos\views.py:751:89
    |
750 |     # Limites simples para evitar abusos
751 |     if len(categorias_payload) > 50 or len(tipos_payload) > 50 or len(regras_payload) > 100:
    |                                                                                         ^^^
752 |         return JsonResponse({"error": "Limite excedido."}, status=400)
    |

PLC0415 `import` should be at the top-level of a file
   --> documentos\views.py:989:9
    |
987 |     except Exception as e:
988 |         # Log simples (evitar crash). Em produção substituir por logger.
989 |         import traceback
    |         ^^^^^^^^^^^^^^^^
990 |
991 |         tb = traceback.format_exc(limit=3)
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> estoque\api\serializers\reservas.py:77:13
   |
75 |             saldo = EstoqueSaldo.objects.get(produto=produto, deposito=deposito)
76 |         except EstoqueSaldo.DoesNotExist:
77 |             raise serializers.ValidationError("Produto não possui saldo neste depósito")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
78 |
79 |         # Verificar disponibilidade
   |

PLC0415 `import` should be at the top-level of a file
  --> estoque\api\viewsets.py:76:9
   |
74 |     @action(detail=False, methods=["get"])
75 |     def kpis(self, request):
76 |         from estoque.services.kpis import coletar_kpis
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
77 |
78 |         data = coletar_kpis()
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:175:9
    |
173 |             return Response({"detail": "Sem permissão para operar movimentos"}, status=403)
174 |         data = request.data
175 |         from estoque.services import descartes
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
176 |
177 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:200:9
    |
198 |             return Response({"detail": "Sem permissão para consumo BOM"}, status=403)
199 |         data = request.data
200 |         from estoque.services.bom import consumir_bom
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
201 |
202 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:222:9
    |
220 |             return Response({"detail": "Sem permissão para aprovar movimentos"}, status=403)
221 |         mov = self.get_object()
222 |         from estoque.services.descartes import aprovar_movimento_perda
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
223 |
224 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:235:9
    |
233 |             return Response({"detail": "Sem permissão para rejeitar movimentos"}, status=403)
234 |         mov = self.get_object()
235 |         from estoque.services.descartes import rejeitar_movimento_perda
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
236 |
237 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:337:9
    |
335 |         itens_payload = data.get("itens", [])
336 |         max_urgentes = int(data.get("max_urgentes", 5))
337 |         from estoque.models import Unidade
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
338 |         from produtos.models import Produto
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:338:9
    |
336 |         max_urgentes = int(data.get("max_urgentes", 5))
337 |         from estoque.models import Unidade
338 |         from produtos.models import Produto
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
339 |
340 |         itens = []
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:349:9
    |
347 |                 }
348 |             )
349 |         from shared.exceptions import NegocioError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
350 |
351 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:420:9
    |
418 |         if not arquivo:
419 |             return Response({"detail": "Arquivo obrigatório"}, status=400)
420 |         from estoque.models import PedidoSeparacaoAnexo
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
421 |
422 |         mensagem = get_object_or_404(PedidoSeparacaoMensagem, pk=mensagem_id, pedido=pedido)
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:448:9
    |
446 |         item = self.get_object()
447 |         acao = request.data.get("acao")
448 |         from shared.exceptions import NegocioError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
449 |
450 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:452:17
    |
450 |         try:
451 |             if acao == "separar":
452 |                 from estoque.services import pedidos_separacao as ps_srv
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
453 |
454 |                 ps_srv.marcar_item_separado(item, Decimal(request.data.get("quantidade", "0")))
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets.py:456:17
    |
454 |                 ps_srv.marcar_item_separado(item, Decimal(request.data.get("quantidade", "0")))
455 |             elif acao == "indisponivel":
456 |                 from estoque.services import pedidos_separacao as ps_srv
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
457 |
458 |                 ps_srv.marcar_item_indisponivel(item, request.data.get("observacao", ""))
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\api\viewsets\reservas.py:217:9
    |
215 |     def resumo(self, request):
216 |         """Resumo das reservas por status"""
217 |         from django.db.models import Count, Q, Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
218 |
219 |         queryset = self.filter_queryset(self.get_queryset())
    |

PLC0415 `import` should be at the top-level of a file
  --> estoque\apps.py:11:9
   |
10 |     def ready(self):
11 |         from . import signals  # noqa: F401 força registro dos handlers
   |         ^^^^^^^^^^^^^^^^^^^^^
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:126:9
    |
124 |     def get_estoque_status(self):
125 |         """Obter status atual do estoque"""
126 |         from django.db.models import Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
127 |
128 |         from estoque.models import EstoqueSaldo, PedidoSeparacao, ReservaEstoque
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:128:9
    |
126 |         from django.db.models import Sum
127 |
128 |         from estoque.models import EstoqueSaldo, PedidoSeparacao, ReservaEstoque
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
129 |
130 |         tenant = getattr(self.user, "tenant", None)
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:152:9
    |
150 |     def get_timestamp(self):
151 |         """Obter timestamp atual"""
152 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
153 |
154 |         return timezone.now().isoformat()
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:259:9
    |
257 |     def user_can_access_pedido(self, pedido_id):
258 |         """Verificar acesso a pedido específico"""
259 |         from estoque.models import PedidoSeparacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
260 |
261 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:272:9
    |
270 |     def get_user_pedidos(self):
271 |         """Obter pedidos do usuário"""
272 |         from django.db.models import Q
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
273 |
274 |         from estoque.models import PedidoSeparacao
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:274:9
    |
272 |         from django.db.models import Q
273 |
274 |         from estoque.models import PedidoSeparacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
275 |
276 |         queryset = PedidoSeparacao.objects.filter(
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:292:9
    |
290 |     def get_picking_state(self):
291 |         """Obter estado do sistema de picking"""
292 |         from django.db.models import Count, Q
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
293 |
294 |         from estoque.models import PedidoSeparacao
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:294:9
    |
292 |         from django.db.models import Count, Q
293 |
294 |         from estoque.models import PedidoSeparacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
295 |
296 |         tenant = getattr(self.user, "tenant", None)
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:320:9
    |
318 |     def count_active_pedidos(self):
319 |         """Contar pedidos ativos do usuário"""
320 |         from estoque.models import PedidoSeparacao
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
321 |
322 |         return PedidoSeparacao.objects.filter(separador=self.user, status="EM_SEPARACAO").count()
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:327:9
    |
325 |     def get_timestamp(self):
326 |         """Obter timestamp atual"""
327 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
328 |
329 |         return timezone.now().isoformat()
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:416:9
    |
414 |     def get_recent_audit_logs(self):
415 |         """Obter logs recentes de auditoria"""
416 |         from estoque.models import LogAuditoriaEstoque
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
417 |
418 |         queryset = LogAuditoriaEstoque.objects.select_related("usuario", "produto", "deposito").order_by("-criado_em")[
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\consumers.py:442:9
    |
440 |     def get_timestamp(self):
441 |         """Obter timestamp atual"""
442 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
443 |
444 |         return timezone.now().isoformat()
    |

E501 Line too long (154 > 120)
  --> estoque\excluir models_novos.py:8:121
   |
 7 | …
 8 | …vo vazio mantido apenas para evitar ImportError temporário. Remover futuramente."""
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 | …
10 | …models`.
   |

E402 Module level import not at top of file
  --> estoque\excluir models_novos.py:17:1
   |
15 | """
16 |
17 | from .models import *  # noqa: F401,F403 reexport mínimo
   | ^^^^^^^^^^^^^^^^^^^^^
18 |
19 | """Stub de compatibilidade para imports legados.
   |

E402 Module level import not at top of file
  --> estoque\excluir models_novos.py:26:1
   |
24 | """
25 |
26 | from .models import *  # noqa: F401,F403
   | ^^^^^^^^^^^^^^^^^^^^^
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:29:20
   |
29 | class EstoqueSaldo(models.Model):
   |                    ^^^^^^
30 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="saldos")
31 |     tenant = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:30:15
   |
29 | class EstoqueSaldo(models.Model):
30 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="saldos")
   |               ^^^^^^
31 |     tenant = models.ForeignKey(
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:30:63
   |
29 | class EstoqueSaldo(models.Model):
30 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="saldos")
   |                                                               ^^^^^^
31 |     tenant = models.ForeignKey(
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:31:14
   |
29 | class EstoqueSaldo(models.Model):
30 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="saldos")
31 |     tenant = models.ForeignKey(
   |              ^^^^^^
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
33 |     )
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:32:34
   |
30 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="saldos")
31 |     tenant = models.ForeignKey(
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
   |                                  ^^^^^^
33 |     )
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:34:16
   |
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
33 |     )
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
   |                ^^^^^^
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
   |

F405 `Deposito` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:34:34
   |
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
33 |     )
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
   |                                  ^^^^^^^^
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:34:54
   |
32 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_saldos", null=True, blank=True
33 |     )
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
   |                                                      ^^^^^^
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:35:18
   |
33 |     )
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
   |                  ^^^^^^
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
37 |     custo_medio = models.DecimalField(max_digits=14, decimal_places=6, default=0)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:36:17
   |
34 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="saldos")
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
   |                 ^^^^^^
37 |     custo_medio = models.DecimalField(max_digits=14, decimal_places=6, default=0)
38 |     atualizado_em = models.DateTimeField(auto_now=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:37:19
   |
35 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4, default=0)
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
37 |     custo_medio = models.DecimalField(max_digits=14, decimal_places=6, default=0)
   |                   ^^^^^^
38 |     atualizado_em = models.DateTimeField(auto_now=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:38:21
   |
36 |     reservado = models.DecimalField(max_digits=14, decimal_places=4, default=0)
37 |     custo_medio = models.DecimalField(max_digits=14, decimal_places=6, default=0)
38 |     atualizado_em = models.DateTimeField(auto_now=True)
   |                     ^^^^^^
39 |
40 |     class Meta:
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:53:24
   |
53 | class MovimentoEstoque(models.Model):
   |                        ^^^^^^
54 |     TIPO_CHOICES = (
55 |         ("ENTRADA", "Entrada"),
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:69:15
   |
67 |         ("DEVOLUCAO_FORNECEDOR", "Devolução Fornecedor"),
68 |     )
69 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT, related_name="movimentos")
   |               ^^^^^^
70 |     tenant = models.ForeignKey(
71 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimentos", null=True, blank=True
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:69:63
   |
67 |         ("DEVOLUCAO_FORNECEDOR", "Devolução Fornecedor"),
68 |     )
69 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT, related_name="movimentos")
   |                                                               ^^^^^^
70 |     tenant = models.ForeignKey(
71 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimentos", null=True, blank=True
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:70:14
   |
68 |     )
69 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT, related_name="movimentos")
70 |     tenant = models.ForeignKey(
   |              ^^^^^^
71 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimentos", null=True, blank=True
72 |     )
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:71:34
   |
69 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT, related_name="movimentos")
70 |     tenant = models.ForeignKey(
71 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimentos", null=True, blank=True
   |                                  ^^^^^^
72 |     )
73 |     deposito_origem = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:73:23
   |
71 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimentos", null=True, blank=True
72 |     )
73 |     deposito_origem = models.ForeignKey(
   |                       ^^^^^^
74 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_saida"
75 |     )
   |

F405 `Deposito` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:74:9
   |
72 |     )
73 |     deposito_origem = models.ForeignKey(
74 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_saida"
   |         ^^^^^^^^
75 |     )
76 |     deposito_destino = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:74:29
   |
72 |     )
73 |     deposito_origem = models.ForeignKey(
74 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_saida"
   |                             ^^^^^^
75 |     )
76 |     deposito_destino = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:76:24
   |
74 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_saida"
75 |     )
76 |     deposito_destino = models.ForeignKey(
   |                        ^^^^^^
77 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_entrada"
78 |     )
   |

F405 `Deposito` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:77:9
   |
75 |     )
76 |     deposito_destino = models.ForeignKey(
77 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_entrada"
   |         ^^^^^^^^
78 |     )
79 |     tipo = models.CharField(max_length=20, choices=TIPO_CHOICES)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:77:29
   |
75 |     )
76 |     deposito_destino = models.ForeignKey(
77 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_entrada"
   |                             ^^^^^^
78 |     )
79 |     tipo = models.CharField(max_length=20, choices=TIPO_CHOICES)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:79:12
   |
77 |         Deposito, on_delete=models.PROTECT, null=True, blank=True, related_name="movimentos_entrada"
78 |     )
79 |     tipo = models.CharField(max_length=20, choices=TIPO_CHOICES)
   |            ^^^^^^
80 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:80:18
   |
78 |     )
79 |     tipo = models.CharField(max_length=20, choices=TIPO_CHOICES)
80 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
   |                  ^^^^^^
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
82 |     usuario_executante = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:81:31
   |
79 |     tipo = models.CharField(max_length=20, choices=TIPO_CHOICES)
80 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
   |                               ^^^^^^
82 |     usuario_executante = models.ForeignKey(
83 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="movimentos_executados"
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:82:26
   |
80 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
82 |     usuario_executante = models.ForeignKey(
   |                          ^^^^^^
83 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="movimentos_executados"
84 |     )
   |

F405 `settings` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:83:9
   |
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
82 |     usuario_executante = models.ForeignKey(
83 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="movimentos_executados"
   |         ^^^^^^^^
84 |     )
85 |     solicitante_tipo = models.CharField(max_length=30, blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:83:45
   |
81 |     custo_unitario_snapshot = models.DecimalField(max_digits=14, decimal_places=6, default=0)
82 |     usuario_executante = models.ForeignKey(
83 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="movimentos_executados"
   |                                             ^^^^^^
84 |     )
85 |     solicitante_tipo = models.CharField(max_length=30, blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:85:24
   |
83 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="movimentos_executados"
84 |     )
85 |     solicitante_tipo = models.CharField(max_length=30, blank=True, null=True)
   |                        ^^^^^^
86 |     solicitante_id = models.CharField(max_length=50, blank=True, null=True)
87 |     solicitante_nome_cache = models.CharField(max_length=150, blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:86:22
   |
84 |     )
85 |     solicitante_tipo = models.CharField(max_length=30, blank=True, null=True)
86 |     solicitante_id = models.CharField(max_length=50, blank=True, null=True)
   |                      ^^^^^^
87 |     solicitante_nome_cache = models.CharField(max_length=150, blank=True, null=True)
88 |     ref_externa = models.CharField(max_length=80, blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:87:30
   |
85 |     solicitante_tipo = models.CharField(max_length=30, blank=True, null=True)
86 |     solicitante_id = models.CharField(max_length=50, blank=True, null=True)
87 |     solicitante_nome_cache = models.CharField(max_length=150, blank=True, null=True)
   |                              ^^^^^^
88 |     ref_externa = models.CharField(max_length=80, blank=True, null=True)
89 |     motivo = models.TextField(blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:88:19
   |
86 |     solicitante_id = models.CharField(max_length=50, blank=True, null=True)
87 |     solicitante_nome_cache = models.CharField(max_length=150, blank=True, null=True)
88 |     ref_externa = models.CharField(max_length=80, blank=True, null=True)
   |                   ^^^^^^
89 |     motivo = models.TextField(blank=True, null=True)
90 |     metadata = models.JSONField(blank=True, null=True)
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:89:14
   |
87 |     solicitante_nome_cache = models.CharField(max_length=150, blank=True, null=True)
88 |     ref_externa = models.CharField(max_length=80, blank=True, null=True)
89 |     motivo = models.TextField(blank=True, null=True)
   |              ^^^^^^
90 |     metadata = models.JSONField(blank=True, null=True)
91 |     reverso_de = models.ForeignKey(
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:90:16
   |
88 |     ref_externa = models.CharField(max_length=80, blank=True, null=True)
89 |     motivo = models.TextField(blank=True, null=True)
90 |     metadata = models.JSONField(blank=True, null=True)
   |                ^^^^^^
91 |     reverso_de = models.ForeignKey(
92 |         "self", on_delete=models.SET_NULL, null=True, blank=True, related_name="movimentos_reversos"
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:91:18
   |
89 |     motivo = models.TextField(blank=True, null=True)
90 |     metadata = models.JSONField(blank=True, null=True)
91 |     reverso_de = models.ForeignKey(
   |                  ^^^^^^
92 |         "self", on_delete=models.SET_NULL, null=True, blank=True, related_name="movimentos_reversos"
93 |     )
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:92:27
   |
90 |     metadata = models.JSONField(blank=True, null=True)
91 |     reverso_de = models.ForeignKey(
92 |         "self", on_delete=models.SET_NULL, null=True, blank=True, related_name="movimentos_reversos"
   |                           ^^^^^^
93 |     )
94 |     aprovacao_status = models.CharField(max_length=15, default="APROVADO")  # PENDENTE, APROVADO, REJEITADO
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:94:24
   |
92 |         "self", on_delete=models.SET_NULL, null=True, blank=True, related_name="movimentos_reversos"
93 |     )
94 |     aprovacao_status = models.CharField(max_length=15, default="APROVADO")  # PENDENTE, APROVADO, REJEITADO
   |                        ^^^^^^
95 |     aplicado = models.BooleanField(
96 |         default=True
   |

F405 `models` may be undefined, or defined from star imports
  --> estoque\excluir models_novos.py:95:16
   |
93 |     )
94 |     aprovacao_status = models.CharField(max_length=15, default="APROVADO")  # PENDENTE, APROVADO, REJEITADO
95 |     aplicado = models.BooleanField(
   |                ^^^^^^
96 |         default=True
97 |     )  # Movimentos que aguardam aprovação ainda não aplicam efeito de estoque
   |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:98:19
    |
 96 |         default=True
 97 |     )  # Movimentos que aguardam aprovação ainda não aplicam efeito de estoque
 98 |     aplicado_em = models.DateTimeField(blank=True, null=True)
    |                   ^^^^^^
 99 |     valor_estimado = models.DecimalField(
100 |         max_digits=18, decimal_places=6, default=0
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:99:22
    |
 97 |     )  # Movimentos que aguardam aprovação ainda não aplicam efeito de estoque
 98 |     aplicado_em = models.DateTimeField(blank=True, null=True)
 99 |     valor_estimado = models.DecimalField(
    |                      ^^^^^^
100 |         max_digits=18, decimal_places=6, default=0
101 |     )  # quantidade * custo_unitario_snapshot para políticas de aprovação
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:102:17
    |
100 |         max_digits=18, decimal_places=6, default=0
101 |     )  # quantidade * custo_unitario_snapshot para políticas de aprovação
102 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
103 |
104 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:108:13
    |
106 |         verbose_name_plural = "Movimentos de Estoque (Novo)"
107 |         indexes = [
108 |             models.Index(fields=["produto", "criado_em"]),
    |             ^^^^^^
109 |             models.Index(fields=["tipo"]),
110 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:109:13
    |
107 |         indexes = [
108 |             models.Index(fields=["produto", "criado_em"]),
109 |             models.Index(fields=["tipo"]),
    |             ^^^^^^
110 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
111 |             models.Index(fields=["aprovacao_status"]),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:110:13
    |
108 |             models.Index(fields=["produto", "criado_em"]),
109 |             models.Index(fields=["tipo"]),
110 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
    |             ^^^^^^
111 |             models.Index(fields=["aprovacao_status"]),
112 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:111:13
    |
109 |             models.Index(fields=["tipo"]),
110 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
111 |             models.Index(fields=["aprovacao_status"]),
    |             ^^^^^^
112 |         ]
113 |         ordering = ["-criado_em"]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:127:26
    |
127 | class MovimentoEvidencia(models.Model):
    |                          ^^^^^^
128 |     """Evidências (arquivos) anexadas a movimentos de PERDA/DESCARTE/VENCIMENTO para compliance."""
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:130:17
    |
128 |     """Evidências (arquivos) anexadas a movimentos de PERDA/DESCARTE/VENCIMENTO para compliance."""
129 |
130 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="evidencias")
    |                 ^^^^^^
131 |     tenant = models.ForeignKey(
132 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimento_evidencias", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:130:63
    |
128 |     """Evidências (arquivos) anexadas a movimentos de PERDA/DESCARTE/VENCIMENTO para compliance."""
129 |
130 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="evidencias")
    |                                                               ^^^^^^
131 |     tenant = models.ForeignKey(
132 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimento_evidencias", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:131:14
    |
130 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="evidencias")
131 |     tenant = models.ForeignKey(
    |              ^^^^^^
132 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimento_evidencias", null=True, blank=True
133 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:132:34
    |
130 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="evidencias")
131 |     tenant = models.ForeignKey(
132 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimento_evidencias", null=True, blank=True
    |                                  ^^^^^^
133 |     )
134 |     arquivo = models.FileField(upload_to="estoque/movimentos/evidencias/")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:134:15
    |
132 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_movimento_evidencias", null=True, blank=True
133 |     )
134 |     arquivo = models.FileField(upload_to="estoque/movimentos/evidencias/")
    |               ^^^^^^
135 |     descricao = models.CharField(max_length=255, blank=True, null=True)
136 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:135:17
    |
133 |     )
134 |     arquivo = models.FileField(upload_to="estoque/movimentos/evidencias/")
135 |     descricao = models.CharField(max_length=255, blank=True, null=True)
    |                 ^^^^^^
136 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:136:17
    |
134 |     arquivo = models.FileField(upload_to="estoque/movimentos/evidencias/")
135 |     descricao = models.CharField(max_length=255, blank=True, null=True)
136 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
137 |
138 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:145:22
    |
145 | class ReservaEstoque(models.Model):
    |                      ^^^^^^
146 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="reservas")
147 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:146:15
    |
145 | class ReservaEstoque(models.Model):
146 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="reservas")
    |               ^^^^^^
147 |     tenant = models.ForeignKey(
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:146:63
    |
145 | class ReservaEstoque(models.Model):
146 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="reservas")
    |                                                               ^^^^^^
147 |     tenant = models.ForeignKey(
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:147:14
    |
145 | class ReservaEstoque(models.Model):
146 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="reservas")
147 |     tenant = models.ForeignKey(
    |              ^^^^^^
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
149 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:148:34
    |
146 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="reservas")
147 |     tenant = models.ForeignKey(
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
    |                                  ^^^^^^
149 |     )
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:150:16
    |
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
149 |     )
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
    |                ^^^^^^
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:150:34
    |
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
149 |     )
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
    |                                  ^^^^^^^^
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:150:54
    |
148 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_reservas", null=True, blank=True
149 |     )
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
    |                                                      ^^^^^^
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:151:18
    |
149 |     )
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
    |                  ^^^^^^
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
153 |     origem_id = models.CharField(max_length=60, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:152:19
    |
150 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="reservas")
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
    |                   ^^^^^^
153 |     origem_id = models.CharField(max_length=60, blank=True, null=True)
154 |     status = models.CharField(max_length=15, default="ATIVA")  # ATIVA, CONSUMIDA, CANCELADA, EXPIRADA
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:153:17
    |
151 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
153 |     origem_id = models.CharField(max_length=60, blank=True, null=True)
    |                 ^^^^^^
154 |     status = models.CharField(max_length=15, default="ATIVA")  # ATIVA, CONSUMIDA, CANCELADA, EXPIRADA
155 |     expira_em = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:154:14
    |
152 |     origem_tipo = models.CharField(max_length=30)  # PEDIDO, ORDEM, MANUAL
153 |     origem_id = models.CharField(max_length=60, blank=True, null=True)
154 |     status = models.CharField(max_length=15, default="ATIVA")  # ATIVA, CONSUMIDA, CANCELADA, EXPIRADA
    |              ^^^^^^
155 |     expira_em = models.DateTimeField(blank=True, null=True)
156 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:155:17
    |
153 |     origem_id = models.CharField(max_length=60, blank=True, null=True)
154 |     status = models.CharField(max_length=15, default="ATIVA")  # ATIVA, CONSUMIDA, CANCELADA, EXPIRADA
155 |     expira_em = models.DateTimeField(blank=True, null=True)
    |                 ^^^^^^
156 |     criado_em = models.DateTimeField(auto_now_add=True)
157 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:156:17
    |
154 |     status = models.CharField(max_length=15, default="ATIVA")  # ATIVA, CONSUMIDA, CANCELADA, EXPIRADA
155 |     expira_em = models.DateTimeField(blank=True, null=True)
156 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
157 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:157:21
    |
155 |     expira_em = models.DateTimeField(blank=True, null=True)
156 |     criado_em = models.DateTimeField(auto_now_add=True)
157 |     atualizado_em = models.DateTimeField(auto_now=True)
    |                     ^^^^^^
158 |
159 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:161:13
    |
159 |     class Meta:
160 |         indexes = [
161 |             models.Index(fields=["produto", "deposito"]),
    |             ^^^^^^
162 |             models.Index(fields=["status"]),
163 |             models.Index(fields=["expira_em"]),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:162:13
    |
160 |         indexes = [
161 |             models.Index(fields=["produto", "deposito"]),
162 |             models.Index(fields=["status"]),
    |             ^^^^^^
163 |             models.Index(fields=["expira_em"]),
164 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:163:13
    |
161 |             models.Index(fields=["produto", "deposito"]),
162 |             models.Index(fields=["status"]),
163 |             models.Index(fields=["expira_em"]),
    |             ^^^^^^
164 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:170:25
    |
170 | class InventarioCiclico(models.Model):
    |                         ^^^^^^
171 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="inventarios_ciclicos")
172 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:171:15
    |
170 | class InventarioCiclico(models.Model):
171 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |               ^^^^^^
172 |     tenant = models.ForeignKey(
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:171:63
    |
170 | class InventarioCiclico(models.Model):
171 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |                                                               ^^^^^^
172 |     tenant = models.ForeignKey(
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:172:14
    |
170 | class InventarioCiclico(models.Model):
171 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="inventarios_ciclicos")
172 |     tenant = models.ForeignKey(
    |              ^^^^^^
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
174 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:173:34
    |
171 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="inventarios_ciclicos")
172 |     tenant = models.ForeignKey(
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
    |                                  ^^^^^^
174 |     )
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:175:16
    |
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
174 |     )
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |                ^^^^^^
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:175:34
    |
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
174 |     )
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |                                  ^^^^^^^^
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:175:54
    |
173 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_inventarios_ciclicos", null=True, blank=True
174 |     )
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
    |                                                      ^^^^^^
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:176:26
    |
174 |     )
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
    |                          ^^^^^^
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
178 |     proxima_contagem = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:177:23
    |
175 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="inventarios_ciclicos")
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
    |                       ^^^^^^
178 |     proxima_contagem = models.DateTimeField(blank=True, null=True)
179 |     ativo = models.BooleanField(default=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:178:24
    |
176 |     periodicidade_dias = models.PositiveIntegerField(default=30)
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
178 |     proxima_contagem = models.DateTimeField(blank=True, null=True)
    |                        ^^^^^^
179 |     ativo = models.BooleanField(default=True)
180 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:179:13
    |
177 |     ultima_contagem = models.DateTimeField(blank=True, null=True)
178 |     proxima_contagem = models.DateTimeField(blank=True, null=True)
179 |     ativo = models.BooleanField(default=True)
    |             ^^^^^^
180 |     criado_em = models.DateTimeField(auto_now_add=True)
181 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:180:17
    |
178 |     proxima_contagem = models.DateTimeField(blank=True, null=True)
179 |     ativo = models.BooleanField(default=True)
180 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
181 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:181:21
    |
179 |     ativo = models.BooleanField(default=True)
180 |     criado_em = models.DateTimeField(auto_now_add=True)
181 |     atualizado_em = models.DateTimeField(auto_now=True)
    |                     ^^^^^^
182 |
183 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:186:13
    |
184 |         unique_together = ("produto", "deposito")
185 |         indexes = [
186 |             models.Index(fields=["proxima_contagem"]),
    |             ^^^^^^
187 |             models.Index(fields=["ativo"]),
188 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:187:13
    |
185 |         indexes = [
186 |             models.Index(fields=["proxima_contagem"]),
187 |             models.Index(fields=["ativo"]),
    |             ^^^^^^
188 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:194:28
    |
194 | class RegraReabastecimento(models.Model):
    |                            ^^^^^^
195 |     ESTRATEGIA_CHOICES = (
196 |         ("FIXO", "Fixo"),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:199:15
    |
197 |         ("MEDIA_CONSUMO", "Média Consumo"),
198 |     )
199 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |               ^^^^^^
200 |     tenant = models.ForeignKey(
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:199:63
    |
197 |         ("MEDIA_CONSUMO", "Média Consumo"),
198 |     )
199 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |                                                               ^^^^^^
200 |     tenant = models.ForeignKey(
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:200:14
    |
198 |     )
199 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="regras_reabastecimento")
200 |     tenant = models.ForeignKey(
    |              ^^^^^^
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
202 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:201:34
    |
199 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="regras_reabastecimento")
200 |     tenant = models.ForeignKey(
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
    |                                  ^^^^^^
202 |     )
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:203:16
    |
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
202 |     )
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |                ^^^^^^
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:203:34
    |
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
202 |     )
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |                                  ^^^^^^^^
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:203:54
    |
201 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_regras_reabastecimento", null=True, blank=True
202 |     )
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
    |                                                      ^^^^^^
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:204:19
    |
202 |     )
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
    |                   ^^^^^^
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
206 |     lote_economico = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:205:19
    |
203 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="regras_reabastecimento")
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |                   ^^^^^^
206 |     lote_economico = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
207 |     lead_time_dias = models.PositiveIntegerField(default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:206:22
    |
204 |     estoque_min = models.DecimalField(max_digits=14, decimal_places=4)
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
206 |     lote_economico = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
    |                      ^^^^^^
207 |     lead_time_dias = models.PositiveIntegerField(default=0)
208 |     estrategia = models.CharField(max_length=20, choices=ESTRATEGIA_CHOICES, default="FIXO")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:207:22
    |
205 |     estoque_max = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
206 |     lote_economico = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
207 |     lead_time_dias = models.PositiveIntegerField(default=0)
    |                      ^^^^^^
208 |     estrategia = models.CharField(max_length=20, choices=ESTRATEGIA_CHOICES, default="FIXO")
209 |     ativo = models.BooleanField(default=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:208:18
    |
206 |     lote_economico = models.DecimalField(max_digits=14, decimal_places=4, blank=True, null=True)
207 |     lead_time_dias = models.PositiveIntegerField(default=0)
208 |     estrategia = models.CharField(max_length=20, choices=ESTRATEGIA_CHOICES, default="FIXO")
    |                  ^^^^^^
209 |     ativo = models.BooleanField(default=True)
210 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:209:13
    |
207 |     lead_time_dias = models.PositiveIntegerField(default=0)
208 |     estrategia = models.CharField(max_length=20, choices=ESTRATEGIA_CHOICES, default="FIXO")
209 |     ativo = models.BooleanField(default=True)
    |             ^^^^^^
210 |     criado_em = models.DateTimeField(auto_now_add=True)
211 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:210:17
    |
208 |     estrategia = models.CharField(max_length=20, choices=ESTRATEGIA_CHOICES, default="FIXO")
209 |     ativo = models.BooleanField(default=True)
210 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
211 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:211:21
    |
209 |     ativo = models.BooleanField(default=True)
210 |     criado_em = models.DateTimeField(auto_now_add=True)
211 |     atualizado_em = models.DateTimeField(auto_now=True)
    |                     ^^^^^^
212 |
213 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:216:13
    |
214 |         unique_together = ("produto", "deposito")
215 |         indexes = [
216 |             models.Index(fields=["ativo"]),
    |             ^^^^^^
217 |             models.Index(fields=["produto", "deposito"]),
218 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:217:13
    |
215 |         indexes = [
216 |             models.Index(fields=["ativo"]),
217 |             models.Index(fields=["produto", "deposito"]),
    |             ^^^^^^
218 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:224:12
    |
224 | class Lote(models.Model):
    |            ^^^^^^
225 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="lotes")
226 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:225:15
    |
224 | class Lote(models.Model):
225 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="lotes")
    |               ^^^^^^
226 |     tenant = models.ForeignKey(
227 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_lotes", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:225:63
    |
224 | class Lote(models.Model):
225 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="lotes")
    |                                                               ^^^^^^
226 |     tenant = models.ForeignKey(
227 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_lotes", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:226:14
    |
224 | class Lote(models.Model):
225 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="lotes")
226 |     tenant = models.ForeignKey(
    |              ^^^^^^
227 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_lotes", null=True, blank=True
228 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:227:34
    |
225 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="lotes")
226 |     tenant = models.ForeignKey(
227 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_lotes", null=True, blank=True
    |                                  ^^^^^^
228 |     )
229 |     codigo = models.CharField(max_length=40)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:229:14
    |
227 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_lotes", null=True, blank=True
228 |     )
229 |     codigo = models.CharField(max_length=40)
    |              ^^^^^^
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
231 |     validade = models.DateField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:230:16
    |
228 |     )
229 |     codigo = models.CharField(max_length=40)
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
    |                ^^^^^^
231 |     validade = models.DateField(blank=True, null=True)
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:230:34
    |
228 |     )
229 |     codigo = models.CharField(max_length=40)
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
    |                                  ^^^^^^^^
231 |     validade = models.DateField(blank=True, null=True)
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:230:54
    |
228 |     )
229 |     codigo = models.CharField(max_length=40)
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
    |                                                      ^^^^^^
231 |     validade = models.DateField(blank=True, null=True)
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:231:16
    |
229 |     codigo = models.CharField(max_length=40)
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
231 |     validade = models.DateField(blank=True, null=True)
    |                ^^^^^^
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
233 |     quantidade_reservada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:232:24
    |
230 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="lotes", null=True, blank=True)
231 |     validade = models.DateField(blank=True, null=True)
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |                        ^^^^^^
233 |     quantidade_reservada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
234 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:233:28
    |
231 |     validade = models.DateField(blank=True, null=True)
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
233 |     quantidade_reservada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |                            ^^^^^^
234 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:234:17
    |
232 |     quantidade_atual = models.DecimalField(max_digits=14, decimal_places=4, default=0)
233 |     quantidade_reservada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
234 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
235 |
236 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:239:13
    |
237 |         unique_together = ("produto", "codigo")  # deposito opcional para permitir lote global se None
238 |         indexes = [
239 |             models.Index(fields=["codigo"]),
    |             ^^^^^^
240 |             models.Index(fields=["validade"]),
241 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:240:13
    |
238 |         indexes = [
239 |             models.Index(fields=["codigo"]),
240 |             models.Index(fields=["validade"]),
    |             ^^^^^^
241 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:247:19
    |
247 | class NumeroSerie(models.Model):
    |                   ^^^^^^
248 |     STATUS_CHOICES = (
249 |         ("ATIVO", "Ativo"),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:253:15
    |
251 |         ("BAIXADO", "Baixado"),
252 |     )
253 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="numeros_serie")
    |               ^^^^^^
254 |     tenant = models.ForeignKey(
255 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_numeros_serie", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:253:63
    |
251 |         ("BAIXADO", "Baixado"),
252 |     )
253 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="numeros_serie")
    |                                                               ^^^^^^
254 |     tenant = models.ForeignKey(
255 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_numeros_serie", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:254:14
    |
252 |     )
253 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="numeros_serie")
254 |     tenant = models.ForeignKey(
    |              ^^^^^^
255 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_numeros_serie", null=True, blank=True
256 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:255:34
    |
253 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="numeros_serie")
254 |     tenant = models.ForeignKey(
255 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_numeros_serie", null=True, blank=True
    |                                  ^^^^^^
256 |     )
257 |     codigo = models.CharField(max_length=80, unique=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:257:14
    |
255 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_numeros_serie", null=True, blank=True
256 |     )
257 |     codigo = models.CharField(max_length=80, unique=True)
    |              ^^^^^^
258 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ATIVO")
259 |     deposito_atual = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:258:14
    |
256 |     )
257 |     codigo = models.CharField(max_length=80, unique=True)
258 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ATIVO")
    |              ^^^^^^
259 |     deposito_atual = models.ForeignKey(
260 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="numeros_serie"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:259:22
    |
257 |     codigo = models.CharField(max_length=80, unique=True)
258 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ATIVO")
259 |     deposito_atual = models.ForeignKey(
    |                      ^^^^^^
260 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="numeros_serie"
261 |     )
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:260:9
    |
258 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ATIVO")
259 |     deposito_atual = models.ForeignKey(
260 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="numeros_serie"
    |         ^^^^^^^^
261 |     )
262 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:260:29
    |
258 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ATIVO")
259 |     deposito_atual = models.ForeignKey(
260 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="numeros_serie"
    |                             ^^^^^^
261 |     )
262 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:262:17
    |
260 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="numeros_serie"
261 |     )
262 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
263 |
264 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:266:13
    |
264 |     class Meta:
265 |         indexes = [
266 |             models.Index(fields=["status"]),
    |             ^^^^^^
267 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:273:21
    |
273 | class MovimentoLote(models.Model):
    |                     ^^^^^^
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:274:17
    |
273 | class MovimentoLote(models.Model):
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
    |                 ^^^^^^
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:274:63
    |
273 | class MovimentoLote(models.Model):
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
    |                                                               ^^^^^^
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:275:12
    |
273 | class MovimentoLote(models.Model):
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
    |            ^^^^^^
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
277 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:275:46
    |
273 | class MovimentoLote(models.Model):
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
    |                                              ^^^^^^
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
277 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:276:18
    |
274 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="lotes_movimentados")
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
    |                  ^^^^^^
277 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:277:17
    |
275 |     lote = models.ForeignKey(Lote, on_delete=models.PROTECT, related_name="movimentos")
276 |     quantidade = models.DecimalField(max_digits=14, decimal_places=4)
277 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
278 |
279 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:281:13
    |
279 |     class Meta:
280 |         indexes = [
281 |             models.Index(fields=["lote"]),
    |             ^^^^^^
282 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:288:28
    |
288 | class MovimentoNumeroSerie(models.Model):
    |                            ^^^^^^
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:289:17
    |
288 | class MovimentoNumeroSerie(models.Model):
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
    |                 ^^^^^^
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
291 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:289:63
    |
288 | class MovimentoNumeroSerie(models.Model):
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
    |                                                               ^^^^^^
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
291 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:290:20
    |
288 | class MovimentoNumeroSerie(models.Model):
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
    |                    ^^^^^^
291 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:290:61
    |
288 | class MovimentoNumeroSerie(models.Model):
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
    |                                                             ^^^^^^
291 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:291:17
    |
289 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="numeros_serie_movimentados")
290 |     numero_serie = models.ForeignKey(NumeroSerie, on_delete=models.PROTECT, related_name="movimentos")
291 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
292 |
293 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:295:13
    |
293 |     class Meta:
294 |         indexes = [
295 |             models.Index(fields=["numero_serie"]),
    |             ^^^^^^
296 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:302:27
    |
302 | class LogAuditoriaEstoque(models.Model):
    |                           ^^^^^^
303 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="logs")
304 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:303:17
    |
302 | class LogAuditoriaEstoque(models.Model):
303 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="logs")
    |                 ^^^^^^
304 |     tenant = models.ForeignKey(
305 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_logs_auditoria", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:303:63
    |
302 | class LogAuditoriaEstoque(models.Model):
303 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="logs")
    |                                                               ^^^^^^
304 |     tenant = models.ForeignKey(
305 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_logs_auditoria", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:304:14
    |
302 | class LogAuditoriaEstoque(models.Model):
303 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="logs")
304 |     tenant = models.ForeignKey(
    |              ^^^^^^
305 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_logs_auditoria", null=True, blank=True
306 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:305:34
    |
303 |     movimento = models.ForeignKey(MovimentoEstoque, on_delete=models.CASCADE, related_name="logs")
304 |     tenant = models.ForeignKey(
305 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_logs_auditoria", null=True, blank=True
    |                                  ^^^^^^
306 |     )
307 |     snapshot_antes = models.JSONField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:307:22
    |
305 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_logs_auditoria", null=True, blank=True
306 |     )
307 |     snapshot_antes = models.JSONField(blank=True, null=True)
    |                      ^^^^^^
308 |     snapshot_depois = models.JSONField(blank=True, null=True)
309 |     hash_previo = models.CharField(max_length=128, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:308:23
    |
306 |     )
307 |     snapshot_antes = models.JSONField(blank=True, null=True)
308 |     snapshot_depois = models.JSONField(blank=True, null=True)
    |                       ^^^^^^
309 |     hash_previo = models.CharField(max_length=128, blank=True, null=True)
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:309:19
    |
307 |     snapshot_antes = models.JSONField(blank=True, null=True)
308 |     snapshot_depois = models.JSONField(blank=True, null=True)
309 |     hash_previo = models.CharField(max_length=128, blank=True, null=True)
    |                   ^^^^^^
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
311 |     usuario = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:310:18
    |
308 |     snapshot_depois = models.JSONField(blank=True, null=True)
309 |     hash_previo = models.CharField(max_length=128, blank=True, null=True)
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
    |                  ^^^^^^
311 |     usuario = models.ForeignKey(
312 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="logs_estoque"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:311:15
    |
309 |     hash_previo = models.CharField(max_length=128, blank=True, null=True)
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
311 |     usuario = models.ForeignKey(
    |               ^^^^^^
312 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="logs_estoque"
313 |     )
    |

F405 `settings` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:312:9
    |
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
311 |     usuario = models.ForeignKey(
312 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="logs_estoque"
    |         ^^^^^^^^
313 |     )
314 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:312:45
    |
310 |     hash_atual = models.CharField(max_length=128, blank=True, null=True)
311 |     usuario = models.ForeignKey(
312 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="logs_estoque"
    |                                             ^^^^^^
313 |     )
314 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:314:17
    |
312 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="logs_estoque"
313 |     )
314 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
315 |
316 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:323:19
    |
323 | class CamadaCusto(models.Model):
    |                   ^^^^^^
324 |     """Camadas FIFO de custo para produtos com tipo_custo = PEPS."""
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:326:15
    |
324 |     """Camadas FIFO de custo para produtos com tipo_custo = PEPS."""
325 |
326 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="camadas_custo")
    |               ^^^^^^
327 |     tenant = models.ForeignKey(
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:326:63
    |
324 |     """Camadas FIFO de custo para produtos com tipo_custo = PEPS."""
325 |
326 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="camadas_custo")
    |                                                               ^^^^^^
327 |     tenant = models.ForeignKey(
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:327:14
    |
326 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="camadas_custo")
327 |     tenant = models.ForeignKey(
    |              ^^^^^^
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
329 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:328:34
    |
326 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.CASCADE, related_name="camadas_custo")
327 |     tenant = models.ForeignKey(
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
    |                                  ^^^^^^
329 |     )
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:330:16
    |
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
329 |     )
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
    |                ^^^^^^
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:330:34
    |
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
329 |     )
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
    |                                  ^^^^^^^^
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:330:54
    |
328 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_camadas_custo", null=True, blank=True
329 |     )
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
    |                                                      ^^^^^^
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:331:27
    |
329 |     )
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
    |                           ^^^^^^
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
333 |     ordem = models.BigAutoField(primary_key=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:332:22
    |
330 |     deposito = models.ForeignKey(Deposito, on_delete=models.CASCADE, related_name="camadas_custo")
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
    |                      ^^^^^^
333 |     ordem = models.BigAutoField(primary_key=True)
334 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:333:13
    |
331 |     quantidade_restante = models.DecimalField(max_digits=14, decimal_places=4)
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
333 |     ordem = models.BigAutoField(primary_key=True)
    |             ^^^^^^
334 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:334:17
    |
332 |     custo_unitario = models.DecimalField(max_digits=14, decimal_places=6)
333 |     ordem = models.BigAutoField(primary_key=True)
334 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
335 |
336 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:338:13
    |
336 |     class Meta:
337 |         indexes = [
338 |             models.Index(fields=["produto", "deposito"]),
    |             ^^^^^^
339 |         ]
340 |         ordering = ["ordem"]
    |

E501 Line too long (130 > 120)
   --> estoque\excluir models_novos.py:343:121
    |
342 |     def __str__(self):
343 |         return f"Camada(prod={self.produto_id} dep={self.deposito_id} qtd={self.quantidade_restante} custo={self.custo_unitario})"
    |                                                                                                                         ^^^^^^^^^^
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:351:23
    |
351 | class PedidoSeparacao(models.Model):
    |                       ^^^^^^
352 |     PRIORIDADE_CHOICES = (
353 |         ("BAIXA", "Baixa"),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:366:14
    |
364 |         ("EXPIRADO", "Expirado"),
365 |     )
366 |     codigo = models.CharField(max_length=40, unique=True, blank=True, null=True)
    |              ^^^^^^
367 |     tenant = models.ForeignKey(
368 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:367:14
    |
365 |     )
366 |     codigo = models.CharField(max_length=40, unique=True, blank=True, null=True)
367 |     tenant = models.ForeignKey(
    |              ^^^^^^
368 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao", null=True, blank=True
369 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:368:34
    |
366 |     codigo = models.CharField(max_length=40, unique=True, blank=True, null=True)
367 |     tenant = models.ForeignKey(
368 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao", null=True, blank=True
    |                                  ^^^^^^
369 |     )
370 |     solicitante_tipo = models.CharField(max_length=30)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:370:24
    |
368 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao", null=True, blank=True
369 |     )
370 |     solicitante_tipo = models.CharField(max_length=30)
    |                        ^^^^^^
371 |     solicitante_id = models.CharField(max_length=60)
372 |     solicitante_nome_cache = models.CharField(max_length=150)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:371:22
    |
369 |     )
370 |     solicitante_tipo = models.CharField(max_length=30)
371 |     solicitante_id = models.CharField(max_length=60)
    |                      ^^^^^^
372 |     solicitante_nome_cache = models.CharField(max_length=150)
373 |     prioridade = models.CharField(max_length=10, choices=PRIORIDADE_CHOICES, default="NORMAL")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:372:30
    |
370 |     solicitante_tipo = models.CharField(max_length=30)
371 |     solicitante_id = models.CharField(max_length=60)
372 |     solicitante_nome_cache = models.CharField(max_length=150)
    |                              ^^^^^^
373 |     prioridade = models.CharField(max_length=10, choices=PRIORIDADE_CHOICES, default="NORMAL")
374 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ABERTO")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:373:18
    |
371 |     solicitante_id = models.CharField(max_length=60)
372 |     solicitante_nome_cache = models.CharField(max_length=150)
373 |     prioridade = models.CharField(max_length=10, choices=PRIORIDADE_CHOICES, default="NORMAL")
    |                  ^^^^^^
374 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ABERTO")
375 |     data_limite = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:374:14
    |
372 |     solicitante_nome_cache = models.CharField(max_length=150)
373 |     prioridade = models.CharField(max_length=10, choices=PRIORIDADE_CHOICES, default="NORMAL")
374 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ABERTO")
    |              ^^^^^^
375 |     data_limite = models.DateTimeField(blank=True, null=True)
376 |     criado_por_user = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:375:19
    |
373 |     prioridade = models.CharField(max_length=10, choices=PRIORIDADE_CHOICES, default="NORMAL")
374 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ABERTO")
375 |     data_limite = models.DateTimeField(blank=True, null=True)
    |                   ^^^^^^
376 |     criado_por_user = models.ForeignKey(
377 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="pedidos_criados"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:376:23
    |
374 |     status = models.CharField(max_length=15, choices=STATUS_CHOICES, default="ABERTO")
375 |     data_limite = models.DateTimeField(blank=True, null=True)
376 |     criado_por_user = models.ForeignKey(
    |                       ^^^^^^
377 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="pedidos_criados"
378 |     )
    |

F405 `settings` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:377:9
    |
375 |     data_limite = models.DateTimeField(blank=True, null=True)
376 |     criado_por_user = models.ForeignKey(
377 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="pedidos_criados"
    |         ^^^^^^^^
378 |     )
379 |     operador_responsavel = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:377:45
    |
375 |     data_limite = models.DateTimeField(blank=True, null=True)
376 |     criado_por_user = models.ForeignKey(
377 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="pedidos_criados"
    |                                             ^^^^^^
378 |     )
379 |     operador_responsavel = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:379:28
    |
377 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name="pedidos_criados"
378 |     )
379 |     operador_responsavel = models.ForeignKey(
    |                            ^^^^^^
380 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True, related_name="pedidos_assumidos"
381 |     )
    |

F405 `settings` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:380:9
    |
378 |     )
379 |     operador_responsavel = models.ForeignKey(
380 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True, related_name="pedidos_assumidos"
    |         ^^^^^^^^
381 |     )
382 |     itens_totais = models.PositiveIntegerField(default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:380:45
    |
378 |     )
379 |     operador_responsavel = models.ForeignKey(
380 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True, related_name="pedidos_assumidos"
    |                                             ^^^^^^
381 |     )
382 |     itens_totais = models.PositiveIntegerField(default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:382:20
    |
380 |         settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True, related_name="pedidos_assumidos"
381 |     )
382 |     itens_totais = models.PositiveIntegerField(default=0)
    |                    ^^^^^^
383 |     itens_pendentes = models.PositiveIntegerField(default=0)
384 |     itens_separados = models.PositiveIntegerField(default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:383:23
    |
381 |     )
382 |     itens_totais = models.PositiveIntegerField(default=0)
383 |     itens_pendentes = models.PositiveIntegerField(default=0)
    |                       ^^^^^^
384 |     itens_separados = models.PositiveIntegerField(default=0)
385 |     permitir_retirada_parcial = models.BooleanField(default=False)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:384:23
    |
382 |     itens_totais = models.PositiveIntegerField(default=0)
383 |     itens_pendentes = models.PositiveIntegerField(default=0)
384 |     itens_separados = models.PositiveIntegerField(default=0)
    |                       ^^^^^^
385 |     permitir_retirada_parcial = models.BooleanField(default=False)
386 |     canal_origem = models.CharField(max_length=20, default="PORTAL")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:385:33
    |
383 |     itens_pendentes = models.PositiveIntegerField(default=0)
384 |     itens_separados = models.PositiveIntegerField(default=0)
385 |     permitir_retirada_parcial = models.BooleanField(default=False)
    |                                 ^^^^^^
386 |     canal_origem = models.CharField(max_length=20, default="PORTAL")
387 |     motivo_cancelamento = models.TextField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:386:20
    |
384 |     itens_separados = models.PositiveIntegerField(default=0)
385 |     permitir_retirada_parcial = models.BooleanField(default=False)
386 |     canal_origem = models.CharField(max_length=20, default="PORTAL")
    |                    ^^^^^^
387 |     motivo_cancelamento = models.TextField(blank=True, null=True)
388 |     metadata = models.JSONField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:387:27
    |
385 |     permitir_retirada_parcial = models.BooleanField(default=False)
386 |     canal_origem = models.CharField(max_length=20, default="PORTAL")
387 |     motivo_cancelamento = models.TextField(blank=True, null=True)
    |                           ^^^^^^
388 |     metadata = models.JSONField(blank=True, null=True)
389 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:388:16
    |
386 |     canal_origem = models.CharField(max_length=20, default="PORTAL")
387 |     motivo_cancelamento = models.TextField(blank=True, null=True)
388 |     metadata = models.JSONField(blank=True, null=True)
    |                ^^^^^^
389 |     criado_em = models.DateTimeField(auto_now_add=True)
390 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:389:17
    |
387 |     motivo_cancelamento = models.TextField(blank=True, null=True)
388 |     metadata = models.JSONField(blank=True, null=True)
389 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
390 |     atualizado_em = models.DateTimeField(auto_now=True)
391 |     inicio_preparo = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:390:21
    |
388 |     metadata = models.JSONField(blank=True, null=True)
389 |     criado_em = models.DateTimeField(auto_now_add=True)
390 |     atualizado_em = models.DateTimeField(auto_now=True)
    |                     ^^^^^^
391 |     inicio_preparo = models.DateTimeField(blank=True, null=True)
392 |     pronto_em = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:391:22
    |
389 |     criado_em = models.DateTimeField(auto_now_add=True)
390 |     atualizado_em = models.DateTimeField(auto_now=True)
391 |     inicio_preparo = models.DateTimeField(blank=True, null=True)
    |                      ^^^^^^
392 |     pronto_em = models.DateTimeField(blank=True, null=True)
393 |     retirado_em = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:392:17
    |
390 |     atualizado_em = models.DateTimeField(auto_now=True)
391 |     inicio_preparo = models.DateTimeField(blank=True, null=True)
392 |     pronto_em = models.DateTimeField(blank=True, null=True)
    |                 ^^^^^^
393 |     retirado_em = models.DateTimeField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:393:19
    |
391 |     inicio_preparo = models.DateTimeField(blank=True, null=True)
392 |     pronto_em = models.DateTimeField(blank=True, null=True)
393 |     retirado_em = models.DateTimeField(blank=True, null=True)
    |                   ^^^^^^
394 |
395 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:397:13
    |
395 |     class Meta:
396 |         indexes = [
397 |             models.Index(fields=["status", "prioridade"]),
    |             ^^^^^^
398 |             models.Index(fields=["data_limite"]),
399 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:398:13
    |
396 |         indexes = [
397 |             models.Index(fields=["status", "prioridade"]),
398 |             models.Index(fields=["data_limite"]),
    |             ^^^^^^
399 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
400 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:399:13
    |
397 |             models.Index(fields=["status", "prioridade"]),
398 |             models.Index(fields=["data_limite"]),
399 |             models.Index(fields=["solicitante_tipo", "solicitante_id"]),
    |             ^^^^^^
400 |         ]
401 |         ordering = ["-criado_em"]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:407:27
    |
407 | class PedidoSeparacaoItem(models.Model):
    |                           ^^^^^^
408 |     STATUS_CHOICES = (
409 |         ("PENDENTE", "Pendente"),
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:415:14
    |
413 |         ("CANCELADO", "Cancelado"),
414 |     )
415 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="itens")
    |              ^^^^^^
416 |     tenant = models.ForeignKey(
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:415:59
    |
413 |         ("CANCELADO", "Cancelado"),
414 |     )
415 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="itens")
    |                                                           ^^^^^^
416 |     tenant = models.ForeignKey(
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:416:14
    |
414 |     )
415 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="itens")
416 |     tenant = models.ForeignKey(
    |              ^^^^^^
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
418 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:417:34
    |
415 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="itens")
416 |     tenant = models.ForeignKey(
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
    |                                  ^^^^^^
418 |     )
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:419:15
    |
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
418 |     )
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
    |               ^^^^^^
420 |     deposito = models.ForeignKey(
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:419:63
    |
417 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_itens", null=True, blank=True
418 |     )
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
    |                                                               ^^^^^^
420 |     deposito = models.ForeignKey(
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:420:16
    |
418 |     )
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
420 |     deposito = models.ForeignKey(
    |                ^^^^^^
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
422 |     )
    |

F405 `Deposito` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:421:9
    |
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
420 |     deposito = models.ForeignKey(
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |         ^^^^^^^^
422 |     )
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:421:29
    |
419 |     produto = models.ForeignKey("produtos.Produto", on_delete=models.PROTECT)
420 |     deposito = models.ForeignKey(
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |                             ^^^^^^
422 |     )
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:423:29
    |
421 |         Deposito, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
422 |     )
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
    |                             ^^^^^^
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:424:27
    |
422 |     )
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
    |                           ^^^^^^
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:425:15
    |
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
    |               ^^^^^^
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
427 |     reserva = models.ForeignKey(
    |

F405 `Unidade` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:425:33
    |
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
    |                                 ^^^^^^^
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
427 |     reserva = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:425:52
    |
423 |     quantidade_solicitada = models.DecimalField(max_digits=14, decimal_places=4)
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
    |                                                    ^^^^^^
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
427 |     reserva = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:426:18
    |
424 |     quantidade_separada = models.DecimalField(max_digits=14, decimal_places=4, default=0)
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
    |                  ^^^^^^
427 |     reserva = models.ForeignKey(
428 |         ReservaEstoque, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:427:15
    |
425 |     unidade = models.ForeignKey(Unidade, on_delete=models.SET_NULL, null=True, blank=True)
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
427 |     reserva = models.ForeignKey(
    |               ^^^^^^
428 |         ReservaEstoque, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
429 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:428:35
    |
426 |     observacao = models.CharField(max_length=255, blank=True, null=True)
427 |     reserva = models.ForeignKey(
428 |         ReservaEstoque, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
    |                                   ^^^^^^
429 |     )
430 |     status_item = models.CharField(max_length=15, choices=STATUS_CHOICES, default="PENDENTE")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:430:19
    |
428 |         ReservaEstoque, on_delete=models.SET_NULL, null=True, blank=True, related_name="itens_picking"
429 |     )
430 |     status_item = models.CharField(max_length=15, choices=STATUS_CHOICES, default="PENDENTE")
    |                   ^^^^^^
431 |     atualizado_em = models.DateTimeField(auto_now=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:431:21
    |
429 |     )
430 |     status_item = models.CharField(max_length=15, choices=STATUS_CHOICES, default="PENDENTE")
431 |     atualizado_em = models.DateTimeField(auto_now=True)
    |                     ^^^^^^
432 |
433 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:435:13
    |
433 |     class Meta:
434 |         indexes = [
435 |             models.Index(fields=["status_item"]),
    |             ^^^^^^
436 |         ]
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:442:31
    |
442 | class PedidoSeparacaoMensagem(models.Model):
    |                               ^^^^^^
443 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="mensagens")
444 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:443:14
    |
442 | class PedidoSeparacaoMensagem(models.Model):
443 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="mensagens")
    |              ^^^^^^
444 |     tenant = models.ForeignKey(
445 |         "core.Tenant",
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:443:59
    |
442 | class PedidoSeparacaoMensagem(models.Model):
443 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="mensagens")
    |                                                           ^^^^^^
444 |     tenant = models.ForeignKey(
445 |         "core.Tenant",
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:444:14
    |
442 | class PedidoSeparacaoMensagem(models.Model):
443 |     pedido = models.ForeignKey(PedidoSeparacao, on_delete=models.CASCADE, related_name="mensagens")
444 |     tenant = models.ForeignKey(
    |              ^^^^^^
445 |         "core.Tenant",
446 |         on_delete=models.CASCADE,
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:446:19
    |
444 |     tenant = models.ForeignKey(
445 |         "core.Tenant",
446 |         on_delete=models.CASCADE,
    |                   ^^^^^^
447 |         related_name="estoque_pedidos_separacao_mensagens",
448 |         null=True,
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:451:18
    |
449 |         blank=True,
450 |     )
451 |     autor_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True)
    |                  ^^^^^^
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
    |

F405 `settings` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:451:36
    |
449 |         blank=True,
450 |     )
451 |     autor_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True)
    |                                    ^^^^^^^^
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:451:72
    |
449 |         blank=True,
450 |     )
451 |     autor_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True)
    |                                                                        ^^^^^^
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:452:18
    |
450 |     )
451 |     autor_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True)
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
    |                  ^^^^^^
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
454 |     texto = models.TextField()
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:453:16
    |
451 |     autor_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True)
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
    |                ^^^^^^
454 |     texto = models.TextField()
455 |     importante = models.BooleanField(default=False)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:454:13
    |
452 |     autor_tipo = models.CharField(max_length=30, blank=True, null=True)
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
454 |     texto = models.TextField()
    |             ^^^^^^
455 |     importante = models.BooleanField(default=False)
456 |     anexos_count = models.PositiveIntegerField(default=0)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:455:18
    |
453 |     autor_id = models.CharField(max_length=60, blank=True, null=True)
454 |     texto = models.TextField()
455 |     importante = models.BooleanField(default=False)
    |                  ^^^^^^
456 |     anexos_count = models.PositiveIntegerField(default=0)
457 |     metadata = models.JSONField(blank=True, null=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:456:20
    |
454 |     texto = models.TextField()
455 |     importante = models.BooleanField(default=False)
456 |     anexos_count = models.PositiveIntegerField(default=0)
    |                    ^^^^^^
457 |     metadata = models.JSONField(blank=True, null=True)
458 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:457:16
    |
455 |     importante = models.BooleanField(default=False)
456 |     anexos_count = models.PositiveIntegerField(default=0)
457 |     metadata = models.JSONField(blank=True, null=True)
    |                ^^^^^^
458 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:458:17
    |
456 |     anexos_count = models.PositiveIntegerField(default=0)
457 |     metadata = models.JSONField(blank=True, null=True)
458 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
459 |
460 |     class Meta:
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:467:28
    |
467 | class PedidoSeparacaoAnexo(models.Model):
    |                            ^^^^^^
468 |     mensagem = models.ForeignKey(PedidoSeparacaoMensagem, on_delete=models.CASCADE, related_name="anexos")
469 |     tenant = models.ForeignKey(
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:468:16
    |
467 | class PedidoSeparacaoAnexo(models.Model):
468 |     mensagem = models.ForeignKey(PedidoSeparacaoMensagem, on_delete=models.CASCADE, related_name="anexos")
    |                ^^^^^^
469 |     tenant = models.ForeignKey(
470 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_anexos", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:468:69
    |
467 | class PedidoSeparacaoAnexo(models.Model):
468 |     mensagem = models.ForeignKey(PedidoSeparacaoMensagem, on_delete=models.CASCADE, related_name="anexos")
    |                                                                     ^^^^^^
469 |     tenant = models.ForeignKey(
470 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_anexos", null=True, blank=True
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:469:14
    |
467 | class PedidoSeparacaoAnexo(models.Model):
468 |     mensagem = models.ForeignKey(PedidoSeparacaoMensagem, on_delete=models.CASCADE, related_name="anexos")
469 |     tenant = models.ForeignKey(
    |              ^^^^^^
470 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_anexos", null=True, blank=True
471 |     )
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:470:34
    |
468 |     mensagem = models.ForeignKey(PedidoSeparacaoMensagem, on_delete=models.CASCADE, related_name="anexos")
469 |     tenant = models.ForeignKey(
470 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_anexos", null=True, blank=True
    |                                  ^^^^^^
471 |     )
472 |     arquivo = models.FileField(upload_to="pedidos_separacao/anexos/")
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:472:15
    |
470 |         "core.Tenant", on_delete=models.CASCADE, related_name="estoque_pedidos_separacao_anexos", null=True, blank=True
471 |     )
472 |     arquivo = models.FileField(upload_to="pedidos_separacao/anexos/")
    |               ^^^^^^
473 |     nome_original = models.CharField(max_length=255)
474 |     tamanho_bytes = models.BigIntegerField()
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:473:21
    |
471 |     )
472 |     arquivo = models.FileField(upload_to="pedidos_separacao/anexos/")
473 |     nome_original = models.CharField(max_length=255)
    |                     ^^^^^^
474 |     tamanho_bytes = models.BigIntegerField()
475 |     tipo_mime = models.CharField(max_length=120)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:474:21
    |
472 |     arquivo = models.FileField(upload_to="pedidos_separacao/anexos/")
473 |     nome_original = models.CharField(max_length=255)
474 |     tamanho_bytes = models.BigIntegerField()
    |                     ^^^^^^
475 |     tipo_mime = models.CharField(max_length=120)
476 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:475:17
    |
473 |     nome_original = models.CharField(max_length=255)
474 |     tamanho_bytes = models.BigIntegerField()
475 |     tipo_mime = models.CharField(max_length=120)
    |                 ^^^^^^
476 |     criado_em = models.DateTimeField(auto_now_add=True)
    |

F405 `models` may be undefined, or defined from star imports
   --> estoque\excluir models_novos.py:476:17
    |
474 |     tamanho_bytes = models.BigIntegerField()
475 |     tipo_mime = models.CharField(max_length=120)
476 |     criado_em = models.DateTimeField(auto_now_add=True)
    |                 ^^^^^^
477 |
478 |     def __str__(self):
    |

PLC0415 `import` should be at the top-level of a file
  --> estoque\management\commands\finalizar_setup_estoque.py:40:21
   |
38 |                 self.stdout.write("-> Criando permissões customizadas...")
39 |                 try:
40 |                     from estoque.permissions import criar_permissoes_estoque
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
41 |
42 |                     criar_permissoes_estoque()
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> estoque\management\commands\finalizar_setup_estoque.py:44:21
   |
42 |                     criar_permissoes_estoque()
43 |                 except Exception as e:  # pragma: no cover - proteção extra
44 |                     raise CommandError(f"Falha ao criar permissões: {e}")
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
45 |
46 |             if not no_seed:
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> estoque\management\commands\finalizar_setup_estoque.py:58:13
   |
56 |             raise
57 |         except Exception as e:  # pragma: no cover
58 |             raise CommandError(str(e))
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
59 |
60 |     @transaction.atomic
   |

PLC0415 `import` should be at the top-level of a file
  --> estoque\management\commands\finalizar_setup_estoque.py:62:9
   |
60 |     @transaction.atomic
61 |     def _seed_basico(self):
62 |         from estoque.models import Deposito, TipoMovimento
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
63 |
64 |         tipos_movimento = [
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\models.py:205:9
    |
204 |     def agregar_quantidade(self, adicional):
205 |         from decimal import Decimal
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
206 |
207 |         adicional = Decimal(str(adicional))
    |

E501 Line too long (130 > 120)
   --> estoque\models.py:393:121
    |
392 |     def __str__(self):
393 |         return f"Camada(prod={self.produto_id} dep={self.deposito_id} qtd={self.quantidade_restante} custo={self.custo_unitario})"
    |                                                                                                                         ^^^^^^^^^^
    |

PLR0913 Too many arguments in function definition (6 > 5)
  --> estoque\services\ajustes.py:15:5
   |
14 | @transaction.atomic
15 | def ajuste_positivo(produto, deposito: Deposito, quantidade: Decimal, usuario, motivo=None, metadata=None):
   |     ^^^^^^^^^^^^^^^
16 |     if quantidade <= 0:
17 |         raise NegocioError("Quantidade deve ser positiva.")
   |

PLR0913 Too many arguments in function definition (6 > 5)
  --> estoque\services\ajustes.py:34:5
   |
33 | @transaction.atomic
34 | def ajuste_negativo(produto, deposito: Deposito, quantidade: Decimal, usuario, motivo=None, metadata=None):
   |     ^^^^^^^^^^^^^^^
35 |     if quantidade <= 0:
36 |         raise NegocioError("Quantidade deve ser positiva.")
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\auditoria.py:217:9
    |
215 |         """
216 |
217 |         from django.db.models import Count, Q, Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
218 |
219 |         # Consultar movimentos no período
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> estoque\services\auditoria.py:244:62
    |
242 |                     "total_movimentos": item["total"],
243 |                     "valor_total": float(item["valor_total"] or 0),
244 |                     "criticidade": "ALTA" if item["total"] > 10 else "MEDIA",
    |                                                              ^^
245 |                 }
246 |             )
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\auditoria.py:291:9
    |
289 |         Rastreia histórico completo de um produto
290 |         """
291 |         from datetime import timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
292 |
293 |         data_limite = datetime.now() - timedelta(days=dias)
    |

PLR0913 Too many arguments in function definition (7 > 5)
  --> estoque\services\bom.py:24:5
   |
23 | @transaction.atomic
24 | def consumir_bom(
   |     ^^^^^^^^^^^^
25 |     produto_final,
26 |     deposito: Deposito,
   |

PLC0415 `import` should be at the top-level of a file
  --> estoque\services\bom.py:38:5
   |
36 |     if not componentes:
37 |         raise NegocioError("Produto final não possui BOM definida.")
38 |     from estoque.services.valuation import consumir_fifo_e_atualizar, is_fifo
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
39 |
40 |     movimentos = []
   |

PLR0913 Too many arguments in function definition (12 > 5)
  --> estoque\services\descartes.py:19:5
   |
18 | @transaction.atomic
19 | def registrar_descarte(
   |     ^^^^^^^^^^^^^^^^^^
20 |     produto,
21 |     deposito: Deposito,
   |

PLR0912 Too many branches (19 > 12)
  --> estoque\services\descartes.py:19:5
   |
18 | @transaction.atomic
19 | def registrar_descarte(
   |     ^^^^^^^^^^^^^^^^^^
20 |     produto,
21 |     deposito: Deposito,
   |

PLR0915 Too many statements (56 > 50)
  --> estoque\services\descartes.py:19:5
   |
18 | @transaction.atomic
19 | def registrar_descarte(
   |     ^^^^^^^^^^^^^^^^^^
20 |     produto,
21 |     deposito: Deposito,
   |

PLR2004 Magic value used in comparison, consider replacing `15` with a constant variable
  --> estoque\services\descartes.py:39:58
   |
37 |     if quantidade <= 0:
38 |         raise NegocioError("Quantidade deve ser positiva.")
39 |     if not justificativa or len(justificativa.strip()) < 15:
   |                                                          ^^
40 |         raise NegocioError("Justificativa mínima de 15 caracteres para descarte/perda.")
41 |     if tipo not in ["DESCARTE", "PERDA", "VENCIMENTO"]:
   |

SIM102 Use a single `if` statement instead of nested `if` statements
  --> estoque\services\descartes.py:71:5
   |
69 |       valor_perda = saldo.custo_medio * quantidade
70 |       exige_aprovacao = threshold_aprovacao_valor is not None and valor_perda > threshold_aprovacao_valor
71 | /     if valor_perda_minimo_evidencia and valor_perda >= valor_perda_minimo_evidencia:
72 | |         # exigir evidencias (IDs fornecidos) – checagem simples
73 | |         if not evidencias_ids or len(evidencias_ids) == 0:
   | |__________________________________________________________^
74 |               raise NegocioError("Evidência obrigatória para perdas acima do limite configurado.")
75 |       snapshot_antes = {
   |
help: Combine `if` statements using `and`

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\descartes.py:106:13
    |
104 |             MovimentoLote.objects.create(movimento=mov, lote=lote, quantidade=qtd)
105 |         try:
106 |             from estoque.services.reabastecimento import avaliar_regras_para_saldo
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
107 |
108 |             avaliar_regras_para_saldo(saldo)
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\descartes.py:133:5
    |
131 |     movimento.aprovacao_status = "APROVADO"
132 |     movimento.aplicado = True
133 |     from django.utils import timezone
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |
135 |     movimento.aplicado_em = timezone.now()
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\descartes.py:141:9
    |
139 |     movimento.save(update_fields=["aprovacao_status", "aplicado", "aplicado_em", "metadata"])
140 |     try:
141 |         from estoque.services.reabastecimento import avaliar_regras_para_saldo
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
142 |
143 |         avaliar_regras_para_saldo(saldo)
    |

PLR0915 Too many statements (51 > 50)
  --> estoque\services\kpis.py:10:5
   |
10 | def kpis_completas(periodo_dias: int = 30, slow_threshold_dias: int = 90, top_n: int = 10):
   |     ^^^^^^^^^^^^^^
11 |     """Calcula KPIs abrangentes de estoque.
   |

PLR2004 Magic value used in comparison, consider replacing `30` with a constant variable
   --> estoque\services\kpis.py:159:20
    |
157 |     for e in entradas:
158 |         diff = (now - e["last"]).days
159 |         if diff <= 30:
    |                    ^^
160 |             faixas["0_30"] += 1
161 |         elif diff <= 60:
    |

PLR2004 Magic value used in comparison, consider replacing `60` with a constant variable
   --> estoque\services\kpis.py:161:22
    |
159 |         if diff <= 30:
160 |             faixas["0_30"] += 1
161 |         elif diff <= 60:
    |                      ^^
162 |             faixas["31_60"] += 1
163 |         elif diff <= 90:
    |

PLR2004 Magic value used in comparison, consider replacing `90` with a constant variable
   --> estoque\services\kpis.py:163:22
    |
161 |         elif diff <= 60:
162 |             faixas["31_60"] += 1
163 |         elif diff <= 90:
    |                      ^^
164 |             faixas["61_90"] += 1
165 |         else:
    |

PLR0913 Too many arguments in function definition (6 > 5)
  --> estoque\services\movimentos.py:30:5
   |
29 | @transaction.atomic
30 | def registrar_entrada(
   |     ^^^^^^^^^^^^^^^^^
31 |     produto, deposito: Deposito, quantidade: Decimal, custo_unitario: Decimal, usuario, tenant=None, **kwargs
32 | ):
   |

PLR0912 Too many branches (22 > 12)
  --> estoque\services\movimentos.py:30:5
   |
29 | @transaction.atomic
30 | def registrar_entrada(
   |     ^^^^^^^^^^^^^^^^^
31 |     produto, deposito: Deposito, quantidade: Decimal, custo_unitario: Decimal, usuario, tenant=None, **kwargs
32 | ):
   |

PLR0915 Too many statements (69 > 50)
  --> estoque\services\movimentos.py:30:5
   |
29 | @transaction.atomic
30 | def registrar_entrada(
   |     ^^^^^^^^^^^^^^^^^
31 |     produto, deposito: Deposito, quantidade: Decimal, custo_unitario: Decimal, usuario, tenant=None, **kwargs
32 | ):
   |

E501 Line too long (132 > 120)
  --> estoque\services\movimentos.py:37:121
   |
35 |     # Permissão necessária
36 |     if usuario and not getattr(usuario, "is_superuser", False):
37 |         # Permissão obrigatória apenas se flag global exigir ou se usuário possuir alguma perm de estoque (indicando regime estrito)
   |                                                                                                                         ^^^^^^^^^^^^
38 |         try:
39 |             exige_perm = getattr(settings, "ESTOQUE_EXIGE_PERMISSAO_OPERAR", False)
   |

PLC0415 `import` should be at the top-level of a file
  --> estoque\services\movimentos.py:53:5
   |
51 |     }
52 |     # Valuation: FIFO cria camadas, média pondera
53 |     from estoque.services.valuation import is_fifo, registrar_entrada_fifo_e_atualizar
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
54 |
55 |     if is_fifo(produto):
   |

PLR0913 Too many arguments in function definition (6 > 5)
   --> estoque\services\movimentos.py:151:5
    |
150 | @transaction.atomic
151 | def registrar_saida(
    |     ^^^^^^^^^^^^^^^
152 |     produto, deposito: Deposito, quantidade: Decimal, usuario, custo_unitario=None, tenant=None, **kwargs
153 | ):
    |

PLR0912 Too many branches (26 > 12)
   --> estoque\services\movimentos.py:151:5
    |
150 | @transaction.atomic
151 | def registrar_saida(
    |     ^^^^^^^^^^^^^^^
152 |     produto, deposito: Deposito, quantidade: Decimal, usuario, custo_unitario=None, tenant=None, **kwargs
153 | ):
    |

PLR0915 Too many statements (72 > 50)
   --> estoque\services\movimentos.py:151:5
    |
150 | @transaction.atomic
151 | def registrar_saida(
    |     ^^^^^^^^^^^^^^^
152 |     produto, deposito: Deposito, quantidade: Decimal, usuario, custo_unitario=None, tenant=None, **kwargs
153 | ):
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\movimentos.py:176:9
    |
174 |     custo_saida = custo_unitario
175 |     if not custo_saida:
176 |         from estoque.services.valuation import consumir_fifo_e_atualizar, is_fifo
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
177 |
178 |         if is_fifo(produto):
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\movimentos.py:252:9
    |
250 |             MovimentoNumeroSerie.objects.create(movimento=mov, numero_serie=ns)
251 |     try:
252 |         from estoque.services.reabastecimento import avaliar_regras_para_saldo
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
253 |
254 |         avaliar_regras_para_saldo(saldo)
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> estoque\services\movimentos.py:261:5
    |
260 | @transaction.atomic
261 | def transferir(
    |     ^^^^^^^^^^
262 |     produto, deposito_origem: Deposito, deposito_destino: Deposito, quantidade: Decimal, usuario, tenant=None, **kwargs
263 | ):
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\movimentos.py:310:9
    |
308 |     invalidar_kpis(tenant)
309 |     try:
310 |         from estoque.services.reabastecimento import avaliar_regras_para_saldo
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
311 |
312 |         avaliar_regras_para_saldo(saldo_origem)
    |

PLR0913 Too many arguments in function definition (10 > 5)
  --> estoque\services\pedidos_separacao.py:23:5
   |
22 | @transaction.atomic
23 | def criar_pedido(
   |     ^^^^^^^^^^^^
24 |     solicitante_tipo: str,
25 |     solicitante_id: str,
   |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> estoque\services\pedidos_separacao.py:125:44
    |
123 |     if item.pedido.status not in ["EM_PREPARACAO"]:
124 |         raise NegocioError("Pedido não está em preparação.")
125 |     if not observacao or len(observacao) < 10:
    |                                            ^^
126 |         raise NegocioError("Observação mínima de 10 caracteres para indisponível.")
127 |     item.status_item = "INDISPONIVEL"
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> estoque\services\pedidos_separacao.py:168:5
    |
167 | @transaction.atomic
168 | def adicionar_mensagem(
    |     ^^^^^^^^^^^^^^^^^^
169 |     pedido: PedidoSeparacao, texto: str, autor_user=None, autor_tipo=None, autor_id=None, importante=False
170 | ):
    |

PLR0913 Too many arguments in function definition (7 > 5)
  --> estoque\services\picking.py:31:9
   |
29 |     @classmethod
30 |     @transaction.atomic
31 |     def criar_pedido_separacao(
   |         ^^^^^^^^^^^^^^^^^^^^^^
32 |         cls,
33 |         itens_produtos,
   |

PLC0415 `import` should be at the top-level of a file
  --> estoque\services\picking.py:63:17
   |
61 |             # Criar reservas para todos os itens
62 |             for item in itens_produtos:
63 |                 from estoque.services.reservas import ReservaService
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
64 |
65 |                 reserva = ReservaService.criar_reserva(
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:127:21
    |
125 |             for reserva in reservas_criadas:
126 |                 try:
127 |                     from estoque.services.reservas import ReservaService
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
128 |
129 |                     ReservaService.cancelar_reserva(reserva.id, usuario_solicitante, "Erro na criação do pedido")
    |

E722 Do not use bare `except`
   --> estoque\services\picking.py:130:17
    |
129 |                     ReservaService.cancelar_reserva(reserva.id, usuario_solicitante, "Erro na criação do pedido")
130 |                 except Exception:
    |                 ^^^^^^
131 |                     pass
132 |             raise e
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:246:25
    |
244 |                     diferenca = item["quantidade_conferida"] - reserva.quantidade
245 |                     if diferenca != 0:
246 |                         from estoque.services.reservas import ReservaService
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
247 |
248 |                         if diferenca > 0:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:331:9
    |
330 |         movimentos_gerados = []
331 |         from estoque.services.reservas import ReservaService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
332 |
333 |         for reserva in reservas:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:389:9
    |
387 |         reservas = ReservaEstoque.objects.filter(origem_tipo="PICKING", origem_id=str(pedido.id), status="ATIVA")
388 |
389 |         from estoque.services.reservas import ReservaService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
390 |
391 |         for reserva in reservas:
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:440:9
    |
438 |     def estatisticas_picking(cls, tenant=None, dias=30):
439 |         """Estatísticas do sistema de picking"""
440 |         from datetime import timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
441 |
442 |         data_limite = timezone.now() - timedelta(days=dias)
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\picking.py:502:9
    |
500 |     def _calcular_produtividade_separadores(cls, queryset):
501 |         """Calcula produtividade por separador"""
502 |         from django.db.models import Count
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
503 |
504 |         return (
    |

PLR0913 Too many arguments in function definition (9 > 5)
  --> estoque\services\reservas.py:26:9
   |
24 |     @classmethod
25 |     @transaction.atomic
26 |     def criar_reserva(
   |         ^^^^^^^^^^^^^
27 |         cls,
28 |         produto_id,
   |

E402 Module level import not at top of file
   --> estoque\services\reservas.py:268:1
    |
266 | # - Não gerar logs detalhados se modelo de log não aceitar os kwargs usados pela API moderna
267 | # ============================================================================
268 | from decimal import Decimal as _D
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
269 |
270 | from django.utils import timezone as _tz
    |

E402 Module level import not at top of file
   --> estoque\services\reservas.py:270:1
    |
268 | from decimal import Decimal as _D
269 |
270 | from django.utils import timezone as _tz
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

PLR0913 Too many arguments in function definition (8 > 5)
   --> estoque\services\reservas.py:273:5
    |
273 | def criar_reserva(
    |     ^^^^^^^^^^^^^
274 |     produto, deposito, quantidade, origem_tipo, origem_id=None, tenant=None, usuario=None, motivo="Reserva de estoque"
275 | ):
    |

PLR1704 Redefining argument with the local name `reserva`
   --> estoque\services\reservas.py:343:13
    |
341 |         erros = []
342 |
343 |         for reserva in reservas_vencidas:
    |             ^^^^^^^
344 |             try:
345 |                 cls.expirar_reserva(reserva.id)
    |

PLR0912 Too many branches (16 > 12)
  --> estoque\services\reversao.py:10:5
   |
 9 | @transaction.atomic
10 | def reverter_movimento(mov: MovimentoEstoque, usuario):
   |     ^^^^^^^^^^^^^^^^^^
11 |     if mov.reverso_de_id is not None:
12 |         raise MovimentoNaoReversivelError("Movimento já é reversão de outro.")
   |

PLR0913 Too many arguments in function definition (6 > 5)
  --> estoque\services\valuation.py:16:5
   |
15 | @transaction.atomic
16 | def registrar_entrada_fifo(
   |     ^^^^^^^^^^^^^^^^^^^^^^
17 |     produto, deposito: Deposito, quantidade: Decimal, custo_unitario: Decimal, tenant=None, merge=True
18 | ):
   |

PLR0913 Too many arguments in function definition (10 > 5)
  --> estoque\services\workflow.py:42:9
   |
40 |     @classmethod
41 |     @transaction.atomic
42 |     def criar_solicitacao_aprovacao(
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
43 |         cls,
44 |         produto_id,
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> estoque\services\workflow.py:72:17
   |
70 |                     raise ValidationError(f"Saldo insuficiente. Disponível: {saldo.disponivel}")
71 |             except EstoqueSaldo.DoesNotExist:
72 |                 raise ValidationError("Produto não possui saldo neste depósito")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
73 |
74 |         # Criar movimento pendente de aprovação
   |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\workflow.py:238:9
    |
236 |         Estatísticas de aprovações
237 |         """
238 |         from datetime import timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
239 |
240 |         from django.db.models import Count, Q, Sum
    |

PLC0415 `import` should be at the top-level of a file
   --> estoque\services\workflow.py:240:9
    |
238 |         from datetime import timedelta
239 |
240 |         from django.db.models import Count, Q, Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
241 |
242 |         data_limite = timezone.now() - timedelta(days=dias)
    |

PLC0415 `import` should be at the top-level of a file
  --> estoque\views.py:52:13
   |
50 |     if tenant:
51 |         try:
52 |             from django.utils import timezone
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
53 |
54 |             stats.update(
   |

PLC0415 `import` should be at the top-level of a file
  --> financeiro\views.py:58:5
   |
57 |     # Variáveis para templates ultra-modernos
58 |     from datetime import datetime, timedelta
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
59 |
60 |     thirty_days_ago = datetime.now() - timedelta(days=30)
   |

E501 Line too long (163 > 120)
  --> formularios\models.py:31:121
   |
30 | …
31 | … self.get_tipo_display(), mas tipo já é string. Se tipo for chave, use get_tipo_display.
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 | …
33 | …
   |

F821 Undefined name `messages`
  --> formularios\views.py:23:9
   |
22 |     if not tenant:
23 |         messages.error(request, _("Por favor, selecione uma empresa para ver o dashboard."))
   |         ^^^^^^^^
24 |         return redirect(reverse("core:tenant_select"))
   |

F821 Undefined name `redirect`
  --> formularios\views.py:24:16
   |
22 |     if not tenant:
23 |         messages.error(request, _("Por favor, selecione uma empresa para ver o dashboard."))
24 |         return redirect(reverse("core:tenant_select"))
   |                ^^^^^^^^
25 |
26 |     context = {
   |

F821 Undefined name `reverse`
  --> formularios\views.py:24:25
   |
22 |     if not tenant:
23 |         messages.error(request, _("Por favor, selecione uma empresa para ver o dashboard."))
24 |         return redirect(reverse("core:tenant_select"))
   |                         ^^^^^^^
25 |
26 |     context = {
   |

F821 Undefined name `render`
  --> formularios\views.py:32:12
   |
30 |     }
31 |
32 |     return render(request, template_name, context)
   |            ^^^^^^
   |

PLR2004 Magic value used in comparison, consider replacing `1024` with a constant variable
   --> formularios_dinamicos\admin.py:115:26
    |
114 |     def tamanho_formatado(self, obj):
115 |         if obj.tamanho < 1024:
    |                          ^^^^
116 |             return f"{obj.tamanho} bytes"
117 |         elif obj.tamanho < 1024 * 1024:
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> formularios_dinamicos\forms.py:58:21
   |
56 |                     forms.EmailField().clean(email)
57 |                 except ValidationError:
58 |                     raise ValidationError(f"E-mail inválido: {email}")
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
59 |         return emails
   |

PLR0912 Too many branches (35 > 12)
   --> formularios_dinamicos\forms.py:162:9
    |
160 |             self.fields[campo.nome] = field
161 |
162 |     def _criar_campo_django(self, campo):
    |         ^^^^^^^^^^^^^^^^^^^
163 |         """Cria um campo Django baseado na configuração do CampoFormulario"""
    |

PLR0915 Too many statements (97 > 50)
   --> formularios_dinamicos\forms.py:162:9
    |
160 |             self.fields[campo.nome] = field
161 |
162 |     def _criar_campo_django(self, campo):
    |         ^^^^^^^^^^^^^^^^^^^
163 |         """Cria um campo Django baseado na configuração do CampoFormulario"""
    |

PLC0415 `import` should be at the top-level of a file
   --> formularios_dinamicos\forms.py:307:13
    |
305 |         # Aplicar validação regex se definida
306 |         if campo.regex_validacao:
307 |             from django.core.validators import RegexValidator
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
308 |
309 |             field.validators.append(
    |

E501 Line too long (124 > 120)
   --> formularios_dinamicos\models.py:376:121
    |
375 |     def __str__(self):
376 |         return f"{self.campo_origem.label} {self.operador} {self.valor_comparacao} → {self.acao} {self.campo_destino.label}"
    |                                                                                                                         ^^^^
    |

F811 Redefinition of unused `template_list` from line 531
   --> formularios_dinamicos\views.py:574:5
    |
573 | @login_required
574 | def template_list(request):
    |     ^^^^^^^^^^^^^ `template_list` redefined here
575 |     """Lista de modelos de formulário"""
576 |     templates = TemplateFormulario.objects.all()
    |
   ::: formularios_dinamicos\views.py:531:5
    |
530 | @login_required
531 | def template_list(request):
    |     ------------- previous definition of `template_list` here
532 |     """Lista de templates de formulários"""
    |
help: Remove definition: `template_list`

F811 Redefinition of unused `form_from_template` from line 544
   --> formularios_dinamicos\views.py:584:5
    |
583 | @login_required
584 | def form_from_template(request, template_pk):
    |     ^^^^^^^^^^^^^^^^^^ `form_from_template` redefined here
585 |     """Cria um novo formulário a partir de um modelo"""
586 |     template = get_object_or_404(TemplateFormulario, pk=template_pk)
    |
   ::: formularios_dinamicos\views.py:544:5
    |
543 | @login_required
544 | def form_from_template(request, template_pk):
    |     ------------------ previous definition of `form_from_template` here
545 |     """Criar formulário a partir de template"""
    |
help: Remove definition: `form_from_template`

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\forms.py:187:13
    |
185 |             comp = comp.strip()
186 |             # Aceitar MM/AAAA
187 |             import re
    |             ^^^^^^^^^
188 |
189 |             if not re.match(r"^(0[1-9]|1[0-2])\/(19|20)\d{2}$", comp):
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\models.py:126:9
    |
124 |     def ativar_portal(self, usuario=None):
125 |         """Ativa o portal do fornecedor."""
126 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
127 |
128 |         self.portal_ativo = True
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\models.py:148:17
    |
146 |         if ("tenant" not in kwargs or kwargs.get("tenant") is None) and not args:
147 |             try:
148 |                 from core.models import Tenant as _Tenant
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
149 |
150 |                 default_tenant = _Tenant.objects.first()
    |

E501 Line too long (124 > 120)
  --> fornecedores\tables.py:76:121
   |
74 |         template_code="""
75 |         <div class="btn-group">
76 |             <a href="{% url 'fornecedores:fornecedor_detail' record.pk %}" class="btn btn-sm btn-info" title="Ver detalhes">
   |                                                                                                                         ^^^^
77 |                 <i class="fas fa-eye"></i>
78 |             </a>
   |

E501 Line too long (126 > 120)
  --> fornecedores\tables.py:79:121
   |
77 |                 <i class="fas fa-eye"></i>
78 |             </a>
79 |             <a href="{% url 'fornecedores:fornecedor_wizard_edit' record.pk %}" class="btn btn-sm btn-warning" title="Editar">
   |                                                                                                                         ^^^^^^
80 |                 <i class="fas fa-edit"></i>
81 |             </a>
   |

E501 Line too long (132 > 120)
  --> fornecedores\tables.py:82:121
   |
80 |                 <i class="fas fa-edit"></i>
81 |             </a>
82 |             <a href="{% url 'fornecedores:fornecedor_delete' record.pk %}" class="btn btn-sm btn-danger delete-btn" title="Excluir">
   |                                                                                                                         ^^^^^^^^^^^^
83 |                 <i class="fas fa-trash"></i>
84 |             </a>
   |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\views.py:148:5
    |
146 | def fornecedor_create(request):
147 |     """Compat: redireciona criação para o Wizard canônico."""
148 |     from .wizard_views import fornecedor_wizard_create
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
149 |
150 |     return fornecedor_wizard_create(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\views.py:156:5
    |
154 | def fornecedor_edit(request, pk):
155 |     """Compat: redireciona edição para o Wizard canônico de edição."""
156 |     from .wizard_views import fornecedor_wizard_edit
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
157 |
158 |     return fornecedor_wizard_edit(request, pk)
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_forms.py:128:13
    |
126 |         cpf = self.cleaned_data.get("cpf")
127 |         if cpf:
128 |             import re
    |             ^^^^^^^^^
129 |
130 |             cpf_digits = re.sub(r"\D", "", str(cpf))
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> fornecedores\wizard_forms.py:131:35
    |
130 |             cpf_digits = re.sub(r"\D", "", str(cpf))
131 |             if len(cpf_digits) != 11:
    |                                   ^^
132 |                 raise forms.ValidationError(_("CPF inválido."))
133 |         return cpf
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_forms.py:141:13
    |
139 |         cnpj = self.cleaned_data.get("cnpj")
140 |         if cnpj:
141 |             import re
    |             ^^^^^^^^^
142 |
143 |             cnpj_digits = re.sub(r"\D", "", str(cnpj))
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> fornecedores\wizard_forms.py:144:36
    |
143 |             cnpj_digits = re.sub(r"\D", "", str(cnpj))
144 |             if len(cnpj_digits) != 14:
    |                                    ^^
145 |                 raise forms.ValidationError(_("CNPJ inválido."))
146 |         return cnpj
    |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> fornecedores\wizard_views.py:250:32
    |
248 |         for form_key, form_class in form_classes.items():
249 |             # Step 5 (Documentos): quando em edição, usamos o form real de upload/versionamento
250 |             if current_step == 5 and form_key == "main" and editing_entity:
    |                                ^
251 |                 if data_source == "POST":
252 |                     form = FornecedorDocumentoVersaoCreateForm(
    |

PLR0912 Too many branches (18 > 12)
   --> fornecedores\wizard_views.py:300:9
    |
298 |         return render(request, step_config["template"], context)
299 |
300 |     def post(self, request: HttpRequest, *args, **kwargs) -> HttpResponse:
    |         ^^^^
301 |         current_step = self.get_current_step()
302 |         editing_entity = self.get_editing_tenant()
    |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> fornecedores\wizard_views.py:326:36
    |
324 |             if all_valid:
325 |                 # Step 5: se estiver em edição, salvar documento imediatamente (evitar armazenar arquivo na sessão)
326 |                 if current_step == 5 and editing_entity and "main" in forms:
    |                                    ^
327 |                     try:
328 |                         form_doc = forms["main"]
    |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> fornecedores\wizard_views.py:346:32
    |
344 |         else:
345 |             # Step 5: se em edição e form válido com arquivo, salvar imediatamente e NÃO guardar arquivo na sessão
346 |             if current_step == 5 and editing_entity and "main" in forms:
    |                                ^
347 |                 form_doc = forms["main"]
348 |                 if form_doc.is_valid() and form_doc.cleaned_data.get("arquivo"):
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_views.py:384:13
    |
383 |         try:
384 |             from django.db import transaction
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
385 |
386 |             with transaction.atomic():
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_views.py:441:17
    |
439 |                 self.clear_wizard_data()
440 |                 messages.success(self.request, _("Fornecedor salvo com sucesso."))
441 |                 from django.urls import reverse
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
442 |
443 |                 return redirect(reverse("fornecedores:fornecedor_detail", kwargs={"pk": fornecedor.pk}))
    |

PLR0912 Too many branches (32 > 12)
   --> fornecedores\wizard_views.py:449:9
    |
447 |             return redirect(self.success_url)
448 |
449 |     def _process_other_steps(self, fornecedor: Fornecedor, wizard_data: dict[str, Any]):
    |         ^^^^^^^^^^^^^^^^^^^^
450 |         # Endereços (campos conforme TenantAddressWizardForm do CORE)
451 |         step2 = wizard_data.get("step_2", {}).get("main", {})
    |

PLR0915 Too many statements (93 > 50)
   --> fornecedores\wizard_views.py:449:9
    |
447 |             return redirect(self.success_url)
448 |
449 |     def _process_other_steps(self, fornecedor: Fornecedor, wizard_data: dict[str, Any]):
    |         ^^^^^^^^^^^^^^^^^^^^
450 |         # Endereços (campos conforme TenantAddressWizardForm do CORE)
451 |         step2 = wizard_data.get("step_2", {}).get("main", {})
    |

E501 Line too long (145 > 120)
   --> fornecedores\wizard_views.py:550:121
    |
548 | …
549 | …êm cargo específico marcado como funcionários
550 | …dedores, removemos apenas cargos que existam no conjunto atual de funcionários
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
551 | …, adotar política de idempotência simples: apagar todos que NÃO sejam Comercial/Financeiro/Vendedor e recriar a partir do JSON
552 | …ro"]
    |

E501 Line too long (193 > 120)
   --> fornecedores\wizard_views.py:551:121
    |
549 | …ado como funcionários
550 | …s cargos que existam no conjunto atual de funcionários
551 | …mpotência simples: apagar todos que NÃO sejam Comercial/Financeiro/Vendedor e recriar a partir do JSON
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
552 | …
553 | …in=preserved).delete()
    |

PLR0915 Too many statements (53 > 50)
   --> fornecedores\wizard_views.py:647:9
    |
645 |                 pass
646 |
647 |     def get_context_data(self, **kwargs):
    |         ^^^^^^^^^^^^^^^^
648 |         """Contexto do wizard de fornecedores, independente do core wizard."""
649 |         context = super(TenantCreationWizardView, self).get_context_data(**kwargs)
    |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> fornecedores\wizard_views.py:733:28
    |
732 |         # Contexto adicional para o Step 5 (Documentos): listar tipos e histórico quando em edição
733 |         if current_step == 5 and editing_entity:
    |                            ^
734 |             try:
735 |                 tipos_qs = ItemAuxiliar.objects.filter(ativo=True)
    |

PLR0912 Too many branches (20 > 12)
   --> fornecedores\wizard_views.py:761:9
    |
759 |         return context
760 |
761 |     def load_fornecedor_data_to_wizard(self, fornecedor: Fornecedor) -> None:
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
762 |         """Carrega dados existentes do fornecedor na sessão para edição."""
763 |         data = {
    |

PLR0915 Too many statements (67 > 50)
   --> fornecedores\wizard_views.py:761:9
    |
759 |         return context
760 |
761 |     def load_fornecedor_data_to_wizard(self, fornecedor: Fornecedor) -> None:
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
762 |         """Carrega dados existentes do fornecedor na sessão para edição."""
763 |         data = {
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_views.py:862:17
    |
860 |             vendors = fornecedor.contatos.filter(cargo__iexact="Vendedor").values("nome", "email", "telefone")
861 |             if vendors:
862 |                 import json as _json
    |                 ^^^^^^^^^^^^^^^^^^^^
863 |
864 |                 data["step_3"]["main"]["additional_vendors_json"] = _json.dumps(list(vendors), ensure_ascii=False)
    |

E501 Line too long (131 > 120)
   --> fornecedores\wizard_views.py:867:121
    |
865 | …
866 | …
867 | …JSON inicial (todos cargos que não forem Comercial/Financeiro/Vendedor)
    |                                                              ^^^^^^^^^^^
868 | …
869 | …o"]
    |

PLC0415 `import` should be at the top-level of a file
   --> fornecedores\wizard_views.py:872:17
    |
870 |             emps = fornecedor.contatos.exclude(cargo__in=preserved).values("nome", "email", "telefone", "cargo")
871 |             if emps:
872 |                 import json as _json
    |                 ^^^^^^^^^^^^^^^^^^^^
873 |
874 |                 data["step_3"]["main"]["additional_employees_json"] = _json.dumps(list(emps), ensure_ascii=False)
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\api.py:155:9
    |
153 |     def vencidas(self, request):
154 |         """Lista férias vencidas"""
155 |         from dateutil.relativedelta import relativedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
156 |
157 |         data_limite = date.today() - relativedelta(months=12)
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> funcionarios\forms.py:107:28
    |
105 |             # Remove formatação
106 |             cpf = "".join(filter(str.isdigit, cpf))
107 |             if len(cpf) != 11:
    |                            ^^
108 |                 raise ValidationError(_("CPF deve ter 11 dígitos."))
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> funcionarios\forms.py:134:24
    |
132 |                 - ((hoje.month, hoje.day) < (data_nascimento.month, data_nascimento.day))
133 |             )
134 |             if idade < 14:
    |                        ^^
135 |                 raise ValidationError(_("Funcionário deve ter pelo menos 14 anos."))
136 |             if idade > 100:
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> funcionarios\forms.py:136:24
    |
134 |             if idade < 14:
135 |                 raise ValidationError(_("Funcionário deve ter pelo menos 14 anos."))
136 |             if idade > 100:
    |                        ^^^
137 |                 raise ValidationError(_("Data de nascimento inválida."))
138 |         return data_nascimento
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> funcionarios\forms.py:213:40
    |
211 |             raise ValidationError(_("Quando há abono pecuniário, deve ser informado o número de dias."))
212 |
213 |         if dias_abono and dias_abono > 10:
    |                                        ^^
214 |             raise ValidationError(_("Abono pecuniário não pode exceder 10 dias."))
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> funcionarios\forms.py:331:28
    |
329 |         if tipo in ("PROCEDIMENTO_PERCENTUAL", "COMISSAO_PERCENTUAL") and not perc:
330 |             self.add_error("percentual", "Informe o percentual para este tipo de regra.")
331 |         if perc and perc > 100:
    |                            ^^^
332 |             self.add_error("percentual", "Percentual não pode exceder 100%.")
333 |         vi = cleaned.get("vigencia_inicio")
    |

F821 Undefined name `funcionario`
   --> funcionarios\forms.py:339:12
    |
337 |         return cleaned
338 |
339 |         if funcionario:
    |            ^^^^^^^^^^^
340 |             self.fields["funcionario"].initial = funcionario
341 |             self.fields["funcionario"].widget = forms.HiddenInput()
    |

F821 Undefined name `funcionario`
   --> funcionarios\forms.py:340:50
    |
339 |         if funcionario:
340 |             self.fields["funcionario"].initial = funcionario
    |                                                  ^^^^^^^^^^^
341 |             self.fields["funcionario"].widget = forms.HiddenInput()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:164:9
    |
162 |     @property
163 |     def idade(self):
164 |         from datetime import date
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
165 |
166 |         today = date.today()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:175:9
    |
173 |     @property
174 |     def tempo_empresa(self):
175 |         from datetime import date
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
176 |
177 |         today = date.today()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:226:9
    |
225 |     def calcular_horas(self):
226 |         from datetime import date, datetime
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
227 |
228 |         if self.entrada and self.saida:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:342:9
    |
341 |     def clean(self):
342 |         from django.core.exceptions import ValidationError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
343 |
344 |         if self.data_fim <= self.data_inicio:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:480:9
    |
479 |     def clean(self):
480 |         from django.core.exceptions import ValidationError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
481 |
482 |         if self.data_fim < self.data_inicio:
    |

E501 Line too long (135 > 120)
   --> funcionarios\models.py:578:121
    |
577 | …
578 | …f.funcionario.nome_completo} em {self.data_referencia.strftime('%m/%Y')}"
    |                                                            ^^^^^^^^^^^^^^^
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:646:9
    |
644 |     @property
645 |     def idade(self):
646 |         from datetime import date
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
647 |
648 |         today = date.today()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models.py:694:9
    |
692 |     @property
693 |     def horas_trabalhadas(self):
694 |         from datetime import datetime, timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
695 |
696 |         entrada = datetime.combine(datetime.today(), self.hora_entrada)
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models_estoque.py:488:13
    |
486 |         """Verifica se está em atraso para devolução"""
487 |         if self.status == "ATIVO" and self.data_previsao_devolucao:
488 |             from django.utils import timezone
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
489 |
490 |             return timezone.now().date() > self.data_previsao_devolucao
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models_estoque.py:583:13
    |
581 |         """Verifica se está em atraso para devolução"""
582 |         if not self.devolvido:
583 |             from django.utils import timezone
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
584 |
585 |             return timezone.now().date() > self.data_previsao_devolucao
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\models_estoque.py:591:9
    |
589 |     def dias_em_uso(self):
590 |         """Calcula quantos dias a ferramenta está em uso"""
591 |         from django.utils import timezone
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
592 |
593 |         data_fim = self.data_devolucao_real or timezone.now()
    |

E501 Line too long (156 > 120)
   --> funcionarios\reports.py:209:121
    |
207 | …
208 | …
209 | …lace(" ", "_")}_{data_inicio.strftime("%Y%m%d")}_{data_fim.strftime("%Y%m%d")}.pdf"'
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
210 | …
211 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\reports.py:319:9
    |
317 |         """Gera relatório de férias vencidas"""
318 |
319 |         from dateutil.relativedelta import relativedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
320 |
321 |         # Funcionários com férias vencidas (mais de 12 meses do período aquisitivo)
    |

PLC0415 `import` should be at the top-level of a file
  --> funcionarios\serializers.py:90:9
   |
88 |     def validate_cpf(self, value):
89 |         """Valida CPF"""
90 |         from .utils import ValidadorRH
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
91 |
92 |         if value and not ValidadorRH.validar_cpf(value):
   |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\serializers.py:98:9
    |
 96 |     def validate(self, data):
 97 |         """Validações gerais"""
 98 |         from .utils import ValidadorRH
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 99 |
100 |         # Valida idade mínima
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\serializers.py:138:9
    |
136 |     def validate(self, data):
137 |         """Validações de férias"""
138 |         from .utils import ValidadorRH
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
139 |
140 |         if all(k in data for k in ["data_inicio", "data_fim", "periodo_aquisitivo_inicio", "periodo_aquisitivo_fim"]):
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> funcionarios\serializers.py:148:73
    |
147 |         # Valida abono pecuniário
148 |         if data.get("abono_pecuniario") and data.get("dias_abono", 0) > 10:
    |                                                                         ^^
149 |             raise serializers.ValidationError({"dias_abono": "Abono pecuniário não pode exceder 10 dias"})
    |

SIM105 Use `contextlib.suppress(BaseException)` instead of `try`-`except`-`pass`
   --> funcionarios\services\estoque_service.py:212:13
    |
210 |           """Envia notificação para aprovador"""
211 |           if hasattr(aprovador, "user"):
212 | /             try:
213 | |                 Notification.objects.create(
214 | |                     user=aprovador.user,
215 | |                     title=f"Aprovação de Material - {solicitacao.funcionario.nome_completo}",
216 | |                     message=f"Solicitação #{solicitacao.numero} aguardando sua aprovação",
217 | |                     notification_type="material_approval",
218 | |                 )
219 | |             except Exception:
220 | |                 pass  # Se não conseguir enviar notificação, continua
    | |____________________^
221 |
222 |       @staticmethod
    |
help: Replace with `contextlib.suppress(BaseException)`

E722 Do not use bare `except`
   --> funcionarios\services\estoque_service.py:219:13
    |
217 |                     notification_type="material_approval",
218 |                 )
219 |             except Exception:
    |             ^^^^^^
220 |                 pass  # Se não conseguir enviar notificação, continua
    |

E722 Do not use bare `except`
   --> funcionarios\services\estoque_service.py:234:13
    |
232 |                     notification_type="material_status",
233 |                 )
234 |             except Exception:
    |             ^^^^^^
235 |                 pass
    |

PLR2004 Magic value used in comparison, consider replacing `15` with a constant variable
   --> funcionarios\utils.py:312:36
    |
310 |             dias_trabalhados = (data_fim_mes - data_atual).days + 1
311 |
312 |             if dias_trabalhados >= 15:
    |                                    ^^
313 |                 meses += 1
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> funcionarios\utils.py:470:24
    |
468 |         cpf = "".join(filter(str.isdigit, cpf))
469 |
470 |         if len(cpf) != 11 or cpf == cpf[0] * 11:
    |                        ^^
471 |             return False
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> funcionarios\utils.py:476:23
    |
474 |         soma = sum(int(cpf[i]) * (10 - i) for i in range(9))
475 |         digito1 = (soma * 10) % 11
476 |         if digito1 == 10:
    |                       ^^
477 |             digito1 = 0
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> funcionarios\utils.py:482:23
    |
480 |         soma = sum(int(cpf[i]) * (11 - i) for i in range(10))
481 |         digito2 = (soma * 10) % 11
482 |         if digito2 == 10:
    |                       ^^
483 |             digito2 = 0
    |

PLR2004 Magic value used in comparison, consider replacing `30` with a constant variable
   --> funcionarios\utils.py:498:19
    |
497 |         dias = (data_fim - data_inicio).days + 1
498 |         if dias > 30:
    |                   ^^
499 |             erros.append("Período de férias não pode exceder 30 dias")
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> funcionarios\utils.py:515:29
    |
513 |         idade_admissao = (data_admissao - data_nascimento).days // 365
514 |
515 |         if idade_admissao < 14:
    |                             ^^
516 |             erros.append("Idade mínima para trabalho é 14 anos")
517 |         elif idade_admissao < 16:
    |

PLR2004 Magic value used in comparison, consider replacing `16` with a constant variable
   --> funcionarios\utils.py:517:31
    |
515 |         if idade_admissao < 14:
516 |             erros.append("Idade mínima para trabalho é 14 anos")
517 |         elif idade_admissao < 16:
    |                               ^^
518 |             erros.append("Entre 14 e 16 anos só é permitido como aprendiz")
    |

PLC0415 `import` should be at the top-level of a file
  --> funcionarios\views.py:87:9
   |
85 |     materiais_stats = {}
86 |     try:
87 |         from .models_estoque import ResponsabilidadeMaterial, SolicitacaoMaterial
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
88 |         from .services.estoque_service import EstoqueFuncionarioService
   |

PLC0415 `import` should be at the top-level of a file
  --> funcionarios\views.py:88:9
   |
86 |     try:
87 |         from .models_estoque import ResponsabilidadeMaterial, SolicitacaoMaterial
88 |         from .services.estoque_service import EstoqueFuncionarioService
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
89 |
90 |         if tenant:
   |

F401 `.services.estoque_service.EstoqueFuncionarioService` imported but unused; consider using `importlib.util.find_spec` to test for availability
  --> funcionarios\views.py:88:47
   |
86 |     try:
87 |         from .models_estoque import ResponsabilidadeMaterial, SolicitacaoMaterial
88 |         from .services.estoque_service import EstoqueFuncionarioService
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
89 |
90 |         if tenant:
   |
help: Remove unused import: `.services.estoque_service.EstoqueFuncionarioService`

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\views.py:181:9
    |
179 |     def get_context_data(self, **kwargs):
180 |         context = super().get_context_data(**kwargs)
181 |         from core.models import Department
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
182 |
183 |         context["departamentos"] = Department.objects.filter(tenant=self.request.tenant)
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\views.py:196:9
    |
195 |         # Estatísticas recentes (últimos 30 dias)
196 |         from datetime import datetime, timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
197 |
198 |         thirty_days_ago = datetime.now() - timedelta(days=30)
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\views_estoque.py:404:33
    |
402 |                             data_prev_devolucao = None
403 |                             if data_previsao:
404 |                                 from django.utils.dateparse import parse_date
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
405 |
406 |                                 data_prev_devolucao = parse_date(data_previsao)
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
  --> funcionarios\wizard_forms.py:70:27
   |
68 |         cpf = self.cleaned_data.get("cpf") or ""
69 |         digits = "".join(filter(str.isdigit, cpf))
70 |         if len(digits) != 11:
   |                           ^^
71 |             raise ValidationError(_("CPF deve ter 11 dígitos."))
72 |         return cpf
   |

PLC0415 `import` should be at the top-level of a file
  --> funcionarios\wizard_forms.py:75:9
   |
74 |     def clean_dependentes_json(self):
75 |         import json
   |         ^^^^^^^^^^^
76 |
77 |         raw = self.cleaned_data.get("dependentes_json") or ""
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> funcionarios\wizard_forms.py:91:13
   |
89 |             return raw
90 |         except Exception:
91 |             raise ValidationError("JSON de dependentes inválido.")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_forms.py:174:21
    |
172 |                     self.add_error("cnpj_prestador", "Informe o CNPJ do prestador.")
173 |                 else:
174 |                     import re
    |                     ^^^^^^^^^
175 |
176 |                     nums = re.sub(r"\D", "", cnpj)
    |

PLR2004 Magic value used in comparison, consider replacing `14` with a constant variable
   --> funcionarios\wizard_forms.py:177:37
    |
176 |                     nums = re.sub(r"\D", "", cnpj)
177 |                     if len(nums) != 14:
    |                                     ^^
178 |                         self.add_error("cnpj_prestador", "CNPJ deve ter 14 dígitos.")
179 |                     # Opcional: validar DV simples
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:180:9
    |
179 |     def serialize_dependentes(self, funcionario: Funcionario):
180 |         import json
    |         ^^^^^^^^^^^
181 |
182 |         items = []
    |

PLR0911 Too many return statements (7 > 6)
   --> funcionarios\wizard_views.py:208:9
    |
206 |         return render(request, steps[step]["template"], context)
207 |
208 |     def post(self, request: HttpRequest, *args, **kwargs) -> HttpResponse:
    |         ^^^^
209 |         action = (
210 |             request.POST.get("wizard_action") or request.POST.get("wizard_prev") or request.POST.get("wizard_save_step")
    |

PLR0912 Too many branches (19 > 12)
   --> funcionarios\wizard_views.py:323:9
    |
321 |         return reverse("funcionarios:funcionario_wizard_goto_step", kwargs={"step": step})
322 |
323 |     def persist_editing_instance(self, instance: Funcionario):
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
324 |         """Aplica dados da sessão ao objeto existente sem criar novo."""
325 |         wizard_data = self.get_wizard_data()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:357:13
    |
355 |         dependentes_json = payload.get("dependentes_json")
356 |         if dependentes_json is not None:
357 |             import json
    |             ^^^^^^^^^^^
358 |
359 |             from .models import Dependente
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:359:13
    |
357 |             import json
358 |
359 |             from .models import Dependente
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
360 |
361 |             try:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:389:17
    |
387 |                         continue
388 |                 # Converter datas
389 |                 from datetime import date, datetime
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
390 |
391 |                 for o in dep_objs:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:402:9
    |
401 |     def serialize_horarios(self, funcionario: Funcionario):
402 |         import json
    |         ^^^^^^^^^^^
403 |
404 |         items = []
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:421:9
    |
420 |     def apply_horarios_from_json(self, funcionario: Funcionario, horarios_json: str):
421 |         import json
    |         ^^^^^^^^^^^
422 |
423 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:447:13
    |
445 |         if objs:
446 |             # Necessário converter strings HH:MM para time objects
447 |             from datetime import datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
448 |
449 |             fmt = "%H:%M"
    |

PLR0912 Too many branches (27 > 12)
   --> funcionarios\wizard_views.py:460:9
    |
458 |             FuncionarioHorario.objects.bulk_create(objs)
459 |
460 |     def finish_wizard(self, editing_instance: Funcionario = None):
    |         ^^^^^^^^^^^^^
461 |         data = self.get_wizard_data()
462 |         if not data.get("step_1"):
    |

PLR0915 Too many statements (80 > 50)
   --> funcionarios\wizard_views.py:460:9
    |
458 |             FuncionarioHorario.objects.bulk_create(objs)
459 |
460 |     def finish_wizard(self, editing_instance: Funcionario = None):
    |         ^^^^^^^^^^^^^
461 |         data = self.get_wizard_data()
462 |         if not data.get("step_1"):
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:480:13
    |
478 |         add_json = payload.get("additional_addresses_json")
479 |         if add_json:
480 |             import json
    |             ^^^^^^^^^^^
481 |
482 |             try:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:490:17
    |
488 |             # Armazenar em campo observacoes como fallback até ter modelo próprio
489 |             if parsed:
490 |                 from datetime import datetime
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
491 |
492 |                 prefix = f"\n[Endereços Adicionais {datetime.now().strftime('%Y-%m-%d %H:%M')}]\n"
    |

E501 Line too long (159 > 120)
   --> funcionarios\wizard_views.py:498:121
    |
496 | …
497 | …
498 | …ouro', '')} {item.get('numero', '')} - {item.get('cidade', '')}/{item.get('uf', '')}"
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
499 | …
500 | …
    |

F823 Local variable `transaction` referenced before assignment
   --> funcionarios\wizard_views.py:518:18
    |
517 |         try:
518 |             with transaction.atomic():
    |                  ^^^^^^^^^^^
519 |                 if editing_instance:
520 |                     funcionario = self.persist_editing_instance(editing_instance)
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:548:25
    |
546 |                     dependentes_json = payload.get("dependentes_json")
547 |                     if dependentes_json:
548 |                         import json
    |                         ^^^^^^^^^^^
549 |
550 |                         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:554:33
    |
552 |                             if isinstance(deps, list):
553 |                                 # Ao criar simplesmente insere; ao editar (ramo acima) será tratado separadamente
554 |                                 from .models import Dependente
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
555 |
556 |                                 dep_objs = []
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:577:33
    |
575 |                                         continue
576 |                                 # Converter datas se string
577 |                                 from datetime import datetime
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
578 |
579 |                                 for o in dep_objs:
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:584:45
    |
582 |                                             o.data_nascimento = datetime.strptime(o.data_nascimento, "%Y-%m-%d").date()
583 |                                         except Exception:
584 |                                             from datetime import date
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
585 |
586 |                                             o.data_nascimento = date.today()
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:588:37
    |
586 |                                             o.data_nascimento = date.today()
587 |                                 if dep_objs:
588 |                                     from django.db import transaction
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
589 |
590 |                                     with transaction.atomic():
    |

PLC0415 `import` should be at the top-level of a file
   --> funcionarios\wizard_views.py:591:41
    |
590 |                                     with transaction.atomic():
591 |                                         from .models import Dependente as Dp
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
592 |
593 |                                         Dp.objects.bulk_create(dep_objs)
    |

PLC0415 `import` should be at the top-level of a file
  --> manage.py:12:9
   |
10 |     os.environ.setdefault("DJANGO_SETTINGS_MODULE", "pandora_erp.settings")
11 |     try:
12 |         from django.core.management import execute_from_command_line
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |     except ImportError as exc:
14 |         raise ImportError(
   |

PLR2004 Magic value used in comparison, consider replacing `24` with a constant variable
  --> mao_obra\forms.py:70:30
   |
68 |         if horas and horas <= 0:
69 |             raise forms.ValidationError(_("As horas trabalhadas devem ser maior que zero."))
70 |         if horas and horas > 24:
   |                              ^^
71 |             raise forms.ValidationError(_("As horas trabalhadas não podem exceder 24 horas por dia."))
72 |         return horas
   |

PLC0415 `import` should be at the top-level of a file
   --> mao_obra\views.py:126:9
    |
124 |     def get_context_data(self, **kwargs):
125 |         context = super().get_context_data(**kwargs)
126 |         from funcionarios.models import Funcionario
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
127 |         from obras.models import Obra
    |

PLC0415 `import` should be at the top-level of a file
   --> mao_obra\views.py:127:9
    |
125 |         context = super().get_context_data(**kwargs)
126 |         from funcionarios.models import Funcionario
127 |         from obras.models import Obra
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
128 |
129 |         context["funcionarios"] = Funcionario.objects.filter(tenant=self.request.tenant, ativo=True)
    |

PLC0415 `import` should be at the top-level of a file
   --> mao_obra\views.py:145:9
    |
144 |         # Estatísticas recentes (últimos 7 dias)
145 |         from datetime import datetime, timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
146 |
147 |         seven_days_ago = datetime.now() - timedelta(days=7)
    |

PLC0415 `import` should be at the top-level of a file
   --> mao_obra\views.py:296:5
    |
294 | def relatorio_mao_obra_funcionario(request, funcionario_pk):
295 |     """Gera relatório de mão de obra de um funcionário"""
296 |     from funcionarios.models import Funcionario
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
297 |
298 |     funcionario = get_object_or_404(Funcionario, pk=funcionario_pk, tenant=request.tenant)
    |

PLC0415 `import` should be at the top-level of a file
   --> mao_obra\views.py:328:5
    |
326 | def relatorio_mao_obra_obra(request, obra_pk):
327 |     """Gera relatório de mão de obra de uma obra"""
328 |     from obras.models import Obra
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
329 |
330 |     obra = get_object_or_404(Obra, pk=obra_pk, tenant=request.tenant)
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> notifications\forms.py:154:13
    |
152 |             return ids
153 |         except ValueError:
154 |             raise forms.ValidationError("IDs de notificação inválidos.")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

PLR0912 Too many branches (22 > 12)
  --> notifications\management\commands\notifications_cleanup.py:29:9
   |
27 |         parser.add_argument("--no-advanced", action="store_true", help="Não processa notificações avançadas.")
28 |
29 |     def handle(self, *args, **options):
   |         ^^^^^^
30 |         dry = options["dry_run"]
31 |         process_advanced = (
   |

PLR0915 Too many statements (62 > 50)
  --> notifications\management\commands\notifications_cleanup.py:29:9
   |
27 |         parser.add_argument("--no-advanced", action="store_true", help="Não processa notificações avançadas.")
28 |
29 |     def handle(self, *args, **options):
   |         ^^^^^^
30 |         dry = options["dry_run"]
31 |         process_advanced = (
   |

E501 Line too long (148 > 120)
   --> notifications\management\commands\notifications_cleanup.py:126:121
    |
124 | …
125 | …
126 | …vidas: {lidas_deleted_simple} | Arquivadas removidas: {archived_deleted_simple}"
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
127 | …
128 | …
    |

E501 Line too long (144 > 120)
   --> notifications\management\commands\notifications_cleanup.py:132:121
    |
130 | …
131 | …
132 | … removidas: {read_deleted_adv} | Arquivadas removidas: {archived_deleted_adv}"
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
133 | …
134 | …
    |

PLR0913 Too many arguments in function definition (12 > 5)
  --> notifications\services.py:27:9
   |
26 |     @staticmethod
27 |     def create_notification(
   |         ^^^^^^^^^^^^^^^^^^^
28 |         title,
29 |         content,
   |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> notifications\services.py:116:9
    |
114 |           channels_sent = []
115 |
116 | /         if user_prefs.email_enabled and tenant_settings.default_email_enabled:
117 | |             if LegacyNotificationService._send_email(recipient):
    | |________________________________________________________________^
118 |                   channels_sent.append("email")
119 |                   recipient.email_sent = True
    |
help: Combine `if` statements using `and`

SIM102 Use a single `if` statement instead of nested `if` statements
   --> notifications\services.py:121:9
    |
119 |                   recipient.email_sent = True
120 |
121 | /         if user_prefs.sms_enabled and tenant_settings.default_sms_enabled:
122 | |             if LegacyNotificationService._send_sms(recipient):
    | |______________________________________________________________^
123 |                   channels_sent.append("sms")
124 |                   recipient.sms_sent = True
    |
help: Combine `if` statements using `and`

SIM102 Use a single `if` statement instead of nested `if` statements
   --> notifications\services.py:126:9
    |
124 |                   recipient.sms_sent = True
125 |
126 | /         if user_prefs.push_enabled and tenant_settings.default_push_enabled:
127 | |             if LegacyNotificationService._send_push(recipient):
    | |_______________________________________________________________^
128 |                   channels_sent.append("push")
129 |                   recipient.push_sent = True
    |
help: Combine `if` statements using `and`

SIM102 Use a single `if` statement instead of nested `if` statements
   --> notifications\services.py:131:9
    |
129 |                   recipient.push_sent = True
130 |
131 | /         if user_prefs.inapp_enabled and tenant_settings.default_inapp_enabled:
132 | |             if LegacyNotificationService._send_inapp(recipient):
    | |________________________________________________________________^
133 |                   channels_sent.append("inapp")
134 |                   recipient.inapp_sent = True
    |
help: Combine `if` statements using `and`

E501 Line too long (124 > 120)
   --> notifications\services.py:141:121
    |
140 |         logger.info(
141 |             f"Notificação {recipient.notification.id} enviada para {recipient.user.username} via {', '.join(channels_sent)}"
    |                                                                                                                         ^^^^
142 |         )
    |

PLR2004 Magic value used in comparison, consider replacing `160` with a constant variable
   --> notifications\services.py:221:31
    |
220 |             # Truncar mensagem se necessário
221 |             if len(message) > 160:
    |                               ^^^
222 |                 message = message[:157] + "..."
    |

PLC0415 `import` should be at the top-level of a file
  --> notifications\signals.py:79:13
   |
77 |     if created:
78 |         try:
79 |             from asgiref.sync import async_to_sync
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
80 |             from channels.layers import get_channel_layer
   |

PLC0415 `import` should be at the top-level of a file
  --> notifications\signals.py:80:13
   |
78 |         try:
79 |             from asgiref.sync import async_to_sync
80 |             from channels.layers import get_channel_layer
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
81 |
82 |             channel_layer = get_channel_layer()
   |

PLR0912 Too many branches (14 > 12)
   --> notifications\signals.py:128:5
    |
127 | @receiver(post_save, sender="agenda.Evento")
128 | def notificar_evento_agenda(sender, instance, created, **kwargs):
    |     ^^^^^^^^^^^^^^^^^^^^^^^
129 |     """Cria notificações para eventos da agenda"""
130 |     try:
    |

E501 Line too long (135 > 120)
   --> notifications\signals.py:152:121
    |
150 | …
151 | …tance.titulo}",
152 | …ticipar do evento em {instance.data_inicio.strftime('%d/%m/%Y %H:%M')}.",
    |                                                            ^^^^^^^^^^^^^^^
153 | …
154 | …
    |

PLR0913 Too many arguments in function definition (6 > 5)
   --> notifications\signals.py:223:5
    |
223 | def criar_notificacao_evento(tenant, usuario, evento, tipo, titulo, mensagem):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
224 |     """Helper para criar notificações de eventos"""
225 |     # Verificar preferências do usuário
    |

PLC0415 `import` should be at the top-level of a file
   --> notifications\signals.py:290:13
    |
289 |             # Importar aqui para evitar ciclos
290 |             from chat.models import ParticipanteConversa
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
291 |
292 |             participantes = conversa.participantes.exclude(id=instance.remetente_id)
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> notifications\signals.py:315:71
    |
313 |                     titulo=f"Nova mensagem de {instance.remetente.username}",
314 |                     mensagem=(instance.conteudo[:100] + "...")
315 |                     if instance.conteudo and len(instance.conteudo) > 100
    |                                                                       ^^^
316 |                     else (instance.conteudo or "Arquivo enviado"),
317 |                     tipo="info",
    |

PLR2004 Magic value used in comparison, consider replacing `500` with a constant variable
   --> notifications\signals.py:334:79
    |
332 | …                     title=f"Nova mensagem de {instance.remetente.username}",
333 | …                     content=(instance.conteudo[:500] + "...")
334 | …                     if instance.conteudo and len(instance.conteudo) > 500
    |                                                                         ^^^
335 | …                     else (instance.conteudo or "Arquivo enviado"),
336 | …                     priority="medium",
    |

E501 Line too long (124 > 120)
  --> notifications\tests\test_ajax_endpoints.py:27:121
   |
25 |         )
26 |         self.client.login(username="ajaxuser", password="pass")
27 |         # Inject tenant id em sessão para middleware localizar (se middleware checa subdomínio pode não funcionar em teste).
   |                                                                                                                         ^^^^
28 |         session = self.client.session
29 |         session["current_tenant_id"] = self.tenant.id
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> notifications\tests\test_models_basic.py:137:36
    |
135 |         try:
136 |             resp = self.client.get(reverse("notifications:notification_detail", kwargs={"pk": n.pk}))
137 |             if resp.status_code == 200:
    |                                    ^^^
138 |                 n.refresh_from_db()
139 |                 self.assertIn(n.status, ["lida", "nao_lida"])
    |

PLC0415 `import` should be at the top-level of a file
  --> notifications\tests\test_realtime_flow.py:52:9
   |
50 |         self.conversa.marcar_mensagens_como_lidas(self.u2)
51 |         # Sincronização é via consumer normalmente; aqui chamamos helper direto
52 |         from notifications.views import marcar_notificacoes_chat_lidas
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
53 |
54 |         marcar_notificacoes_chat_lidas(self.conversa.id, self.u2, mensagem_ids=[msg.id])
   |

E402 Module level import not at top of file
  --> notifications\urls.py:67:1
   |
66 | # Anexar rotas do router dentro de api/v2
67 | from django.urls import re_path
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |
69 | urlpatterns += [
   |

PLR0911 Too many return statements (7 > 6)
   --> notifications\views.py:194:5
    |
193 | @csrf_exempt
194 | def api_notification_action(request):
    |     ^^^^^^^^^^^^^^^^^^^^^^^
195 |     """API para ações em notificações via AJAX"""
196 |     if not request.user.is_authenticated:
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> notifications\views.py:263:52
    |
261 |                     "titulo": notificacao.titulo,
262 |                     "mensagem": notificacao.mensagem[:100] + "..."
263 |                     if len(notificacao.mensagem) > 100
    |                                                    ^^^
264 |                     else notificacao.mensagem,
265 |                     "tipo": notificacao.tipo,
    |

PLR0913 Too many arguments in function definition (10 > 5)
   --> notifications\views.py:347:5
    |
346 | # Função utilitária para criar notificações programaticamente
347 | def criar_notificacao(
    |     ^^^^^^^^^^^^^^^^^
348 |     tenant,
349 |     usuario_destinatario,
    |

PLC0415 `import` should be at the top-level of a file
   --> notifications\views.py:402:13
    |
400 |     try:
401 |         if objeto_relacionado:
402 |             from django.contrib.contenttypes.models import ContentType
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
403 |
404 |             notificacao_data["content_type"] = ContentType.objects.get_for_model(objeto_relacionado)
    |

PLR0911 Too many return statements (11 > 6)
   --> notifications\views.py:415:5
    |
414 | @csrf_exempt
415 | def api_notification_batch_action(request):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
416 |     """API para ações em lote nas notificações via AJAX"""
417 |     if not request.user.is_authenticated:
    |

PLR0912 Too many branches (14 > 12)
   --> notifications\views.py:415:5
    |
414 | @csrf_exempt
415 | def api_notification_batch_action(request):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
416 |     """API para ações em lote nas notificações via AJAX"""
417 |     if not request.user.is_authenticated:
    |

E402 Module level import not at top of file
   --> notifications\views.py:471:1
    |
471 | from django.db import transaction
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
472 |
473 | # Acrescenta função util para sincronizar leitura de notificações do chat
    |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   --> obras\forms.py:118:68
    |
117 |         # Validar progresso
118 |         if progresso is not None and (progresso < 0 or progresso > 100):
    |                                                                    ^^^
119 |             raise ValidationError("O progresso deve estar entre 0 e 100%.")
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> obras\forms.py:244:13
    |
242 |               w = field.widget
243 |               cls = w.attrs.get("class", "")
244 | /             if not isinstance(w, (forms.CheckboxInput, forms.FileInput, forms.RadioSelect)):
245 | |                 if "form-control" not in cls:
    | |_____________________________________________^
246 |                       w.attrs["class"] = f"{cls} form-control".strip()
247 |               if isinstance(w, forms.Select) and "select2" not in w.attrs.get("class", ""):
    |
help: Combine `if` statements using `and`

PLC0415 `import` should be at the top-level of a file
   --> obras\views.py:322:13
    |
320 |             modelo = form.cleaned_data["modelo"]
321 |
322 |             from django.db import transaction
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
323 |
324 |             created = 0
    |

PLR0911 Too many return statements (7 > 6)
   --> obras\wizard_views.py:129:9
    |
127 |         return forms
128 |
129 |     def _serialize_value(self, v):
    |         ^^^^^^^^^^^^^^^^
130 |         """Converte valores do cleaned_data para formatos serializáveis em JSON (sessão)."""
131 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> obras\wizard_views.py:139:13
    |
137 |                 return v.pk
138 |             # Date/Datetime
139 |             from datetime import date, datetime
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
140 |
141 |             if isinstance(v, (date, datetime)):
    |

PLC0415 `import` should be at the top-level of a file
   --> obras\wizard_views.py:144:13
    |
142 |                 return v.isoformat()
143 |             # Decimal
144 |             from decimal import Decimal
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
145 |
146 |             if isinstance(v, Decimal):
    |

PLR0912 Too many branches (13 > 12)
   --> obras\wizard_views.py:167:9
    |
165 |         return step_data
166 |
167 |     def get_context_data(self, **kwargs):
    |         ^^^^^^^^^^^^^^^^
168 |         """Contexto específico para o wizard de Obras (títulos, navegação e preview)."""
169 |         context = {}
    |

PLR0912 Too many branches (17 > 12)
   --> obras\wizard_views.py:317:9
    |
315 |             return redirect(request.path)
316 |
317 |     def finish_wizard(self):
    |         ^^^^^^^^^^^^^
318 |         data = self.get_wizard_data() or {}
319 |         step1 = data.get("step_1", {}).get("main", {})
    |

PLR0915 Too many statements (56 > 50)
   --> obras\wizard_views.py:317:9
    |
315 |             return redirect(request.path)
316 |
317 |     def finish_wizard(self):
    |         ^^^^^^^^^^^^^
318 |         data = self.get_wizard_data() or {}
319 |         step1 = data.get("step_1", {}).get("main", {})
    |

PLC0415 `import` should be at the top-level of a file
   --> obras\wizard_views.py:325:13
    |
324 |         try:
325 |             from django.db import transaction
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
326 |
327 |             with transaction.atomic():
    |

PLC0415 `import` should be at the top-level of a file
  --> orcamentos\views.py:61:9
   |
60 |         # Estatísticas recentes (últimos 30 dias)
61 |         from datetime import datetime, timedelta
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
62 |
63 |         thirty_days_ago = datetime.now() - timedelta(days=30)
   |

E402 Module level import not at top of file
  --> pandora_erp\asgi.py:23:1
   |
21 | django_asgi_app = get_asgi_application()
22 |
23 | import core.routing
   | ^^^^^^^^^^^^^^^^^^^
24 |
25 | try:
   |

E501 Line too long (146 > 120)
   --> pandora_erp\settings.py:203:121
    |
201 | …
202 | …
203 | …d",  # Subclasse de ModelBackend: inclui permissões e autenticação com bloqueio
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
204 | …objeto
205 | …
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:286:47
    |
284 |     SESSION_COOKIE_SAMESITE = os.environ.get("SESSION_COOKIE_SAMESITE", "Lax")
285 | EMAIL_HOST = os.environ.get("EMAIL_HOST", "smtp.gmail.com")
286 | EMAIL_PORT = int(os.environ.get("EMAIL_PORT", 587))
    |                                               ^^^
287 | EMAIL_USE_TLS = os.environ.get("EMAIL_USE_TLS", "True") == "True"
288 | EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER", "")
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:327:83
    |
326 | NOTIFICATIONS_PUSH_VAPID_ADMIN_EMAIL = os.environ.get("NOTIFICATIONS_PUSH_VAPID_ADMIN_EMAIL", "")
327 | ADMIN_METRICS_RETENTION_DAYS = int(os.environ.get("ADMIN_METRICS_RETENTION_DAYS", 90))
    |                                                                                   ^^
328 | ADMIN_AUDIT_LOG_RETENTION_DAYS = int(os.environ.get("ADMIN_AUDIT_LOG_RETENTION_DAYS", 365))
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:328:87
    |
326 | NOTIFICATIONS_PUSH_VAPID_ADMIN_EMAIL = os.environ.get("NOTIFICATIONS_PUSH_VAPID_ADMIN_EMAIL", "")
327 | ADMIN_METRICS_RETENTION_DAYS = int(os.environ.get("ADMIN_METRICS_RETENTION_DAYS", 90))
328 | ADMIN_AUDIT_LOG_RETENTION_DAYS = int(os.environ.get("ADMIN_AUDIT_LOG_RETENTION_DAYS", 365))
    |                                                                                       ^^^
329 |
330 | # Feature Flags (somente flags específicas não duplicadas mais abaixo)
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:337:107
    |
335 | USE_NOVO_AGENDAMENTO = os.environ.get("USE_NOVO_AGENDAMENTO", "True") == "True"
336 | ENABLE_EVENT_MIRROR = os.environ.get("ENABLE_EVENT_MIRROR", "True") == "True"
337 | AGENDAMENTOS_CANCEL_ANTECEDENCIA_MINUTOS = int(os.environ.get("AGENDAMENTOS_CANCEL_ANTECEDENCIA_MINUTOS", 120))
    |                                                                                                           ^^^
338 | AGENDAMENTOS_REAGENDAMENTO_CADEIA_MAX = int(os.environ.get("AGENDAMENTOS_REAGENDAMENTO_CADEIA_MAX", 5))
339 | ENABLE_CONTROLLED_OVERBOOK = os.environ.get("ENABLE_CONTROLLED_OVERBOOK", "False") == "True"
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:338:101
    |
336 | ENABLE_EVENT_MIRROR = os.environ.get("ENABLE_EVENT_MIRROR", "True") == "True"
337 | AGENDAMENTOS_CANCEL_ANTECEDENCIA_MINUTOS = int(os.environ.get("AGENDAMENTOS_CANCEL_ANTECEDENCIA_MINUTOS", 120))
338 | AGENDAMENTOS_REAGENDAMENTO_CADEIA_MAX = int(os.environ.get("AGENDAMENTOS_REAGENDAMENTO_CADEIA_MAX", 5))
    |                                                                                                     ^
339 | ENABLE_CONTROLLED_OVERBOOK = os.environ.get("ENABLE_CONTROLLED_OVERBOOK", "False") == "True"
340 | # URL externa para portal do cliente (opcional)
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:343:81
    |
341 | CLIENT_PORTAL_URL = os.environ.get("CLIENT_PORTAL_URL", None)
342 | ENABLE_WAITLIST = os.environ.get("ENABLE_WAITLIST", "False") == "True"
343 | AGENDAMENTOS_OVERBOOK_EXTRA = int(os.environ.get("AGENDAMENTOS_OVERBOOK_EXTRA", 1))
    |                                                                                 ^
344 |
345 | # Assistente IA (voz) - desabilitado por padrão para evitar logs no startup
    |

PLW1508 Invalid type for environment variable default; expected `str` or `None`
   --> pandora_erp\settings.py:348:69
    |
346 | ASSISTANT_SPEECH_ENABLED = os.environ.get("ASSISTANT_SPEECH_ENABLED", "False") == "True"
347 | ASSISTANT_TTS_ENABLED = os.environ.get("ASSISTANT_TTS_ENABLED", "False") == "True"
348 | ASSISTANT_SPEECH_RATE = int(os.environ.get("ASSISTANT_SPEECH_RATE", 150))
    |                                                                     ^^^
    |

E402 Module level import not at top of file
   --> pandora_erp\settings.py:727:1
    |
726 | # Agendamentos periódicos (Celery Beat)
727 | from datetime import timedelta
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
728 |
729 | CELERY_BEAT_SCHEDULE = {
    |

E402 Module level import not at top of file
  --> pandora_erp\urls.py:24:1
   |
22 |     CONTENT_TYPE_LATEST = "text/plain; version=0.0.4; charset=utf-8"  # fallback mínimo
23 |     _PROM_AVAILABLE = False
24 | from django.conf import settings
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from django.conf.urls.static import static
26 | from django.shortcuts import redirect
   |

E402 Module level import not at top of file
  --> pandora_erp\urls.py:25:1
   |
23 |     _PROM_AVAILABLE = False
24 | from django.conf import settings
25 | from django.conf.urls.static import static
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from django.shortcuts import redirect
   |

E402 Module level import not at top of file
  --> pandora_erp\urls.py:26:1
   |
24 | from django.conf import settings
25 | from django.conf.urls.static import static
26 | from django.shortcuts import redirect
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | from core.views import dashboard
   |

E402 Module level import not at top of file
  --> pandora_erp\urls.py:28:1
   |
26 | from django.shortcuts import redirect
27 |
28 | from core.views import dashboard
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 | from core.views_help import AjudaView
   |

E402 Module level import not at top of file
  --> pandora_erp\urls.py:29:1
   |
28 | from core.views import dashboard
29 | from core.views_help import AjudaView
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
  --> portal_cliente\apps.py:10:9
   |
 9 |       def ready(self):
10 | /         try:
11 | |             import portal_cliente.signals  # noqa
12 | |         except Exception:
13 | |             pass
   | |________________^
   |
help: Replace with `contextlib.suppress(Exception)`

PLR0912 Too many branches (20 > 12)
  --> portal_cliente\management\commands\criar_conta_portal_teste.py:40:9
   |
38 |         parser.add_argument("--password", type=str, default="123456", help="Senha para o usuário de teste")
39 |
40 |     def handle(self, *args, **options):
   |         ^^^^^^
41 |         username = options["username"]
42 |         email = options["email"]
   |

PLR0915 Too many statements (74 > 50)
  --> portal_cliente\management\commands\criar_conta_portal_teste.py:40:9
   |
38 |         parser.add_argument("--password", type=str, default="123456", help="Senha para o usuário de teste")
39 |
40 |     def handle(self, *args, **options):
   |         ^^^^^^
41 |         username = options["username"]
42 |         email = options["email"]
   |

E501 Line too long (187 > 120)
  --> portal_cliente\services.py:46:121
   |
44 | …
45 | …
46 | …_ativo={getattr(c.cliente, 'portal_ativo', None)} ativo={c.ativo} user_active={c.usuario.is_active}"
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
47 | …
48 | …)")
   |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:135:13
    |
133 |         # Se filtrar por serviço, restringir a profissionais habilitados (se feature habilitada)
134 |         if servico_id:
135 |             from django.conf import settings as dj_settings
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
136 |
137 |             if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:138:17
    |
137 |             if getattr(dj_settings, "ENFORCE_COMPETENCIA", False):
138 |                 from agendamentos.models import ProfissionalProcedimento
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
139 |
140 |                 profs = ProfissionalProcedimento.objects.filter(
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:150:9
    |
148 |     def criar_agendamento_cliente(conta_cliente, slot_id, servico_id, observacoes=None):
149 |         """Cria agendamento solicitado pelo cliente"""
150 |         from django.db import transaction
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
151 |
152 |         from agendamentos.services import AgendamentoService
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:152:9
    |
150 |         from django.db import transaction
151 |
152 |         from agendamentos.services import AgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
153 |
154 |         cliente = conta_cliente.cliente
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:164:17
    |
163 |                 # Buscar serviço clínico
164 |                 from servicos.models import Servico
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
165 |
166 |                 servico = Servico.objects.get(
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> portal_cliente\services.py:193:13
    |
192 |         except Slot.DoesNotExist:
193 |             raise ValueError("Slot não encontrado")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
194 |         except Servico.DoesNotExist:
195 |             raise ValueError("Serviço não encontrado")
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> portal_cliente\services.py:195:13
    |
193 |             raise ValueError("Slot não encontrado")
194 |         except Servico.DoesNotExist:
195 |             raise ValueError("Serviço não encontrado")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
196 |
197 |     @staticmethod
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:200:9
    |
198 |     def pode_cancelar_agendamento(conta_cliente, agendamento_id):
199 |         """Verifica se cliente pode cancelar agendamento"""
200 |         from django.conf import settings
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
201 |
202 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> portal_cliente\services.py:230:9
    |
228 |             raise ValueError(erro)
229 |
230 |         from prontuarios.services import AtendimentoAgendamentoService
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
231 |
232 |         motivo_completo = "Cancelado pelo cliente via portal"
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> portal_cliente\tests.py:21:32
   |
19 |     url = reverse("portal_cliente:dashboard")
20 |     resp = client.get(url)
21 |     assert resp.status_code == 200
   |                                ^^^
   |

PLR2004 Magic value used in comparison, consider replacing `404` with a constant variable
  --> portal_cliente\tests.py:30:32
   |
28 |     url = reverse("portal_cliente:dashboard")
29 |     resp = client.get(url)
30 |     assert resp.status_code == 404
   |                                ^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> portal_cliente\tests_portal.py:63:9
   |
61 |         )
62 |         # Criar foto mínima (imagem obrigatória pode ser mockada com SimpleUploadedFile)
63 |         from django.core.files.uploadedfile import SimpleUploadedFile
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
64 |
65 |         img = SimpleUploadedFile("foto.jpg", b"filecontent", content_type="image/jpeg")
   |

F821 Undefined name `Response`
  --> portal_cliente\views.py:64:16
   |
62 |         queryset = self.get_queryset()
63 |         serializer = self.get_serializer(queryset, many=True)
64 |         return Response(serializer.data)
   |                ^^^^^^^^
   |

PLR2004 Magic value used in comparison, consider replacing `20` with a constant variable
   --> portal_cliente\views_portal.py:304:15
    |
302 |     cache_key = f"portal_slots_req_{request.user.id}"
303 |     reqs = cache.get(cache_key, 0)
304 |     if reqs > 20:
    |               ^^
305 |         return JsonResponse(
306 |             {"success": False, "error": "Limite de requisições atingido. Tente novamente em instantes."}, status=429
    |

PLR2004 Magic value used in comparison, consider replacing `30` with a constant variable
   --> portal_cliente\views_portal.py:353:15
    |
351 |     cache_key = f"portal_serv_req_{request.user.id}"
352 |     reqs = cache.get(cache_key, 0)
353 |     if reqs > 30:
    |               ^^
354 |         return JsonResponse({"success": False, "error": "Limite de requisições atingido."}, status=429)
355 |     cache.incr(cache_key) if cache.get(cache_key) else cache.set(cache_key, 1, 60)
    |

PLR2004 Magic value used in comparison, consider replacing `30` with a constant variable
   --> portal_cliente\views_portal.py:420:15
    |
418 |     cache_key = f"portal_prof_req_{request.user.id}"
419 |     reqs = cache.get(cache_key, 0)
420 |     if reqs > 30:
    |               ^^
421 |         return JsonResponse({"success": False, "error": "Limite de requisições atingido."}, status=429)
422 |     cache.incr(cache_key) if cache.get(cache_key) else cache.set(cache_key, 1, 60)
    |

SIM105 Use `contextlib.suppress(ImportError)` instead of `try`-`except`-`pass`
  --> portal_fornecedor\apps.py:11:9
   |
 9 |       def ready(self):
10 |           """Importa signals quando o app estiver carregado."""
11 | /         try:
12 | |             import portal_fornecedor.signals  # noqa
13 | |         except ImportError:
14 | |             pass
   | |________________^
   |
help: Replace with `contextlib.suppress(ImportError)`

PLC0415 `import` should be at the top-level of a file
  --> portal_fornecedor\signals.py:21:9
   |
19 |     if created:
20 |         # Log da criação do acesso
21 |         import logging
   |         ^^^^^^^^^^^^^^
22 |
23 |         logger = logging.getLogger(__name__)
   |

PLC0415 `import` should be at the top-level of a file
  --> produtos\api.py:65:9
   |
63 |     @action(detail=True, methods=["get"])
64 |     def resumo(self, request, pk=None):
65 |         from estoque.models import EstoqueSaldo, MovimentoEstoque, ReservaEstoque
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
66 |
67 |         produto = self.get_object()
   |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
  --> produtos\forms.py:48:33
   |
46 |         if descricao:
47 |             descricao = descricao.strip()
48 |             if len(descricao) < 10:
   |                                 ^^
49 |                 raise ValidationError("A descrição deve ter pelo menos 10 caracteres.")
50 |         return descricao
   |

PLR2004 Magic value used in comparison, consider replacing `1000` with a constant variable
   --> produtos\forms.py:190:59
    |
188 |         """Validação para margem de lucro"""
189 |         margem = self.cleaned_data.get("margem_lucro")
190 |         if margem is not None and (margem < 0 or margem > 1000):
    |                                                           ^^^^
191 |             raise ValidationError("A margem de lucro deve estar entre 0% e 1000%.")
192 |         return margem
    |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   --> produtos\forms.py:214:55
    |
213 |             # Permitir diferença de até 5% entre margem informada e calculada
214 |             if abs(margem_calculada - margem_lucro) > 5:
    |                                                       ^
215 |                 self.add_error(
216 |                     "margem_lucro", f"A margem de lucro calculada ({margem_calculada:.2f}%) difere muito da informada."
    |

SIM102 Use a single `if` statement instead of nested `if` statements
   --> produtos\forms.py:374:9
    |
372 |           """Validação para arquivo"""
373 |           arquivo = self.cleaned_data.get("arquivo")
374 | /         if arquivo:
375 | |             # Verificar tamanho (máximo 10MB)
376 | |             if arquivo.size > 10 * 1024 * 1024:
    | |_______________________________________________^
377 |                   raise ValidationError("O arquivo deve ter no máximo 10MB.")
    |
help: Combine `if` statements using `and`

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> produtos\forms.py:435:17
    |
433 |                 if isinstance(e, ValidationError):
434 |                     raise
435 |                 raise ValidationError(f"Erro ao ler arquivo: {str(e)}")
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
436 |
437 |         return arquivo
    |

PLC0415 `import` should be at the top-level of a file
  --> produtos\models.py:45:9
   |
43 |     def create(self, **kwargs):
44 |         # Converter valores legacy string antes de criar
45 |         from django.apps import apps
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
46 |
47 |         try:
   |

PLC0415 `import` should be at the top-level of a file
   --> produtos\models.py:160:9
    |
158 |     # --- Compatibilidade legado: permitir atribuir categoria/unidade via string ---
159 |     def set_categoria_legacy(self, value):
160 |         from produtos.models import Categoria
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
161 |
162 |         if isinstance(value, Categoria):
    |

PLC0415 `import` should be at the top-level of a file
   --> produtos\models.py:172:13
    |
170 |     def set_unidade_legacy(self, value):
171 |         try:
172 |             from cadastros_gerais.models import UnidadeMedida
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
173 |         except Exception:
174 |             UnidadeMedida = None
    |

PLC0415 `import` should be at the top-level of a file
   --> produtos\models.py:252:17
    |
250 |         if not self.unidade_id and hasattr(self, "_unidade_legacy_sigla") and self._unidade_legacy_sigla:
251 |             try:
252 |                 from cadastros_gerais.models import UnidadeMedida
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
253 |
254 |                 un_obj, _ = UnidadeMedida.objects.get_or_create(
    |

PLR0912 Too many branches (15 > 12)
   --> produtos\views.py:179:9
    |
177 |     model_name = "produto"
178 |
179 |     def get_queryset(self):
    |         ^^^^^^^^^^^^
180 |         queryset = super().get_queryset()
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\api_views.py:113:9
    |
111 |         """Reprocessa derivados (thumbnail, webp, poster) para a foto selecionada."""
112 |         foto = self.get_object()
113 |         from .tasks import reprocessar_derivados_foto
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
114 |
115 |         forcar = request.data.get("forcar") == "1"
    |

E501 Line too long (129 > 120)
   --> prontuarios\api_views.py:154:121
    |
152 |         tenant = get_current_tenant(self.request)
153 |         qs = PerfilClinico.objects.filter(tenant=tenant)
154 |         # Perfis clínicos são dados sensíveis: se não for superuser, retorna apenas perfis ligados a atendimentos do profissional
    |                                                                                                                         ^^^^^^^^^
155 |         user = self.request.user
156 |         if user.is_superuser:
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\api_views.py:190:9
    |
188 |         return Response([], status=200)
189 |     try:
190 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
191 |     except Exception:
192 |         return Response([], status=200)
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\api_views.py:237:9
    |
235 |     if staff_only:
236 |         # Heurística de profissional: is_staff OU grupos contendo 'secretaria'/'prof' OU username iniciando com 'prof'
237 |         from django.db.models import Q as _Q
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
238 |
239 |         tu_qs = tu_qs.filter(
    |

E501 Line too long (125 > 120)
   --> prontuarios\api_views.py:263:121
    |
261 | def upload_foto_evolucao_mobile(request):
262 |     """Endpoint rápido para upload de foto via app mobile / câmera.
263 |     Campos esperados multipart: imagem, atendimento (id), tipo_foto, momento, area_fotografada, titulo(opc), observacoes(opc)
    |                                                                                                                         ^^^^^
264 |     Restringe acesso: profissional responsável pelo atendimento OU (futuro) paciente do atendimento.
265 |     """
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\api_views.py:285:5
    |
283 |     if not imagem:
284 |         return Response({"detail": "imagem requerida"}, status=400)
285 |     from .models import FotoEvolucao
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
286 |
287 |     foto = FotoEvolucao.objects.create(
    |

E501 Line too long (125 > 120)
  --> prontuarios\management\commands\migrar_pacientes_para_clientes.py:9:121
   |
 8 | class Command(BaseCommand):
 9 |     help = "Migra registros de Paciente para Cliente/PessoaFisica e cria PerfilClinico quando possível. Não remove Paciente."
   |                                                                                                                         ^^^^^
10 |
11 |     def add_arguments(self, parser):
   |

E501 Line too long (132 > 120)
  --> prontuarios\management\commands\migrar_pacientes_para_clientes.py:38:121
   |
36 |                     if dry_run:
37 |                         self.stdout.write(
38 |                             f"DRY-RUN Criaria Cliente PF para paciente {pac.nome_completo} ({pac.cpf}) no tenant {tenant.subdomain}"
   |                                                                                                                         ^^^^^^^^^^^^
39 |                         )
40 |                     else:
   |

E501 Line too long (126 > 120)
   --> prontuarios\models.py:323:121
    |
322 |     def __str__(self):
323 |         return f"Foto de {getattr(self.cliente, 'nome_display', '—')} - {self.titulo} ({self.data_foto.strftime('%d/%m/%Y')})"
    |                                                                                                                         ^^^^^^
324 |
325 |     def save(self, *args, **kwargs):
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\models.py:326:9
    |
325 |     def save(self, *args, **kwargs):
326 |         import hashlib
    |         ^^^^^^^^^^^^^^
327 |
328 |         # Calcular hash e tamanho se imagem nova
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\models.py:351:17
    |
349 |           if self.imagem or self.video:
350 |               try:
351 | /                 from .tasks import (
352 | |                     extrair_video_poster,
353 | |                     gerar_thumbnail_foto,
354 | |                     gerar_variacao_webp,
355 | |                     transcodificar_video,
356 | |                     validar_video,
357 | |                 )
    | |_________________^
358 |
359 |                   if self.imagem:
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\models.py:373:9
    |
372 |     def clean(self):
373 |         from django.core.exceptions import ValidationError
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
374 |
375 |         max_image_mb = 8
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\models.py:382:9
    |
380 |             raise ValidationError({"video": f"Vídeo excede {max_video_mb}MB"})
381 |         # Validar extensões simples
382 |         import os
    |         ^^^^^^^^^
383 |
384 |         if self.video:
    |

E501 Line too long (144 > 120)
   --> prontuarios\models.py:448:121
    |
447 | …
448 | …, '—')} para {self.servico.nome_servico} ({self.get_tipo_anamnese_display()})"
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> prontuarios\services.py:55:13
   |
54 |         except Agendamento.DoesNotExist:
55 |             raise ValueError(f"Agendamento {agendamento_id} não encontrado")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
56 |
57 |     @staticmethod
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> prontuarios\services.py:87:13
   |
86 |         except Atendimento.DoesNotExist:
87 |             raise ValueError(f"Atendimento {atendimento_id} não encontrado")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
88 |
89 |     @staticmethod
   |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> prontuarios\services.py:119:13
    |
118 |         except Agendamento.DoesNotExist:
119 |             raise ValueError(f"Agendamento {agendamento_id} não encontrado")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
120 |
121 |     @staticmethod
    |

E501 Line too long (183 > 120)
  --> prontuarios\signals.py:28:121
   |
26 | …
27 | …
28 | … 'nome_servico', 'Serviço')} registrado para cliente ID {getattr(instance.cliente, 'id', None)}.",
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 | …
30 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\signals.py:34:9
   |
32 |     # Verificar se é necessário agendar próximo atendimento
33 |     if getattr(getattr(instance, "servico", None), "intervalo_minimo_sessoes", None):
34 |         from .utils import calcular_proximo_atendimento
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |
36 |         proxima_data = calcular_proximo_atendimento(instance.data_atendimento.date(), instance.servico)
   |

E501 Line too long (155 > 120)
   --> prontuarios\signals.py:128:121
    |
126 | …
127 | …
128 | …co, 'nome_servico', 'Serviço')} antes do intervalo mínimo ({intervalo_min} dias).",
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
129 | …
130 | …
    |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:39:5
   |
37 | def gerar_variacao_webp(self, foto_id):
38 |     """Gera variação WEBP para a imagem principal (se aplicável)."""
39 |     from time import perf_counter
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
40 |
41 |     start = perf_counter()
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:47:9
   |
45 |         if not foto.imagem or not foto.imagem.name.lower().endswith((".jpg", ".jpeg", ".png")):
46 |             return False
47 |         from io import BytesIO
   |         ^^^^^^^^^^^^^^^^^^^^^^
48 |
49 |         from PIL import Image
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:49:9
   |
47 |         from io import BytesIO
48 |
49 |         from PIL import Image
   |         ^^^^^^^^^^^^^^^^^^^^^
50 |
51 |         foto.imagem.seek(0)
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:55:9
   |
53 |         webp_io = BytesIO()
54 |         img.save(webp_io, format="WEBP", quality=80, method=6)
55 |         from django.core.files.base import ContentFile
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
56 |
57 |         webp_name = foto.imagem.name.rsplit(".", 1)[0] + ".webp"
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:74:5
   |
72 | def gerar_thumbnail_foto(self, foto_id):
73 |     """Gera thumbnail JPEG para a foto caso ainda não exista."""
74 |     from time import perf_counter
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
75 |
76 |     start = perf_counter()
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:79:9
   |
77 |     INFLIGHT.labels("gerar_thumbnail_foto").inc()
78 |     try:
79 |         from io import BytesIO
   |         ^^^^^^^^^^^^^^^^^^^^^^
80 |
81 |         from django.core.files.base import ContentFile
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:81:9
   |
79 |         from io import BytesIO
80 |
81 |         from django.core.files.base import ContentFile
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
82 |         from PIL import Image
   |

PLC0415 `import` should be at the top-level of a file
  --> prontuarios\tasks.py:82:9
   |
81 |         from django.core.files.base import ContentFile
82 |         from PIL import Image
   |         ^^^^^^^^^^^^^^^^^^^^^
83 |
84 |         foto = FotoEvolucao.objects.get(id=foto_id)
   |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:109:5
    |
107 | def extrair_video_poster(self, foto_id):
108 |     """Extrai frame (poster) de vídeo associado usando ffmpeg (se disponível)."""
109 |     from time import perf_counter
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
110 |
111 |     start = perf_counter()
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:118:9
    |
116 |             return False
117 |         # Caminhos
118 |         import os
    |         ^^^^^^^^^
119 |         import subprocess
120 |         import tempfile
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:119:9
    |
117 |         # Caminhos
118 |         import os
119 |         import subprocess
    |         ^^^^^^^^^^^^^^^^^
120 |         import tempfile
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:120:9
    |
118 |         import os
119 |         import subprocess
120 |         import tempfile
    |         ^^^^^^^^^^^^^^^
121 |
122 |         from django.core.files.base import File
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:122:9
    |
120 |         import tempfile
121 |
122 |         from django.core.files.base import File
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
123 |
124 |         # Usar ffmpeg se existir no PATH
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:150:5
    |
148 | def _ffprobe_metadata(path):
149 |     """Retorna metadados básicos de vídeo usando ffprobe se disponível."""
150 |     import shutil
    |     ^^^^^^^^^^^^^
151 |     import subprocess
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:151:5
    |
149 |     """Retorna metadados básicos de vídeo usando ffprobe se disponível."""
150 |     import shutil
151 |     import subprocess
    |     ^^^^^^^^^^^^^^^^^
152 |
153 |     if not shutil.which("ffprobe"):
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:167:5
    |
165 | def validar_video(self, foto_id, max_duracao_seg=60, max_width=1920, max_height=1080):
166 |     """Valida duração e resolução do vídeo; remove se inválido."""
167 |     from time import perf_counter
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
168 |
169 |     start = perf_counter()
    |

PLR0911 Too many return statements (8 > 6)
   --> prontuarios\tasks.py:217:5
    |
216 | @shared_task(bind=True, autoretry_for=(Exception,), retry_backoff=True, retry_kwargs={"max_retries": 1})
217 | def transcodificar_video(self, foto_id, target="h264"):  # target: h264|webm
    |     ^^^^^^^^^^^^^^^^^^^^
218 |     """Transcodifica vídeo para perfil padronizado (baixa prioridade)."""
219 |     import os
    |

PLR0912 Too many branches (17 > 12)
   --> prontuarios\tasks.py:217:5
    |
216 | @shared_task(bind=True, autoretry_for=(Exception,), retry_backoff=True, retry_kwargs={"max_retries": 1})
217 | def transcodificar_video(self, foto_id, target="h264"):  # target: h264|webm
    |     ^^^^^^^^^^^^^^^^^^^^
218 |     """Transcodifica vídeo para perfil padronizado (baixa prioridade)."""
219 |     import os
    |

PLR0915 Too many statements (70 > 50)
   --> prontuarios\tasks.py:217:5
    |
216 | @shared_task(bind=True, autoretry_for=(Exception,), retry_backoff=True, retry_kwargs={"max_retries": 1})
217 | def transcodificar_video(self, foto_id, target="h264"):  # target: h264|webm
    |     ^^^^^^^^^^^^^^^^^^^^
218 |     """Transcodifica vídeo para perfil padronizado (baixa prioridade)."""
219 |     import os
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:219:5
    |
217 | def transcodificar_video(self, foto_id, target="h264"):  # target: h264|webm
218 |     """Transcodifica vídeo para perfil padronizado (baixa prioridade)."""
219 |     import os
    |     ^^^^^^^^^
220 |     import shutil
221 |     import subprocess
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:220:5
    |
218 |     """Transcodifica vídeo para perfil padronizado (baixa prioridade)."""
219 |     import os
220 |     import shutil
    |     ^^^^^^^^^^^^^
221 |     import subprocess
222 |     import tempfile
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:221:5
    |
219 |     import os
220 |     import shutil
221 |     import subprocess
    |     ^^^^^^^^^^^^^^^^^
222 |     import tempfile
223 |     from time import perf_counter
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:222:5
    |
220 |     import shutil
221 |     import subprocess
222 |     import tempfile
    |     ^^^^^^^^^^^^^^^
223 |     from time import perf_counter
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:223:5
    |
221 |     import subprocess
222 |     import tempfile
223 |     from time import perf_counter
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
224 |
225 |     start = perf_counter()
    |

PLW0603 Using the global statement to update `TRANSCODIFICACAO_FALHAS_CONSECUTIVAS` is discouraged
   --> prontuarios\tasks.py:229:16
    |
227 |     redis_client = None
228 |     try:
229 |         global TRANSCODIFICACAO_FALHAS_CONSECUTIVAS
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
230 |         # Carregar contador persistido se possível
231 |         try:
    |

PLW0603 Using the global statement to update `TRANSCODIFICACAO_FALHAS_CONSECUTIVAS` is discouraged
   --> prontuarios\tasks.py:229:16
    |
227 |     redis_client = None
228 |     try:
229 |         global TRANSCODIFICACAO_FALHAS_CONSECUTIVAS
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
230 |         # Carregar contador persistido se possível
231 |         try:
    |

PLW0603 Using the global statement to update `TRANSCODIFICACAO_FALHAS_CONSECUTIVAS` is discouraged
   --> prontuarios\tasks.py:229:16
    |
227 |     redis_client = None
228 |     try:
229 |         global TRANSCODIFICACAO_FALHAS_CONSECUTIVAS
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
230 |         # Carregar contador persistido se possível
231 |         try:
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:232:13
    |
230 |         # Carregar contador persistido se possível
231 |         try:
232 |             import redis
    |             ^^^^^^^^^^^^
233 |
234 |             if getattr(settings, "REDIS_URL", None):
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:282:17
    |
280 |                     best = (tg, path, size)
281 |             if best:
282 |                 from django.core.files.base import File
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
283 |
284 |                 tg, path, new_size = best
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:319:5
    |
317 | def reprocessar_derivados_foto(self, foto_id, forcar=False):
318 |     """Reprocessa derivados (thumbnail, webp, poster) sob demanda."""
319 |     from time import perf_counter
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
320 |
321 |     start = perf_counter()
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:351:9
    |
349 |     """
350 |     try:
351 |         from core.models import Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
352 |
353 |         tenant = Tenant.objects.get(id=tenant_id)
    |

E501 Line too long (124 > 120)
   --> prontuarios\tasks.py:381:121
    |
379 |         contexto = {
380 |             "tenant": tenant,
381 |             "periodo": f"{primeiro_dia_mes_anterior.strftime('%d/%m/%Y')} a {ultimo_dia_mes_anterior.strftime('%d/%m/%Y')}",
    |                                                                                                                         ^^^^
382 |             "total_atendimentos": procedimentos_realizados,
383 |             # Mantém chave antiga para compatibilidade de template
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:459:5
    |
457 |     Atualmente não gera arquivos; mantido para compatibilidade de chamadas existentes.
458 |     """
459 |     from core.models import Tenant
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
460 |
461 |     try:
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:476:9
    |
474 |     """
475 |     try:
476 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
477 |         from notifications.models import Notification
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:477:9
    |
475 |     try:
476 |         from clientes.models import Cliente
477 |         from notifications.models import Notification
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
478 |
479 |         hoje = timezone.now().date()
    |

E501 Line too long (126 > 120)
   --> prontuarios\tasks.py:489:121
    |
487 |                     tenant=cliente.tenant,
488 |                     title="Cliente Inativo",
489 |                     message=f"Cliente {getattr(cliente, 'nome_display', cliente.id)} não tem atendimento há mais de 6 meses.",
    |                                                                                                                         ^^^^^^
490 |                     notification_type="info",
491 |                     target_users="admin",
    |

E501 Line too long (122 > 120)
   --> prontuarios\tasks.py:497:121
    |
496 |         logger.info(
497 |             f"Verificação de atendimentos pendentes concluída. {clientes_inativos.count()} clientes inativos encontrados."
    |                                                                                                                         ^^
498 |         )
499 |         return clientes_inativos.count()
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:513:9
    |
511 |     """
512 |     try:
513 |         from core.models import Tenant
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
514 |
515 |         tenant = Tenant.objects.get(id=tenant_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:543:9
    |
541 |     """
542 |     try:
543 |         from .utils import redimensionar_imagem
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
544 |
545 |         fotos = FotoEvolucao.objects.filter(id__in=foto_ids)
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:574:9
    |
572 |     """Exporta dados clínicos básicos de um cliente (substitui exportar_dados_paciente)."""
573 |     try:
574 |         from clientes.models import Cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
575 |
576 |         from .utils import gerar_relatorio_cliente
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:576:9
    |
574 |         from clientes.models import Cliente
575 |
576 |         from .utils import gerar_relatorio_cliente
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
577 |
578 |         cliente = Cliente.objects.get(id=cliente_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\tasks.py:645:5
    |
643 |     if not getattr(settings, "PRONTUARIOS_AUTO_BACKUP_ENABLED", False):
644 |         return 0
645 |     from core.models import Tenant
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
646 |
647 |     total = 0
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> prontuarios\utils.py:99:20
    |
 98 |     # Verifica se tem 11 dígitos
 99 |     if len(cpf) != 11:
    |                    ^^
100 |         return False
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> prontuarios\utils.py:109:28
    |
107 |     soma = sum(int(cpf[i]) * (10 - i) for i in range(9))
108 |     resto = soma % 11
109 |     digito1 = 0 if resto < 2 else 11 - resto
    |                            ^
110 |
111 |     # Verifica o primeiro dígito
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> prontuarios\utils.py:118:28
    |
116 |     soma = sum(int(cpf[i]) * (11 - i) for i in range(10))
117 |     resto = soma % 11
118 |     digito2 = 0 if resto < 2 else 11 - resto
    |                            ^
119 |
120 |     # Verifica o segundo dígito
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> prontuarios\utils.py:140:20
    |
138 |     cpf = "".join(filter(str.isdigit, cpf))
139 |
140 |     if len(cpf) == 11:
    |                    ^^
141 |         return f"{cpf[:3]}.{cpf[3:6]}.{cpf[6:9]}-{cpf[9:]}"
    |

PLR2004 Magic value used in comparison, consider replacing `11` with a constant variable
   --> prontuarios\utils.py:162:25
    |
160 |     telefone = "".join(filter(str.isdigit, telefone))
161 |
162 |     if len(telefone) == 11:  # Celular com DDD
    |                         ^^
163 |         return f"({telefone[:2]}) {telefone[2:7]}-{telefone[7:]}"
164 |     elif len(telefone) == 10:  # Fixo com DDD
    |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   --> prontuarios\utils.py:164:27
    |
162 |     if len(telefone) == 11:  # Celular com DDD
163 |         return f"({telefone[:2]}) {telefone[2:7]}-{telefone[7:]}"
164 |     elif len(telefone) == 10:  # Fixo com DDD
    |                           ^^
165 |         return f"({telefone[:2]}) {telefone[2:6]}-{telefone[6:]}"
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\utils.py:190:5
    |
188 | def gerar_relatorio_cliente(cliente):
189 |     """Relatório simplificado para Cliente (substitui gerar_relatorio_paciente)."""
190 |     from .models import Atendimento, FotoEvolucao
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
191 |
192 |     atendimentos = Atendimento.objects.filter(cliente=cliente).order_by("-data_atendimento")
    |

E501 Line too long (146 > 120)
  --> prontuarios\views.py:43:121
   |
41 | … 'servicos')
42 | …
43 | …ibuteError caso usuário não tenha atributo tenant ou não selecionou empresa."""
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
44 | …
45 | …
   |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\views.py:108:9
    |
106 |     def get_context_data(self, **kwargs):
107 |         ctx = super().get_context_data(**kwargs)
108 |         from django.urls import reverse
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
109 |
110 |         ctx["cancel_url"] = reverse("prontuarios:atendimentos_list")
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\views.py:131:9
    |
129 |     def get_context_data(self, **kwargs):
130 |         ctx = super().get_context_data(**kwargs)
131 |         from django.urls import reverse
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
132 |
133 |         ctx["cancel_url"] = reverse("prontuarios:atendimentos_list")
    |

PLC0415 `import` should be at the top-level of a file
   --> prontuarios\views.py:189:13
    |
187 |             qs = qs.filter(data_foto__date__lte=p.get("data_fim"))
188 |         if p.get("q"):
189 |             from django.db.models import Q
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
190 |
191 |             qtxt = p.get("q")
    |

E402 Module level import not at top of file
 --> run_audit_locmem_check.py:8:1
  |
6 | os.environ.setdefault("DJANGO_SETTINGS_MODULE", "pandora_erp.settings")
7 | django.setup()
8 | from django.core.cache import cache
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
9 | from django.core.management import call_command
  |

E402 Module level import not at top of file
  --> run_audit_locmem_check.py:9:1
   |
 7 | django.setup()
 8 | from django.core.cache import cache
 9 | from django.core.management import call_command
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |
11 | cache.set("module_deny_count:clientes", 7, 60)
   |

E402 Module level import not at top of file
 --> script_check_permdata.py:7:1
  |
6 | django.setup()
7 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 | from django.template.loader import get_template
9 | from django.test import RequestFactory
  |

E402 Module level import not at top of file
 --> script_check_permdata.py:8:1
  |
6 | django.setup()
7 | from django.contrib.auth import get_user_model
8 | from django.template.loader import get_template
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
9 | from django.test import RequestFactory
  |

E402 Module level import not at top of file
  --> script_check_permdata.py:9:1
   |
 7 | from django.contrib.auth import get_user_model
 8 | from django.template.loader import get_template
 9 | from django.test import RequestFactory
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |
11 | from core.forms import RoleForm
   |

E402 Module level import not at top of file
  --> script_check_permdata.py:11:1
   |
 9 | from django.test import RequestFactory
10 |
11 | from core.forms import RoleForm
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 | rf = RequestFactory()
   |

E402 Module level import not at top of file
  --> script_check_permdata.py:21:1
   |
19 | ctx = {"form": form, "object": None, "model_name": "Cargo"}
20 | html = get_template("core/role_form.html").render(ctx, request=req)
21 | import re
   | ^^^^^^^^^
22 |
23 | m = re.search(r'<script id="permData".*?>([\s\S]*?)</script>', html)
   |

SIM115 Use a context manager for opening files
  --> script_check_permdata.py:33:5
   |
31 |     print("Ends with ] ?", snippet.rstrip().endswith("]"))
32 | else:
33 |     open("dump_role_form.html", "w", encoding="utf-8").write(html)
   |     ^^^^
34 |     print("Full HTML dumped to dump_role_form.html")
   |

B007 Loop control variable `filenames` not used within loop body
  --> scripts\dev\clean_caches.py:16:24
   |
14 | removed = []
15 |
16 | for dirpath, dirnames, filenames in os.walk(ROOT):
   |                        ^^^^^^^^^
17 |     if "__pycache__" in dirnames:
18 |         p = Path(dirpath) / "__pycache__"
   |
help: Rename unused `filenames` to `_filenames`

B007 Loop control variable `dirnames` not used within loop body
  --> scripts\dev\clean_caches.py:33:14
   |
32 | pyc_count = 0
33 | for dirpath, dirnames, filenames in os.walk(ROOT):
   |              ^^^^^^^^
34 |     for f in filenames:
35 |         if f.endswith(".pyc"):
   |
help: Rename unused `dirnames` to `_dirnames`

PLC0415 `import` should be at the top-level of a file
  --> seed_wizard_docs.py:10:5
   |
 8 | def main():
 9 |     django.setup()
10 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     from documentos.models import CategoriaDocumento, RegraDocumento, TipoDocumento
   |

PLC0415 `import` should be at the top-level of a file
  --> seed_wizard_docs.py:11:5
   |
 9 |     django.setup()
10 |     from core.models import Tenant
11 |     from documentos.models import CategoriaDocumento, RegraDocumento, TipoDocumento
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 |     cat, _ = CategoriaDocumento.objects.get_or_create(nome="Geral", defaults={"ordem": 1})
   |

PLR2004 Magic value used in comparison, consider replacing `75` with a constant variable
  --> servicos\admin.py:67:90
   |
66 |     def comentario_resumido(self, obj):
67 |         return (obj.comentario[:75] + "...") if obj.comentario and len(obj.comentario) > 75 else obj.comentario
   |                                                                                          ^^
68 |
69 |     comentario_resumido.short_description = _("Comentário")
   |

PLR2004 Magic value used in comparison, consider replacing `75` with a constant variable
   --> servicos\admin.py:155:87
    |
154 |     def descricao_resumida(self, obj):
155 |         return (obj.descricao[:75] + "...") if obj.descricao and len(obj.descricao) > 75 else obj.descricao
    |                                                                                       ^^
156 |
157 |     descricao_resumida.short_description = _("Descrição")
    |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
   --> servicos\admin.py:354:90
    |
353 |     def comentario_resumido_list(self, obj):
354 |         return (obj.comentario[:50] + "...") if obj.comentario and len(obj.comentario) > 50 else obj.comentario
    |                                                                                          ^^
355 |
356 |     comentario_resumido_list.short_description = _("Comentário")
    |

E501 Line too long (140 > 120)
   --> servicos\forms.py:118:121
    |
116 | …rviços Ofertados'."),
117 | …
118 | …e venda. Para 'Serviços Contratados', este é apenas um valor de referência."
    |                                                          ^^^^^^^^^^^^^^^^^^^^
119 | …
120 | …vel apenas para 'Serviços Ofertados'."),
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\forms.py:191:9
    |
189 |         value = value.strip()
190 |         # Normaliza para HH:MM:SS
191 |         import re
    |         ^^^^^^^^^
192 |
193 |         if re.fullmatch(r"\d{1,2}:\d{2}$", value):
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\forms.py:198:9
    |
196 |             raise forms.ValidationError(_("Formato inválido. Use HH:MM ou HH:MM:SS."))
197 |         # Converte para timedelta
198 |         from datetime import timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
199 |
200 |         h, m, s = map(int, value.split(":"))
    |

E501 Line too long (136 > 120)
   --> servicos\models.py:182:121
    |
180 | …
181 | …
182 | …venda. Para 'Serviços Contratados', este é apenas um valor de referência."
    |                                                            ^^^^^^^^^^^^^^^^
183 | …
184 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\views.py:149:9
    |
148 |         # Estatísticas recentes (últimos 30 dias)
149 |         from datetime import datetime, timedelta
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
150 |
151 |         thirty_days_ago = datetime.now() - timedelta(days=30)
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\views.py:200:9
    |
198 |             return self.form_invalid(form)
199 |         # Salva serviço e perfil dentro de transação para consistência
200 |         from django.db import transaction
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
201 |
202 |         with transaction.atomic():
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> servicos\views.py:518:9
    |
516 |         return FileResponse(documento.arquivo.open("rb"), as_attachment=True, filename=documento.filename)
517 |     except FileNotFoundError:
518 |         raise Http404(_("Arquivo do documento não encontrado no servidor."))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
519 |     except Exception:
520 |         messages.error(request, _("Ocorreu um erro ao processar o download do arquivo."))
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\views.py:675:5
    |
673 |             return Decimal(default)
674 |
675 |     from decimal import Decimal
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
676 |
677 |     kwargs = dict(
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\views.py:692:13
    |
690 |     if und_id:
691 |         try:
692 |             from cadastros_gerais.models import UnidadeMedida
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
693 |
694 |             kwargs["unidade_medida"] = UnidadeMedida.objects.get(pk=und_id)
    |

PLC0415 `import` should be at the top-level of a file
   --> servicos\views.py:708:9
    |
706 | def unidades_medida_options(request):
707 |     try:
708 |         from cadastros_gerais.models import UnidadeMedida
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
709 |     except Exception:
710 |         return JsonResponse({"results": []})
    |

E501 Line too long (153 > 120)
  --> shared\exceptions.py:14:121
   |
12 | …
13 | …
14 | …eposito_id}: solicitada={quantidade_solicitada} disponivel={quantidade_disponivel}"
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | …
   |

PLR0911 Too many return statements (7 > 6)
  --> shared\permissions_servicos.py:13:5
   |
13 | def can_schedule_clinical_service(user: User, servico: Servico) -> bool:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
14 |     """Retorna True se o usuário pode agendar o serviço clínico informado.
   |

SIM102 Use a single `if` statement instead of nested `if` statements
  --> shared\permissions_servicos.py:41:5
   |
40 |       # Cliente portal: permitir apenas se disponível online
41 | /     if servico.disponivel_online:
42 | |         # Heurística simples: não staff, não secretaria e possui grupo com 'cliente' OU nenhum grupo especial
43 | |         if u.groups.filter(name__icontains="cliente").exists() or u.groups.count() == 0:
   | |________________________________________________________________________________________^
44 |               return True
   |
help: Combine `if` statements using `and`

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  --> shared\portal\decorators.py:19:13
   |
17 |             acesso = AcessoFornecedor.objects.select_related("fornecedor").get(usuario=request.user, ativo=True)
18 |         except AcessoFornecedor.DoesNotExist:
19 |             raise Http404("Acesso fornecedor não encontrado")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |         request.acesso_fornecedor = acesso
21 |         return func(request, *args, **kwargs)
   |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> shared\services\permission_resolver.py:103:13
    |
101 |           self._global_era_key = f"{self.cache_prefix}:global_era"
102 |           if cache.get(self._global_era_key) is None:
103 | /             try:
104 | |                 cache.add(self._global_era_key, 1, self.CACHE_TTL)
105 | |             except Exception:  # pragma: no cover
106 | |                 pass
    | |____________________^
107 |           # Hash do action map (incluído na chave para invalidar mudanças estruturais)
108 |           self._action_map_hash_cache: str | None = None
    |
help: Replace with `contextlib.suppress(Exception)`

PLR2004 Magic value used in comparison, consider replacing `60` with a constant variable
   --> shared\services\permission_resolver.py:161:79
    |
159 |         Recalcula a cada 60s para evitar custo em hot path (mesmo sendo baixo)."""
160 |         now = time.time()
161 |         if self._action_map_hash_cache and (now - self._action_map_hash_ts) < 60:
    |                                                                               ^^
162 |             return self._action_map_hash_cache
163 |         amap = self._get_action_map()
    |

PLR0911 Too many return statements (8 > 6)
   --> shared\services\permission_resolver.py:196:9
    |
194 |         return base
195 |
196 |     def resolve(
    |         ^^^^^^^
197 |         self, user, tenant, action: str, resource: str = None, context: dict = None, _force_trace: bool = False
198 |     ) -> tuple[bool, str]:
    |

PLR0912 Too many branches (47 > 12)
   --> shared\services\permission_resolver.py:196:9
    |
194 |         return base
195 |
196 |     def resolve(
    |         ^^^^^^^
197 |         self, user, tenant, action: str, resource: str = None, context: dict = None, _force_trace: bool = False
198 |     ) -> tuple[bool, str]:
    |

PLR0915 Too many statements (125 > 50)
   --> shared\services\permission_resolver.py:196:9
    |
194 |         return base
195 |
196 |     def resolve(
    |         ^^^^^^^
197 |         self, user, tenant, action: str, resource: str = None, context: dict = None, _force_trace: bool = False
198 |     ) -> tuple[bool, str]:
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> shared\services\permission_resolver.py:252:21
    |
250 |                   # Registrar métrica de TTL quando disponível
251 |                   if _METRICS_ENABLED and ttl_left is not None:
252 | /                     try:
253 | |                         self._m_cache_ttl.observe(ttl_left)  # type: ignore
254 | |                     except Exception:  # pragma: no cover
255 | |                         pass
    | |____________________________^
256 |                   if ttl_left is not None:
257 |                       trace_steps.append(f"cache_hit~ttl={ttl_left:.1f}s")
    |
help: Replace with `contextlib.suppress(Exception)`

E501 Line too long (134 > 120)
   --> shared\services\permission_resolver.py:271:121
    |
269 |                 dt = (time.perf_counter() - t_start) * 1000
270 |                 logger.debug(
271 |                     f"PERF_PERMISSION_RESOLVER warm user={user.id} tenant={tenant.id} action={action} resource={resource} ms={dt:.3f}"
    |                                                                                                                         ^^^^^^^^^^^^^^
272 |                 )
273 |             return self._augment_trace(cached_result, trace_steps, source="cache")
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> shared\services\permission_resolver.py:275:13
    |
273 |               return self._augment_trace(cached_result, trace_steps, source="cache")
274 |           elif _METRICS_ENABLED:
275 | /             try:
276 | |                 self._m_cache_misses.inc()  # type: ignore
277 | |             except Exception:  # pragma: no cover
278 | |                 pass
    | |____________________^
279 |
280 |           try:
    |
help: Replace with `contextlib.suppress(Exception)`

SIM102 Use a single `if` statement instead of nested `if` statements
   --> shared\services\permission_resolver.py:358:13
    |
356 |               return augmented
357 |           finally:
358 | /             if perf_enabled and t_start is not None:
359 | |                 if t_start is not None:
    | |_______________________________________^
360 |                       dt = (time.perf_counter() - t_start) * 1000
361 |                       logger.debug(
    |
help: Combine `if` statements using `and`

E501 Line too long (174 > 120)
   --> shared\services\permission_resolver.py:362:121
    |
360 | …
361 | …
362 | … None)} tenant={getattr(tenant, 'id', None)} action={action} resource={resource} ms={dt:.3f}"
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
363 | …
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:381:13
    |
379 |         # Verificar se usuário está no tenant
380 |         try:
381 |             from core.models import TenantUser
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
382 |
383 |             TenantUser.objects.get(user=user, tenant=tenant)
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:392:13
    |
390 |         # Verificar bloqueios específicos de fornecedor
391 |         try:
392 |             from portal_fornecedor.models import AcessoFornecedor
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
393 |
394 |             acesso = AcessoFornecedor.objects.get(usuario=user, fornecedor__tenant=tenant)
    |

PLR0912 Too many branches (15 > 12)
   --> shared\services\permission_resolver.py:402:9
    |
400 |         return True, "Conta ativa"
401 |
402 |     def _check_permissoes_personalizadas(self, user, tenant, action, resource: str | None = None) -> bool | None:
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
403 |         """Avalia permissões personalizadas com precedência:
404 |         1. Scoped + recurso
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:411:13
    |
409 |         """
410 |         try:
411 |             from django.db.models import Q
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
412 |             from django.utils import timezone
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:412:13
    |
410 |         try:
411 |             from django.db.models import Q
412 |             from django.utils import timezone
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
413 |
414 |             from user_management.models import PermissaoPersonalizada
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:414:13
    |
412 |             from django.utils import timezone
413 |
414 |             from user_management.models import PermissaoPersonalizada
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
415 |
416 |             now = timezone.now()
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:465:13
    |
463 |         """Verifica roles do tenant."""
464 |         try:
465 |             from core.models import TenantUser
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
466 |
467 |             tenant_user = TenantUser.objects.get(user=user, tenant=tenant)
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:495:13
    |
493 |         # Fornecedor
494 |         try:
495 |             from portal_fornecedor.models import AcessoFornecedor
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
496 |
497 |             acesso = AcessoFornecedor.objects.get(usuario=user, fornecedor__tenant=tenant, ativo=True)
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:515:13
    |
513 |         # ContaCliente real: permissões implícitas de portal cliente
514 |         try:
515 |             from portal_cliente.models import ContaCliente
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
516 |
517 |             conta = ContaCliente.objects.filter(usuario=user, cliente__tenant=tenant, ativo=True).first()
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:573:17
    |
571 |                 cache.set(version_key, cur + 1, self.CACHE_TTL)
572 |             elif user_id:
573 |                 from core.models import TenantUser
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
574 |
575 |                 for tid in TenantUser.objects.filter(user_id=user_id).values_list("tenant_id", flat=True):
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:580:17
    |
578 |                     cache.set(version_key, cur + 1, self.CACHE_TTL)
579 |             elif tenant_id:
580 |                 from core.models import TenantUser
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
581 |
582 |                 for uid in TenantUser.objects.filter(tenant_id=tenant_id).values_list("user_id", flat=True):
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:701:13
    |
699 |     def decorator(view_func):
700 |         def _wrapped_view(request, *args, **kwargs):
701 |             from django.http import HttpResponseForbidden
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
702 |
703 |             from core.utils import get_current_tenant
    |

PLC0415 `import` should be at the top-level of a file
   --> shared\services\permission_resolver.py:703:13
    |
701 |             from django.http import HttpResponseForbidden
702 |
703 |             from core.utils import get_current_tenant
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
704 |
705 |             tenant = get_current_tenant(request)
    |

PLC0415 `import` should be at the top-level of a file
 --> shared\services\ui_permissions.py:3:9
  |
1 | def _get_role(user, tenant):
2 |     try:
3 |         from core.models import TenantUser
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 |
5 |         tu = TenantUser.objects.select_related("role").get(user=user, tenant=tenant)
  |

PLC0415 `import` should be at the top-level of a file
  --> shared\services\ui_permissions.py:23:9
   |
21 | def _resolver_allows(user, tenant, action: str, resource: str | None = None) -> bool:
22 |     try:
23 |         from .permission_resolver import has_permission as resolver_has_permission
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |
25 |         return bool(resolver_has_permission(user, tenant, action, resource))
   |

PLR0913 Too many arguments in function definition (6 > 5)
  --> shared\services\ui_permissions.py:30:5
   |
30 | def build_ui_permissions(
   |     ^^^^^^^^^^^^^^^^^^^^
31 |     user,
32 |     tenant,
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\services\ui_permissions.py:61:13
   |
59 |     try:
60 |         if tenant and not getattr(user, "is_superuser", False):
61 |             from core.models import TenantUser
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
62 |
63 |             if TenantUser.objects.filter(user=user, tenant=tenant, is_tenant_admin=True).exists():
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_additional.py:32:5
   |
30 | def test_permission_personalizada_resource_precedence(settings):
31 |     settings.PERMISSION_RESOLVER_TRACE = True
32 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
33 |
34 |     user = User.objects.create_user("u_permres", password="x")
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_additional.py:79:9
   |
77 |     # Criar acesso fornecedor se modelo existir
78 |     try:
79 |         from portal_fornecedor.models import AcessoFornecedor, Fornecedor
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
80 |
81 |         fornecedor = Fornecedor.objects.create(nome="FornecedorX", tenant=tenant)
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_cache_version.py:15:5
   |
13 | def test_permission_resolver_cache_version_increments_on_permission_change(settings):
14 |     """Garante que invalidate_cache incrementa versão (mudança de permissões personalizadas)."""
15 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 |     cache.clear()
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_decision_api.py:38:5
   |
36 | def test_resolve_decision_source_personalizada(settings):
37 |     settings.PERMISSION_RESOLVER_TRACE = True
38 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
39 |
40 |     user = User.objects.create_user("u_decision3", password="x")
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_performance.py:21:5
   |
19 |     """
20 |     settings.FEATURE_UNIFIED_ACCESS = True
21 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 |     from shared.services.permission_resolver import permission_resolver
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_performance.py:22:5
   |
20 |     settings.FEATURE_UNIFIED_ACCESS = True
21 |     from core.models import Tenant, TenantUser
22 |     from shared.services.permission_resolver import permission_resolver
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 |
24 |     tenant = Tenant.objects.create(
   |

PLR2004 Magic value used in comparison, consider replacing `0.02` with a constant variable
  --> shared\tests\test_permission_resolver_performance.py:51:23
   |
50 |     # Thresholds: generous (0.02s cold, 0.003s warm) to avoid flaky failures on slower machines
51 |     assert avg_cold < 0.02, f"Cold average too high: {avg_cold:.5f}s"
   |                       ^^^^
52 |     assert avg_warm < 0.003, f"Warm average too high: {avg_warm:.5f}s"
   |

PLR2004 Magic value used in comparison, consider replacing `0.003` with a constant variable
  --> shared\tests\test_permission_resolver_performance.py:52:23
   |
50 |     # Thresholds: generous (0.02s cold, 0.003s warm) to avoid flaky failures on slower machines
51 |     assert avg_cold < 0.02, f"Cold average too high: {avg_cold:.5f}s"
52 |     assert avg_warm < 0.003, f"Warm average too high: {avg_warm:.5f}s"
   |                       ^^^^^
53 |
54 |     # Expor métricas para logs (pytest -vv mostra)
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_performance.py:64:5
   |
62 | )
63 | def test_menu_render_baseline(settings, django_template_rendered_signal):
64 |     from django.template import Context, Template
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
65 |
66 |     from core.models import Tenant, TenantUser
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_performance.py:66:5
   |
64 |     from django.template import Context, Template
65 |
66 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
67 |
68 |     tenant = Tenant.objects.create(
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_performance.py:88:5
   |
87 |     iterations = 100
88 |     import time as _time
   |     ^^^^^^^^^^^^^^^^^^^^
89 |
90 |     t0 = _time.perf_counter()
   |

PLR2004 Magic value used in comparison, consider replacing `0.008` with a constant variable
  --> shared\tests\test_permission_resolver_performance.py:96:18
   |
94 |     avg = total / iterations
95 |     # Threshold generoso: 8ms por render
96 |     assert avg < 0.008, f"Menu render average too high: {avg:.5f}s"
   |                  ^^^^^
97 |     print(f"PERF menu_render avg={avg:.6f}s total={total:.6f}s iterations={iterations}")
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_permission_resolver_precedence_variants.py:80:5
   |
78 | def test_cache_invalidation_on_personal_permission_change():
79 |     # Limpa cache para evitar interferência de chaves antigas (IDs podem ser reutilizados após flush do DB)
80 |     from django.core.cache import cache
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
81 |
82 |     cache.clear()
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_shared_permission_resolver.py:41:5
   |
39 |     cache.clear()
40 |     tenant = Tenant.objects.create(name="Tperm3", subdomain="tperm3")
41 |     import uuid
   |     ^^^^^^^^^^^
42 |
43 |     uname = f"user_cache_{uuid.uuid4().hex[:6]}"
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_shared_permission_resolver.py:45:5
   |
43 |     uname = f"user_cache_{uuid.uuid4().hex[:6]}"
44 |     u = User.objects.create_user(uname, password="x")
45 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
46 |
47 |     PermissaoPersonalizada.objects.filter(user=u).delete()
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_shared_permission_resolver.py:57:5
   |
55 |     assert allowed2 is False
56 |     # Conceder permissão personalizada allow: design atual aplica imediatamente (invalidação reativa via signal)
57 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
58 |
59 |     PermissaoPersonalizada.objects.create(user=u, modulo="cotacao", acao="view", concedida=True, scope_tenant=tenant)
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_shared_permission_resolver.py:67:5
   |
65 | @pytest.mark.permission
66 | def test_permission_resolver_resource_and_expiration():
67 |     from django.utils import timezone
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |
69 |     from user_management.models import PermissaoPersonalizada
   |

PLC0415 `import` should be at the top-level of a file
  --> shared\tests\test_shared_permission_resolver.py:69:5
   |
67 |     from django.utils import timezone
68 |
69 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
70 |
71 |     cache.clear()
   |

PLC0415 `import` should be at the top-level of a file
   --> shared\tests\test_shared_permission_resolver.py:104:5
    |
102 | @pytest.mark.permission
103 | def test_permission_resolver_precedence_deny_over_allow():
104 |     from user_management.models import PermissaoPersonalizada
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
105 |
106 |     cache.clear()
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\agenda\test_agenda_evento_tipo_cleanup.py:15:5
   |
13 |     Evento.objects.create(tenant=tenant, titulo="Legacy 2", data_inicio=timezone.now(), tipo_evento="procedimento")
14 |
15 |     from django.core import management
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 |     out = django_capture_stdout()
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\agenda\test_agenda_evento_tipo_cleanup.py:24:68
   |
22 |     # validar mudança
23 |     assert Evento.objects.filter(tipo_evento="procedimento").count() == 0
24 |     assert Evento.objects.filter(tipo_evento="servico").count() == 2
   |                                                                    ^
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\agendamentos\test_api_clinico_permissions.py:60:5
   |
58 |     prof.is_staff = True
59 |     prof.save()
60 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
61 |
62 |     TenantUser.objects.create(tenant=tenant, user=prof)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\agendamentos\test_api_clinico_permissions.py:68:32
   |
66 |     url = reverse("agendamentos:slot-reservar", kwargs={"pk": slot.id})
67 |     resp = client.post(url, {"cliente_id": _criar_cliente(tenant).id, "servico_id": serv.id})
68 |     assert resp.status_code == 200, resp.content
   |                                ^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\agendamentos\test_api_clinico_permissions.py:91:5
   |
89 |     prof.is_staff = True
90 |     prof.save()
91 |     from core.models import TenantUser as _TU
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
92 |
93 |     _TU.objects.create(tenant=tenant, user=prof)
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\agendamentos\test_api_clinico_permissions.py:98:5
    |
 96 |     cliente = _criar_cliente(tenant)
 97 |     AcessoCliente.objects.create(cliente=cliente, usuario=cli_user)
 98 |     from core.models import TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 99 |
100 |     TenantUser.objects.create(tenant=tenant, user=cli_user)
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> tests\agendamentos\test_api_clinico_permissions.py:106:32
    |
104 |     url = reverse("agendamentos:cliente-slot-reservar", kwargs={"pk": slot.id})
105 |     resp = client.post(url, {"servico_id": serv.id})
106 |     assert resp.status_code == 200, resp.content
    |                                ^^^
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\agendamentos\test_api_clinico_permissions.py:129:5
    |
127 |     prof.is_staff = True
128 |     prof.save()
129 |     from core.models import TenantUser as _TU3
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
130 |
131 |     _TU3.objects.create(tenant=tenant, user=prof)
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\agendamentos\test_api_clinico_permissions.py:136:5
    |
134 |     cliente = _criar_cliente(tenant)
135 |     AcessoCliente.objects.create(cliente=cliente, usuario=cli_user)
136 |     from core.models import TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
137 |
138 |     TenantUser.objects.create(tenant=tenant, user=cli_user)
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\agendamentos\test_api_clinico_permissions.py:144:32
    |
142 |     url = reverse("agendamentos:cliente-slot-reservar", kwargs={"pk": slot.id})
143 |     resp = client.post(url, {"servico_id": serv.id})
144 |     assert resp.status_code == 403
    |                                ^^^
145 |     assert resp.json()["detail"] == str(CLINICAL_SCHEDULING_DENIED_MESSAGE)
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\agendamentos\test_api_clinico_permissions.py:167:5
    |
165 |     prof.is_staff = True
166 |     prof.save()
167 |     from core.models import TenantUser as _TU4
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
168 |
169 |     _TU4.objects.create(tenant=tenant, user=prof)
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\agendamentos\test_api_clinico_permissions.py:175:32
    |
173 |     url = reverse("agendamentos:slot-reservar", kwargs={"pk": slot.id})
174 |     resp = client.post(url, {"cliente_id": _criar_cliente(tenant).id, "servico_id": serv.id})
175 |     assert resp.status_code == 403
    |                                ^^^
176 |     assert resp.json()["detail"] == str(CLINICAL_SCHEDULING_DENIED_MESSAGE)
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\agendamentos\test_api_clinico_permissions.py:183:5
    |
181 | def _criar_cliente(tenant):
182 |     cliente = Cliente.objects.create(tenant=tenant, tipo="PF", status="active")
183 |     from clientes.models import PessoaFisica
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
184 |
185 |     PessoaFisica.objects.create(cliente=cliente, nome_completo="Nome Teste", cpf="000.000.000-00")
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\core\authorization\test_authorization.py:130:36
    |
128 |         session.save()
129 |         resp = client.get("/clientes/")
130 |         assert resp.status_code == 403
    |                                    ^^^
131 |         assert resp["X-Deny-Reason"] == REASON_PORTAL_DENY
132 |         assert resp["X-Deny-Module"] == "clientes"
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\core\authorization\test_authorization.py:149:32
    |
147 |         assert resp.status_code in (302, 403)
148 |         # Se 403 deve ter headers, se 302 deve apontar a dashboard
149 |         if resp.status_code == 403:
    |                                ^^^
150 |             assert resp["X-Deny-Module"] == "financeiro"
151 |         else:
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:12:5
   |
10 |     settings.FEATURE_UNIFIED_ACCESS = True
11 |     settings.FEATURE_ENFORCE_PERMISSION_RESOLVER_STRICT = True
12 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 |     tenant = Tenant.objects.create(nome="TA", slug="ta", enabled_modules={"modules": ["clientes", "financeiro"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:19:5
   |
18 |     # Monkeypatch resolver para negar VIEW_CLIENTES
19 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 |     class DenyClientesResolver:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:30:5
   |
29 |     # Render menu
30 |     from django.template import Context, Template
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
31 |
32 |     tpl = Template("{% load menu_tags %}{% render_sidebar_menu %}")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:52:5
   |
50 |     settings.FEATURE_ENFORCE_PERMISSION_RESOLVER_STRICT = True
51 |     settings.FEATURE_LOG_MODULE_DENIALS = True
52 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
53 |
54 |     tenant = Tenant.objects.create(nome="TB", slug="tb", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:64:5
   |
63 |     # Resolver nega VIEW_CLIENTES
64 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
65 |
66 |     class DenyAll:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_logging.py:84:5
   |
82 |     settings.FEATURE_UNIFIED_ACCESS = True
83 |     settings.PORTAL_ALLOWED_MODULES = ["documentos"]  # clientes fora
84 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
85 |
86 |     tenant = Tenant.objects.create(nome="TC", slug="tc", enabled_modules={"modules": ["clientes", "documentos"]})
   |

E501 Line too long (122 > 120)
   --> tests\core\authorization\test_authorization_logging.py:105:121
    |
103 |     # Acesso permitido para whitelisted
104 |     client.get("/documentos/") if hasattr(tenant, "id") else None
105 |     # Não forçamos assert de sucesso (rota pode exigir view), apenas garantir que não logou deny adicional para documentos
    |                                                                                                                         ^^
106 |     deny_docs = AuditLog.objects.filter(
107 |         change_message__startswith="[MODULE_DENY]", change_message__contains="documentos"
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_strict.py:16:5
   |
14 |     # Marcar como portal via atributo dinâmico e grupo para garantir detecção
15 |     user.user_type = "PORTAL"
16 |     from django.contrib.auth.models import Group
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 |     grp, _ = Group.objects.get_or_create(name=getattr(settings, "PORTAL_USER_GROUP_NAME", "PortalUser"))
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_strict.py:21:5
   |
19 |     user.groups.add(grp)
20 |     user.save()
21 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 |
23 |     tenant = Tenant.objects.create(nome="T1", slug="t1", enabled_modules='["clientes","documentos"]')
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_strict.py:35:5
   |
33 |     settings.FEATURE_ENFORCE_PERMISSION_RESOLVER_STRICT = True
34 |     user = User.objects.create_user("interno", password="x")
35 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |
37 |     tenant = Tenant.objects.create(nome="T2", slug="t2", enabled_modules='["clientes"]')
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_strict.py:39:5
   |
37 |     tenant = Tenant.objects.create(nome="T2", slug="t2", enabled_modules='["clientes"]')
38 |     # Monkeypatch permission_resolver to always deny
39 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
40 |
41 |     class DummyResolver:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_authorization_strict.py:55:5
   |
53 |     settings.FEATURE_ENFORCE_PERMISSION_RESOLVER_STRICT = True
54 |     user = User.objects.create_user("interno2", password="x")
55 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
56 |
57 |     tenant = Tenant.objects.create(nome="T3", slug="t3", enabled_modules='["financeiro"]')
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_middleware_unmapped_path.py:15:5
   |
13 |     settings.FEATURE_LOG_MODULE_DENIALS = True
14 |
15 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 |     tenant = Tenant.objects.create(nome="TU", slug="tu", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_403_headers.py:15:5
   |
13 |     settings.LOG_MODULE_DENY_DEDUP_SECONDS = 5
14 |
15 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 |     tenant = Tenant.objects.create(nome="H1", slug="h1", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_403_headers.py:26:5
   |
25 |     # Resolver nega explicitamente
26 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 |     class DenyAll:
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_module_deny_403_headers.py:35:32
   |
34 |     resp = client.get("/clientes/")
35 |     assert resp.status_code == 403
   |                                ^^^
36 |     assert resp.headers.get("X-Deny-Reason") in {"PERMISSION_RESOLVER_DENY", "MODULE_DISABLED_FOR_TENANT"}
37 |     assert resp.headers.get("X-Deny-Module") == "clientes"
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_403_headers.py:53:5
   |
51 |     settings.LOG_MODULE_DENY_DEDUP_SECONDS = 60
52 |
53 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
54 |
55 |     tenant = Tenant.objects.create(nome="H2", slug="h2", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_403_headers.py:63:5
   |
61 |     s.save()
62 |
63 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
64 |
65 |     class DenyAll:
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_module_deny_403_headers.py:73:33
   |
71 |     # Primeira requisição
72 |     resp1 = client.get("/clientes/")
73 |     assert resp1.status_code == 403
   |                                 ^^^
74 |     # Segunda requisição (mesmo usuário/módulo/motivo) não deve criar log novo
75 |     resp2 = client.get("/clientes/")
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_module_deny_403_headers.py:76:33
   |
74 |     # Segunda requisição (mesmo usuário/módulo/motivo) não deve criar log novo
75 |     resp2 = client.get("/clientes/")
76 |     assert resp2.status_code == 403
   |                                 ^^^
77 |     logs = AuditLog.objects.filter(change_message__startswith="[MODULE_DENY]", change_message__contains="clientes")
78 |     assert logs.count() == 1
   |

E501 Line too long (143 > 120)
  --> tests\core\authorization\test_module_deny_metrics_coexist.py:10:121
   |
 8 | …onkeypatch):
 9 | …dedup de logs impede novas entradas.
10 | …métrica só incrementa primeira (atual impl), segunda não deve sobrescrever."""
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^
11 | …
12 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_metrics_coexist.py:17:5
   |
15 |     settings.LOG_MODULE_DENY_DEDUP_SECONDS = 30
16 |
17 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 |     tenant = Tenant.objects.create(nome="TM", slug="tm", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_metrics_coexist.py:27:5
   |
25 |     s.save()
26 |
27 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |
29 |     class DenyAll:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_module_deny_metrics_coexist.py:35:5
   |
33 |     monkeypatch.setattr(pr_mod, "permission_resolver", DenyAll())
34 |
35 |     from django.core.cache import cache
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |
37 |     metric_key = "module_deny_count:clientes:PERMISSION_RESOLVER_DENY"
   |

E501 Line too long (141 > 120)
  --> tests\core\authorization\test_module_deny_metrics_coexist.py:44:121
   |
42 | …
43 | …
44 | …entação atual incrementa antes do log, mas é controlada pelo cache de dedup?)
   |                                                          ^^^^^^^^^^^^^^^^^^^^^
45 | …ustez futura.
46 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_cache_inspect.py:10:5
   |
 8 | def test_permission_cache_inspect_requires_superuser(settings, client):
 9 |     settings.FEATURE_UNIFIED_ACCESS = True
10 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |     tenant = Tenant.objects.create(nome="CI", slug="ci", enabled_modules={"modules": ["clientes"]})
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_cache_inspect.py:20:32
   |
18 |     s.save()
19 |     resp = client.get("/core/api/permissions/cache/")
20 |     assert resp.status_code == 403
   |                                ^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_cache_inspect.py:26:5
   |
24 | def test_permission_cache_inspect_superuser_ok(settings, client):
25 |     settings.FEATURE_UNIFIED_ACCESS = True
26 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 |     tenant = Tenant.objects.create(nome="CJ", slug="cj", enabled_modules={"modules": ["clientes", "financeiro"]})
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\core\authorization\test_permission_cache_inspect.py:35:32
   |
33 |     s.save()
34 |     resp = client.get("/core/api/permissions/cache/")
35 |     assert resp.status_code == 200
   |                                ^^^
36 |     data = resp.json()
37 |     assert data["tenant_id"] == tenant.id
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_errors.py:18:5
   |
16 |     settings.FEATURE_LOG_MODULE_DENIALS = True
17 |
18 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |
20 |     tenant = Tenant.objects.create(nome="TE", slug="te", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_errors.py:28:5
   |
26 |     s.save()
27 |
28 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |
30 |     class Boom:
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_resolver_errors.py:38:36
   |
36 |     resp = client.get("/clientes/")
37 |     if strict_flag:
38 |         assert resp.status_code == 403
   |                                    ^^^
39 |         assert resp.headers.get("X-Deny-Reason") in {
40 |             "UNKNOWN_ERROR",
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_resolver_errors.py:46:36
   |
44 |         assert AuditLog.objects.filter(change_message__startswith="[MODULE_DENY]").count() == 1
45 |     else:
46 |         assert resp.status_code != 403
   |                                    ^^^
47 |         assert AuditLog.objects.filter(change_message__startswith="[MODULE_DENY]").count() == 0
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_extended.py:23:5
   |
21 |     settings.FEATURE_LOG_MODULE_DENIALS = True
22 |
23 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |
25 |     tenant = Tenant.objects.create(nome="T1", slug="t1", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_extended.py:33:5
   |
31 |     s.save()
32 |
33 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
34 |
35 |     class DenyAll:
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_resolver_extended.py:43:36
   |
41 |     resp = client.get("/clientes/")
42 |     if strict_flag:
43 |         assert resp.status_code == 403
   |                                    ^^^
44 |         assert resp.headers.get("X-Deny-Reason") == expect_403_reason
45 |         assert AuditLog.objects.filter(change_message__contains="[MODULE_DENY]").count() == 1
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_resolver_extended.py:48:36
   |
46 |     else:
47 |         # Sem strict deve permitir (status != 403)
48 |         assert resp.status_code != 403
   |                                    ^^^
49 |         assert resp.headers.get("X-Deny-Reason") is None
50 |         assert AuditLog.objects.filter(change_message__contains="[MODULE_DENY]").count() == 0
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_extended.py:61:5
   |
59 |     settings.PORTAL_ALLOWED_MODULES = ["clientes"]
60 |
61 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
62 |
63 |     tenant = Tenant.objects.create(nome="TP", slug="tp", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_extended.py:70:5
   |
68 |     s.save()
69 |
70 |     from shared.services import permission_resolver as pr_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
71 |
72 |     class DenyAll:
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\core\authorization\test_permission_resolver_extended.py:80:32
   |
78 |     resp = client.get("/clientes/")
79 |     # Deve permitir (não 403) porque whitelist bypassa resolver
80 |     assert resp.status_code != 403
   |                                ^^^
81 |     assert resp.headers.get("X-Deny-Reason") is None
   |

E501 Line too long (148 > 120)
  --> tests\core\authorization\test_permission_resolver_extended.py:86:121
   |
84 | …
85 | …client, monkeypatch):
86 | …02 final) mas ainda registrar log e NÃO incluir X-Deny-Reason no redirect final.
   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
87 | …
88 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\authorization\test_permission_resolver_extended.py:94:5
   |
92 |     settings.TESTING = True  # para headers de debug no redirect legado
93 |
94 |     from core.models import AuditLog, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
95 |
96 |     tenant = Tenant.objects.create(nome="T2", slug="t2", enabled_modules={"modules": ["clientes"]})
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\authorization\test_permission_resolver_extended.py:104:5
    |
102 |     s.save()
103 |
104 |     from shared.services import permission_resolver as pr_mod
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
105 |
106 |     class DenyAll:
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\authorization\test_permission_resolver_extended.py:128:5
    |
126 |     settings.LOG_MODULE_DENY_DEDUP_SECONDS = 0  # sem dedup para contar múltiplas
127 |
128 |     from core.models import Tenant, TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
129 |
130 |     tenant = Tenant.objects.create(nome="T3", slug="t3", enabled_modules={"modules": ["clientes"]})
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\authorization\test_permission_resolver_extended.py:138:5
    |
136 |     s.save()
137 |
138 |     from shared.services import permission_resolver as pr_mod
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
139 |
140 |     class DenyAll:
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\authorization\test_permission_resolver_extended.py:146:5
    |
144 |     monkeypatch.setattr(pr_mod, "permission_resolver", DenyAll())
145 |
146 |     from django.core.cache import cache
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
147 |
148 |     key = "module_deny_count:clientes:PERMISSION_RESOLVER_DENY"
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> tests\core\authorization\test_permission_resolver_extended.py:156:18
    |
154 |     v2 = cache.get(key)
155 |     # Sem dedup deve incrementar novamente
156 |     assert v2 == 2
    |                  ^
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\authorization\test_permission_resolver_extended.py:171:5
    |
169 |     settings.FEATURE_UNIFIED_ACCESS = True
170 |
171 |     from core.models import Tenant, TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
172 |
173 |     tenant = Tenant.objects.create(nome="TX", slug="tx", enabled_modules=enabled_modules_field)
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\core\authorization\test_permission_resolver_extended.py:183:36
    |
181 |     resp = client.get("/clientes/")
182 |     if expected:
183 |         assert resp.status_code != 403  # acesso permitido
    |                                    ^^^
184 |     # pode ser 403 (strict deny) ou redirect dependendo de flags; checar que não 200 direto se negado
185 |     elif resp.status_code == 403:
    |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
   --> tests\core\authorization\test_permission_resolver_extended.py:185:30
    |
183 |         assert resp.status_code != 403  # acesso permitido
184 |     # pode ser 403 (strict deny) ou redirect dependendo de flags; checar que não 200 direto se negado
185 |     elif resp.status_code == 403:
    |                              ^^^
186 |         assert resp.headers.get("X-Deny-Reason") in {"MODULE_DISABLED_FOR_TENANT", "PERMISSION_RESOLVER_DENY"}
187 |     else:
    |

E741 Ambiguous variable name: `l`
  --> tests\core\management\test_management_commands_audit_auth_limit_and_reset.py:17:23
   |
15 |     output = out.getvalue()
16 |     # Apenas uma linha de contador (ou nenhuma se heurística não achar, então falha)
17 |     assert len([l for l in output.splitlines() if l.startswith("module_deny_count:")]) <= 1
   |                       ^
18 |
19 |     # Agora reset
   |

PLR2004 Magic value used in comparison, consider replacing `301` with a constant variable
  --> tests\core\menu_middleware\test_core_redirects.py:12:39
   |
10 |     resp_create = client.get("/core/tenants/wizard/")
11 |     # Deve ser redirect permanente (RedirectView permanent=True)
12 |     assert resp_create.status_code == 301
   |                                       ^^^
13 |     expected_create = reverse("core:tenant_create")
14 |     location_create = resp_create.headers.get("Location", "")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\menu_middleware\test_core_redirects.py:20:5
   |
19 |     # criar tenant dummy para testar edit redirect
20 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 |     t = Tenant.objects.create(name="Temp Corp", tipo_pessoa="PJ", status="active")
   |

PLR2004 Magic value used in comparison, consider replacing `301` with a constant variable
  --> tests\core\menu_middleware\test_core_redirects.py:24:37
   |
22 |     t = Tenant.objects.create(name="Temp Corp", tipo_pessoa="PJ", status="active")
23 |     resp_edit = client.get(f"/core/tenants/wizard/{t.pk}/edit/")
24 |     assert resp_edit.status_code == 301
   |                                     ^^^
25 |     expected_edit = reverse("core:tenant_update", kwargs={"pk": t.pk})
26 |     location_edit = resp_edit.headers.get("Location", "")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\menu_middleware\test_menu_integration.py:16:5
   |
14 |     user = User.objects.create_user("portal_menu", password="x")
15 |     user.user_type = "PORTAL"
16 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 |     tenant = Tenant.objects.create(
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\menu_middleware\test_module_diagnostics_endpoint.py:10:5
   |
 8 | def test_module_diagnostics_basic(settings, client):
 9 |     settings.FEATURE_UNIFIED_ACCESS = True
10 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |     tenant = Tenant.objects.create(nome="DX", slug="dx", enabled_modules={"modules": ["clientes", "financeiro"]})
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\core\menu_middleware\test_module_diagnostics_endpoint.py:20:32
   |
18 |     s.save()
19 |     resp = client.get("/core/api/modules/diagnostics/")
20 |     assert resp.status_code == 200
   |                                ^^^
21 |     data = resp.json()
22 |     assert data["tenant_id"] == tenant.id
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\menu_middleware\test_module_diagnostics_endpoint.py:31:5
   |
29 | def test_module_diagnostics_superuser_sees_all(settings, client):
30 |     settings.FEATURE_UNIFIED_ACCESS = True
31 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 |
33 |     tenant = Tenant.objects.create(nome="DY", slug="dy", enabled_modules={"modules": ["clientes"]})
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\core\menu_middleware\test_module_diagnostics_endpoint.py:40:32
   |
38 |     s.save()
39 |     resp = client.get("/core/api/modules/diagnostics/")
40 |     assert resp.status_code == 200
   |                                ^^^
41 |     data = resp.json()
42 |     # Como superuser, lista deve conter pelo menos módulos base conhecidos
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\tenant_wizard\test_multitenancy.py:104:9
    |
103 |     def test_middleware_resolution(self):
104 |         from django.http import HttpRequest
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
105 |
106 |         from core.middleware import TenantMiddleware
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\core\tenant_wizard\test_multitenancy.py:106:9
    |
104 |         from django.http import HttpRequest
105 |
106 |         from core.middleware import TenantMiddleware
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
107 |
108 |         mw = TenantMiddleware(lambda r: None)
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\tenant_wizard\test_tenant_auto_select.py:11:5
   |
 9 |     User = get_user_model()
10 |     u = User.objects.create_user("only", "only@example.com", "x")
11 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 |     t = Tenant.objects.create(name="Empresa Only", subdomain="only")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\tenant_wizard\test_tenant_auto_select.py:26:5
   |
24 |     User = get_user_model()
25 |     u = User.objects.create_user("multi", "multi@example.com", "x")
26 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 |     t1 = Tenant.objects.create(name="Empresa A", subdomain="a")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\core\tenant_wizard\test_tenant_auto_select.py:41:5
   |
39 |     User = get_user_model()
40 |     u = User.objects.create_superuser("admin2", "admin2@example.com", "x")
41 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
42 |
43 |     # criar tenant + role para vínculo; auto enable modules via fixture
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\core\tenant_wizard\test_tenant_auto_select.py:50:29
   |
48 |     url = reverse("core:tenant_create")
49 |     r = client.get(url)
50 |     assert r.status_code == 200
   |                             ^^^
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\core\tenant_wizard\test_wizard_admin_edit.py:67:73
   |
65 |         self._process(admins)
66 |         assert User.objects.filter(email="novo_admin@example.com").exists()
67 |         assert TenantUser.objects.filter(tenant=self.tenant).count() == 2
   |                                                                         ^
   |

E501 Line too long (125 > 120)
  --> tests\core\tenant_wizard\test_wizard_subdomain_edges.py:49:121
   |
47 |         # Deve falhar formato e não avançar para finish
48 |         self.helper.step5_config_expect_error(subdomain="-abc")
49 |         # Espera-se 200 (mesmo step re-renderizado) ou 302? Caso atual: view avança livre. Validaremos não criação no finish.
   |                                                                                                                         ^^^^^
50 |         # Prosseguir skip 6 e tentar finalizar
51 |         self.helper.skip_steps(6, 6)
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\core\test_module_denial_metric.py:29:18
   |
27 |     log_module_denial(user, tenant, "financeiro", REASON_MODULE_DISABLED)
28 |     v2 = cache.get(key)
29 |     assert v2 == 2
   |                  ^
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\estoque\test_legacy_unit.py:101:9
    |
 99 |         )
100 |         self.assertEqual(mov.aprovacao_status, "PENDENTE")
101 |         from estoque.services.descartes import aprovar_movimento_perda
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
102 |
103 |         aprovar_movimento_perda(mov, self.user)
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\estoque\test_legacy_unit.py:128:9
    |
126 |     )
127 |     async def test_estoque_stream_smoke(self):
128 |         from estoque.consumers import EstoqueStreamConsumer
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
129 |
130 |         communicator = WebsocketCommunicator(EstoqueStreamConsumer.as_asgi(), "/ws/estoque/")
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\estoque\test_legacy_unit.py:134:9
    |
132 |         if not connected:
133 |             pytest.xfail("Canal WebSocket não conectou (layer ou auth scope não configurado).")
134 |         from estoque.services import movimentos as mov_srv
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
135 |
136 |         await database_sync_to_async(mov_srv.registrar_entrada)(
    |

PLC0415 `import` should be at the top-level of a file
   --> tests\estoque\test_legacy_unit.py:151:9
    |
149 |     )
150 |     async def test_picking_stream_smoke(self):
151 |         from estoque.consumers import PickingStreamConsumer
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
152 |
153 |         communicator = WebsocketCommunicator(PickingStreamConsumer.as_asgi(), "/ws/picking/")
    |

E741 Ambiguous variable name: `l`
  --> tests\estoque\test_movimentos_lote_serie.py:48:53
   |
46 |         self.assertEqual(MovimentoEstoque.objects.count(), 1)
47 |         self.assertEqual(Lote.objects.filter(produto=self.prod_lote).count(), 2)
48 |         self.assertEqual(sum(l.quantidade_atual for l in Lote.objects.filter(produto=self.prod_lote)), Decimal("10"))
   |                                                     ^
49 |
50 |     def test_saida_lotes_quantidade_inconsistente(self):
   |

B017 Do not assert blind exception: `Exception`
  --> tests\estoque\test_movimentos_lote_serie.py:54:14
   |
52 |             self.prod_lote, self.dep, Decimal("5"), Decimal("5"), self.user, lotes=[{"codigo": "L1", "quantidade": 5}]
53 |         )
54 |         with self.assertRaises(Exception):
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
55 |             movimentos.registrar_saida(
56 |                 self.prod_lote, self.dep, Decimal("5"), self.user, lotes=[{"codigo": "L1", "quantidade": 4}]
   |

B017 Do not assert blind exception: `Exception`
  --> tests\estoque\test_movimentos_lote_serie.py:79:14
   |
77 |             self.prod_lote, self.dep, Decimal("2"), Decimal("5"), self.user, lotes=[{"codigo": "L1", "quantidade": 2}]
78 |         )
79 |         with self.assertRaises(Exception):
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
80 |             movimentos.registrar_saida(self.prod_lote, self.dep, Decimal("2"), self.user)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\estoque\test_picking_reservas_descartes.py:54:9
   |
52 |     def test_descarte_gera_movimento_pendente(self):
53 |         # permissão operar já atribuída
54 |         from estoque.services.descartes import registrar_descarte
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
55 |
56 |         mov = registrar_descarte(
   |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> tests\prontuarios\test_api_scopes.py:64:32
   |
62 |         self._login(self.prof1)
63 |         resp = self.client_api.get("/prontuarios/api/atendimentos/")
64 |         if resp.status_code == 302:
   |                                ^^^
65 |             pytest.skip("Endpoint redirecionou (auth/middleware); ignorando em ambiente de teste minimal.")
66 |         self.assertEqual(resp.status_code, 200)
   |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> tests\prontuarios\test_api_scopes.py:72:32
   |
70 |         self._login(self.superuser)
71 |         resp = self.client_api.get("/prontuarios/api/atendimentos/")
72 |         if resp.status_code == 302:
   |                                ^^^
73 |             pytest.skip("Endpoint redirecionou (auth/middleware); ignorando em ambiente de teste minimal.")
74 |         self.assertEqual(resp.status_code, 200)
   |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> tests\prontuarios\test_api_scopes.py:80:32
   |
78 |         self._login(self.prof1)
79 |         resp = self.client_api.get("/prontuarios/api/perfis-clinicos/")
80 |         if resp.status_code == 302:
   |                                ^^^
81 |             pytest.skip("Endpoint redirecionou (auth/middleware); ignorando em ambiente de teste minimal.")
82 |         self.assertEqual(resp.status_code, 200)
   |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> tests\prontuarios\test_api_scopes.py:89:32
   |
87 |         self._login(self.superuser)
88 |         resp = self.client_api.get("/prontuarios/api/perfis-clinicos/")
89 |         if resp.status_code == 302:
   |                                ^^^
90 |             pytest.skip("Endpoint redirecionou (auth/middleware); ignorando em ambiente de teste minimal.")
91 |         self.assertEqual(resp.status_code, 200)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_foto_evolucao_api.py:24:9
   |
22 |         self.cliente = Cliente.objects.create(tenant=self.tenant, tipo="PF", status="active")
23 |         self.pf = PessoaFisica.objects.create(cliente=self.cliente, nome_completo="Pac Test", cpf="00000000000")
24 |         from datetime import timedelta
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |
26 |         cat, _ = CategoriaServico.objects.get_or_create(nome="Default", defaults={"descricao": "Cat default"})
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_foto_evolucao_api.py:57:9
   |
55 |         url = reverse("prontuarios:upload_foto_evolucao_mobile")
56 |         image_content = io.BytesIO()
57 |         from PIL import Image
   |         ^^^^^^^^^^^^^^^^^^^^^
58 |
59 |         img = Image.new("RGB", (20, 20), color="red")
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> tests\prontuarios\test_foto_evolucao_api.py:74:32
   |
72 |             files={"imagem": file},
73 |         )
74 |         if resp.status_code == 400:
   |                                ^^^
75 |             pytest.skip("Upload retornou 400 (provável validação de imagem/storage não configurado).")
76 |         self.assertIn(resp.status_code, (200, 201))
   |

PLR2004 Magic value used in comparison, consider replacing `404` with a constant variable
  --> tests\prontuarios\test_foto_evolucao_api.py:95:32
   |
93 |         reverse("prontuarios:fotoevolucao-list")  # DRF router name maybe different; fallback to manual path
94 |         resp = self.client.get(reverse("prontuarios:fotoevolucao-list") + "?tipo_foto=ANTES")
95 |         if resp.status_code == 404:
   |                                ^^^
96 |             pytest.skip("Endpoint não disponível (router não carregado).")
97 |         self.assertEqual(resp.status_code, 200)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\prontuarios\test_select2_endpoints.py:33:32
   |
31 |     url = reverse("prontuarios:search_clientes")
32 |     resp = client.get(url, {"q": "Cliente"})
33 |     assert resp.status_code == 200
   |                                ^^^
34 |     data = resp.json()
35 |     results = data["results"] if isinstance(data, dict) else data
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_select2_endpoints.py:46:5
   |
44 |     # usuário não staff no tenant
45 |     u2 = User.objects.create_user("visitante", password="x")
46 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
47 |
48 |     TenantUser.objects.create(tenant=t, user=u2)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_select2_endpoints.py:76:5
   |
74 |     )
75 |     # gerar slots via serviço centralizado
76 |     from agendamentos.services import SlotService
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
77 |
78 |     SlotService.gerar_slots(disp)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\prontuarios\test_select2_endpoints.py:82:32
   |
80 |     url = "/agendamentos/api/slots/"
81 |     resp = client.get(url, {"profissional": prof.id, "disponivel": "1"})
82 |     assert resp.status_code == 200
   |                                ^^^
83 |     assert len(resp.json()) >= 1
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_select2_pagination.py:20:5
   |
18 |     staff = create_profissionais(t, 1)[0]
19 |     u2 = User.objects.create_user("visitante", password="x")
20 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 |     TenantUser.objects.create(tenant=t, user=u2)
   |

PLR2004 Magic value used in comparison, consider replacing `20` with a constant variable
  --> tests\prontuarios\test_select2_pagination.py:46:34
   |
44 |     d1 = client.get(url, {"page": 1, "page_size": 20}).json()
45 |     d2 = client.get(url, {"page": 2, "page_size": 20}).json()
46 |     assert len(d1["results"]) == 20
   |                                  ^^
47 |     assert len(d2["results"]) >= 5
48 |     assert d1["pagination"]["more"] is True
   |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
  --> tests\prontuarios\test_select2_pagination.py:47:34
   |
45 |     d2 = client.get(url, {"page": 2, "page_size": 20}).json()
46 |     assert len(d1["results"]) == 20
47 |     assert len(d2["results"]) >= 5
   |                                  ^
48 |     assert d1["pagination"]["more"] is True
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_slots_date_filter.py:43:5
   |
41 |         duracao_slot_minutos=30,
42 |     )
43 |     from agendamentos.services import SlotService
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
44 |
45 |     SlotService.gerar_slots(disp1)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\prontuarios\test_slots_date_filter.py:51:30
   |
49 |     # somente base_date
50 |     d1 = client.get(url, {"profissional": prof.id, "disponivel": "1", "data": base_date.isoformat()})
51 |     assert d1.status_code == 200
   |                              ^^^
52 |     slots_today = d1.json()
53 |     if isinstance(slots_today, dict) and "results" in slots_today:
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\prontuarios\test_slots_date_filter.py:60:30
   |
58 |         url, {"profissional": prof.id, "disponivel": "1", "data": (base_date + timedelta(days=1)).isoformat()}
59 |     )
60 |     assert d2.status_code == 200
   |                              ^^^
61 |     slots_tomorrow = d2.json()
62 |     if isinstance(slots_tomorrow, dict) and "results" in slots_tomorrow:
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\prontuarios\test_slots_none.py:34:32
   |
32 |         },
33 |     )
34 |     assert resp.status_code == 200
   |                                ^^^
35 |     data = resp.json()
36 |     if isinstance(data, dict) and "results" in data:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\prontuarios\test_tasks_media.py:28:9
   |
26 |     def test_thumbnail_and_webp_tasks_triggered(self):
27 |         # Cria imagem simples em memória
28 |         from PIL import Image
   |         ^^^^^^^^^^^^^^^^^^^^^
29 |
30 |         img = Image.new("RGB", (1200, 800), color="red")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\repo\test_sitecustomize_optional.py:18:5
   |
16 |     sys.modules.pop("sitecustomize", None)
17 |     importlib.invalidate_caches()
18 |     from django.conf import settings  # noqa: F401
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |
20 |     if sc.exists():
   |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_backend.py:4:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.utils import timezone
  |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_backend.py:5:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.utils import timezone
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | from user_management.models import StatusUsuario
  |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_backend.py:7:1
  |
5 | from django.utils import timezone
6 |
7 | from user_management.models import StatusUsuario
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

E501 Line too long (125 > 120)
  --> tests\security\login\test_auth_backend.py:20:121
   |
18 |         perfil.save(update_fields=["status"])
19 |     resp = client.post("/core/login/", {"username": "u1", "password": "x"})
20 |     # Backend retorna None -> login view normalmente retorna 200 com form ou mantém redirect? Observado 302 para /core/login/
   |                                                                                                                         ^^^^^
21 |     assert resp.status_code in (200, 302)
22 |     assert resp.wsgi_request.user.is_anonymous
   |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_blocking.py:4:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.utils import timezone
  |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_blocking.py:5:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.utils import timezone
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | from user_management.models import PerfilUsuarioEstendido, StatusUsuario
  |

E402 Module level import not at top of file
 --> tests\security\login\test_auth_blocking.py:7:1
  |
5 | from django.utils import timezone
6 |
7 | from user_management.models import PerfilUsuarioEstendido, StatusUsuario
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

E501 Line too long (148 > 120)
  --> tests\security\login\test_auth_blocking.py:56:121
   |
54 | …es=1)
55 | …
56 | …ssou -> ainda bloqueado? Regra atual exige limpar status; simulamos desbloqueio)
   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
57 | …
58 | …
   |

E402 Module level import not at top of file
 --> tests\security\login\test_logging_service_ip_fallback.py:4:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 |
6 | from user_management.models import LogAtividadeUsuario
  |

E402 Module level import not at top of file
 --> tests\security\login\test_logging_service_ip_fallback.py:6:1
  |
4 | from django.contrib.auth import get_user_model
5 |
6 | from user_management.models import LogAtividadeUsuario
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 | from user_management.services.logging_service import log_activity
  |

E402 Module level import not at top of file
 --> tests\security\login\test_logging_service_ip_fallback.py:7:1
  |
6 | from user_management.models import LogAtividadeUsuario
7 | from user_management.services.logging_service import log_activity
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

E402 Module level import not at top of file
 --> tests\security\login\test_login_block_bloqueio.py:4:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.urls import reverse
6 | from django.utils import timezone
  |

E402 Module level import not at top of file
 --> tests\security\login\test_login_block_bloqueio.py:5:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 | from django.utils import timezone
  |

E402 Module level import not at top of file
 --> tests\security\login\test_login_block_bloqueio.py:6:1
  |
4 | from django.contrib.auth import get_user_model
5 | from django.urls import reverse
6 | from django.utils import timezone
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |
8 | from user_management.models import StatusUsuario
  |

E402 Module level import not at top of file
  --> tests\security\login\test_login_block_bloqueio.py:8:1
   |
 6 | from django.utils import timezone
 7 |
 8 | from user_management.models import StatusUsuario
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 |
10 | User = get_user_model()
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\login\test_login_block_bloqueio.py:31:5
   |
29 | def test_convite_aceito_tipo_usuario_status(client, django_user_model):
30 |     # Simular fluxo mínimo de convite: criar objeto convite e aceitar
31 |     from django.utils import timezone
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
32 |
33 |     from core.models import Tenant
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\login\test_login_block_bloqueio.py:33:5
   |
31 |     from django.utils import timezone
32 |
33 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
34 |     from user_management.models import ConviteUsuario, TipoUsuario
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\login\test_login_block_bloqueio.py:34:5
   |
33 |     from core.models import Tenant
34 |     from user_management.models import ConviteUsuario, TipoUsuario
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |
36 |     tenant = Tenant.objects.create(nome="Empresa X", slug="empresax") if hasattr(Tenant.objects, "create") else None
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\login\test_login_block_bloqueio.py:47:32
   |
45 |     url = reverse("user_management:aceitar_convite", args=[convite.token])
46 |     resp = client.get(url)
47 |     assert resp.status_code == 200
   |                                ^^^
48 |     # Post para criar usuário
49 |     post_data = {
   |

E402 Module level import not at top of file
 --> tests\security\login\test_login_rate_limit.py:6:1
  |
5 | pytestmark = [pytest.mark.login, pytest.mark.security]
6 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\login\test_login_rate_limit.py:7:1
  |
5 | pytestmark = [pytest.mark.login, pytest.mark.security]
6 | from django.contrib.auth import get_user_model
7 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\login\test_login_rate_limit.py:21:36
   |
19 |     for _i in range(5):
20 |         resp = client.post(url, {"username": "ratelimit", "password": "wrong"})
21 |         assert resp.status_code == 200  # página login reapresentada
   |                                    ^^^
22 |     # 6a tentativa deve disparar mensagem de bloqueio (mesmo status 200, mas com texto)
23 |     resp_block = client.post(url, {"username": "ratelimit", "password": "wrong"})
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\login\test_login_rate_limit.py:24:38
   |
22 |     # 6a tentativa deve disparar mensagem de bloqueio (mesmo status 200, mas com texto)
23 |     resp_block = client.post(url, {"username": "ratelimit", "password": "wrong"})
24 |     assert resp_block.status_code == 200
   |                                      ^^^
25 |     assert b"Muitas tentativas de login deste IP" in resp_block.content
   |

E402 Module level import not at top of file
 --> tests\security\login\test_login_threshold_settings.py:4:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import authenticate, get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.test import override_settings
  |

E402 Module level import not at top of file
 --> tests\security\login\test_login_threshold_settings.py:5:1
  |
3 | pytestmark = [pytest.mark.login, pytest.mark.security]
4 | from django.contrib.auth import authenticate, get_user_model
5 | from django.test import override_settings
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | User = get_user_model()
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_sessions_2fa.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_sessions_2fa.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | from user_management.models import LogAtividadeUsuario, SessaoUsuario
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_sessions_2fa.py:7:1
  |
5 | from django.urls import reverse
6 |
7 | from user_management.models import LogAtividadeUsuario, SessaoUsuario
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_sessions_2fa.py:17:5
   |
15 |     u = django_user_model.objects.create_user("multi", "multi@example.com", "x")
16 |     # Criar tenant e vínculo para evitar redirect do middleware
17 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 |     tenant = Tenant.objects.create(nome="Empresa Teste", slug="empresateste")
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
  --> tests\security\twofa\test_sessions_2fa.py:27:72
   |
25 |     for i in range(3):
26 |         SessaoUsuario.objects.create(user=u, session_key=f"sess{i}", ip_address="127.0.0.1", user_agent="test-agent")
27 |     assert SessaoUsuario.objects.filter(user=u, ativa=True).count() == 3
   |                                                                        ^
28 |     client.force_login(u)
29 |     # Executar bulk terminate via POST JSON
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_sessions_2fa.py:33:32
   |
31 |     url = reverse("user_management:sessao_encerrar_multiplas")
32 |     resp = client.post(url, data={"ids": ",".join(map(str, ids))}, HTTP_X_REQUESTED_WITH="XMLHttpRequest")
33 |     assert resp.status_code == 200
   |                                ^^^
34 |     # Verificar encerradas
35 |     assert SessaoUsuario.objects.filter(user=u, ativa=True).count() == 0
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_sessions_2fa.py:46:5
   |
44 |     u = django_user_model.objects.create_user("user2fa", "2fa@example.com", "x")
45 |     perfil = u.perfil_estendido
46 |     from core.models import Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
47 |
48 |     tenant = Tenant.objects.create(nome="Empresa Teste 2", slug="empresateste2")
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_sessions_2fa.py:57:32
   |
55 |     url = reverse("user_management:toggle_2fa", args=[perfil.pk])
56 |     resp = client.post(url, HTTP_X_REQUESTED_WITH="XMLHttpRequest")
57 |     assert resp.status_code == 200
   |                                ^^^
58 |     perfil.refresh_from_db()
59 |     assert perfil.autenticacao_dois_fatores is True
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_sessions_2fa.py:63:33
   |
61 |     # Toggle again
62 |     resp2 = client.post(url, HTTP_X_REQUESTED_WITH="XMLHttpRequest")
63 |     assert resp2.status_code == 200
   |                                 ^^^
64 |     perfil.refresh_from_db()
65 |     assert perfil.autenticacao_dois_fatores is False
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\security\twofa\test_sessions_2fa.py:66:85
   |
64 |     perfil.refresh_from_db()
65 |     assert perfil.autenticacao_dois_fatores is False
66 |     assert LogAtividadeUsuario.objects.filter(user=u, acao="TOGGLE_2FA").count() == 2
   |                                                                                     ^
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_admin_reset.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
  | ^^^^^^^^^^^^
5 | from django.contrib.auth import get_user_model
6 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_admin_reset.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
5 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_admin_reset.py:6:1
  |
4 | import pyotp
5 | from django.contrib.auth import get_user_model
6 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |
8 | from core.models import Tenant, TenantUser
  |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_admin_reset.py:8:1
   |
 6 | from django.urls import reverse
 7 |
 8 | from core.models import Tenant, TenantUser
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 |
10 | User = get_user_model()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_admin_reset.py:30:29
   |
28 |     token = pyotp.TOTP(secret).now()
29 |     c = client.post(reverse("user_management:2fa_confirm"), {"token": token})
30 |     assert c.status_code == 200
   |                             ^^^
31 |     # switch para admin e reset
32 |     client.force_login(admin)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_admin_reset.py:34:29
   |
32 |     client.force_login(admin)
33 |     r = client.post(reverse("user_management:2fa_admin_reset"), {"user_id": u.id})
34 |     assert r.status_code == 200, r.content
   |                             ^^^
35 |     # verifica que user perdeu 2FA
36 |     u.refresh_from_db()
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:25:5
   |
23 |         "OLDKEY_ROT",
24 |     ]
25 |     from user_management import twofa as twofa_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 |     importlib.reload(twofa_mod)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:43:5
   |
41 |     """Valida que recovery code legado (sem pepper/v1) funciona após ativar pepper (v2)."""
42 |     settings.TWOFA_RECOVERY_PEPPER = ""
43 |     from user_management import twofa as twofa_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
44 |
45 |     importlib.reload(twofa_mod)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:75:5
   |
73 |     r = client.post(setup_url)
74 |     secret = r.json()["secret"]
75 |     import pyotp
   |     ^^^^^^^^^^^^
76 |
77 |     token = pyotp.TOTP(secret).now()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:80:29
   |
78 |     confirm_url = reverse("user_management:2fa_confirm")
79 |     c = client.post(confirm_url, {"token": token})
80 |     assert c.status_code == 200
   |                             ^^^
81 |     verify_url = reverse("user_management:2fa_verify")
82 |     # Fazer 10 falhas (limite default = 10) retornando 400
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:85:36
   |
83 |     for i in range(10):
84 |         resp = client.post(verify_url, {"token": "000000"})
85 |         assert resp.status_code == 400, f"Tentativa {i + 1} deveria ser 400, veio {resp.status_code}"
   |                                    ^^^
86 |     # 11a deve bater rate limit micro => 429 com mensagem micro
87 |     resp_limit = client.post(verify_url, {"token": "000000"})
   |

PLR2004 Magic value used in comparison, consider replacing `429` with a constant variable
  --> tests\security\twofa\test_twofa_crypto_and_rate.py:88:38
   |
86 |     # 11a deve bater rate limit micro => 429 com mensagem micro
87 |     resp_limit = client.post(verify_url, {"token": "000000"})
88 |     assert resp_limit.status_code == 429, f"Esperado 429 micro rate, veio {resp_limit.status_code}"
   |                                      ^^^
89 |     body = resp_limit.json()
90 |     assert "Muitas tentativas" in body.get("detail", "")
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\security\twofa\test_twofa_crypto_and_rate.py:106:5
    |
104 |     r = client.post(setup_url)
105 |     secret = r.json()["secret"]
106 |     import pyotp
    |     ^^^^^^^^^^^^
107 |
108 |     confirm_url = reverse("user_management:2fa_confirm")
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> tests\security\twofa\test_twofa_crypto_and_rate.py:111:29
    |
109 |     token = pyotp.TOTP(secret).now()
110 |     c = client.post(confirm_url, {"token": token})
111 |     assert c.status_code == 200
    |                             ^^^
112 |     verify_url = reverse("user_management:2fa_verify")
113 |     # Gerar falhas até alcançar lock (threshold = 3 => lock aplica quando failed_2fa_attempts >= 3)
    |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
   --> tests\security\twofa\test_twofa_crypto_and_rate.py:116:36
    |
114 |     for i in range(2):
115 |         resp = client.post(verify_url, {"token": "000000"})
116 |         assert resp.status_code == 400, f"Falha {i + 1} deveria ser 400 antes do lock, veio {resp.status_code}"
    |                                    ^^^
117 |     # Terceira tentativa deve aplicar lock retornando 423
118 |     resp = client.post(verify_url, {"token": "000000"})
    |

PLR2004 Magic value used in comparison, consider replacing `423` with a constant variable
   --> tests\security\twofa\test_twofa_crypto_and_rate.py:119:32
    |
117 |     # Terceira tentativa deve aplicar lock retornando 423
118 |     resp = client.post(verify_url, {"token": "000000"})
119 |     assert resp.status_code == 423, f"Deveria estar locked na 3a falha, veio {resp.status_code}"
    |                                ^^^
120 |     user.refresh_from_db()
121 |     perfil = user.perfil_estendido
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> tests\security\twofa\test_twofa_crypto_and_rate.py:132:35
    |
130 |     valid_token = pyotp.TOTP(secret).now()
131 |     resp_ok = client.post(verify_url, {"token": valid_token})
132 |     assert resp_ok.status_code == 200, resp_ok.content
    |                                   ^^^
133 |     perfil.refresh_from_db()
134 |     assert perfil.twofa_locked_until is None, "Lock não limpo após sucesso pós-expiração"
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_crypto_fallback_and_cachefail.py:11:5
   |
 9 | def test_twofa_decrypt_plaintext_legacy(settings):
10 |     settings.TWOFA_FERNET_KEYS = ["LEGACYKEY"]
11 |     from user_management import twofa as twofa_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 |     importlib.reload(twofa_mod)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_crypto_fallback_and_cachefail.py:21:5
   |
19 | @pytest.mark.django_db
20 | def test_rate_limit_cache_failure_monkeypatch(settings, monkeypatch):
21 |     from user_management import twofa as twofa_mod
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 |
23 |     def boom(*a, **k):
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_enforcement.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
  | ^^^^^^^^^^^^
5 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_enforcement.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
5 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_enforcement.py:22:29
   |
20 |     confirm_url = reverse("user_management:2fa_confirm")
21 |     c = client.post(confirm_url, {"token": token})
22 |     assert c.status_code == 200, f"Confirm falhou status={c.status_code} body={getattr(c, 'content', b'')!r}"
   |                             ^^^
23 |     # Acesso a rota protegida deve redirecionar para challenge até verificação
24 |     protected = reverse("user_management:usuario_list")
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_enforcement.py:32:29
   |
30 |     verify_url = reverse("user_management:2fa_verify")
31 |     v = client.post(verify_url, {"token": token2})
32 |     assert v.status_code == 200, f"Verify falhou status={v.status_code} body={getattr(v, 'content', b'')!r}"
   |                             ^^^
33 |     # Agora acesso deve funcionar
34 |     resp2 = client.get(protected, follow=False)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_enforcement.py:35:33
   |
33 |     # Agora acesso deve funcionar
34 |     resp2 = client.get(protected, follow=False)
35 |     assert resp2.status_code == 200, (
   |                                 ^^^
36 |         f"Esperado 200 após verificação; obtido {resp2.status_code} redirect para {resp2.headers.get('Location')} session_keys={list(c…
37 |     )
   |

E501 Line too long (157 > 120)
  --> tests\security\twofa\test_twofa_enforcement.py:36:121
   |
34 | …
35 | …
36 | …rect para {resp2.headers.get('Location')} session_keys={list(client.session.keys())}"
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 | …
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_flow.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:14:29
   |
12 |     url_setup = reverse("user_management:2fa_setup")
13 |     r = client.post(url_setup, HTTP_X_REQUESTED_WITH="XMLHttpRequest")
14 |     assert r.status_code == 200
   |                             ^^^
15 |     data = r.json()
16 |     assert data["secret"]
   |

PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:20:35
   |
18 |     assert recovery_codes is not None, "recovery_codes veio None"
19 |     assert isinstance(recovery_codes, list), f"recovery_codes tipo inesperado: {type(recovery_codes)}"
20 |     assert len(recovery_codes) == 8
   |                                   ^
21 |
22 |     # Try confirm with invalid
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:25:31
   |
23 |     url_confirm = reverse("user_management:2fa_confirm")
24 |     bad = client.post(url_confirm, {"token": "000000"})
25 |     assert bad.status_code == 400
   |                               ^^^
26 |
27 |     # For testing we fetch secret and generate a valid token
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_flow.py:35:9
   |
33 |     # Se armazenado criptografado usar util para decriptar
34 |     if getattr(perfil, "twofa_secret_encrypted", False):
35 |         from user_management.twofa import decrypt_secret
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 |
37 |         secret = decrypt_secret(secret)
   |

E501 Line too long (203 > 120)
  --> tests\security\twofa\test_twofa_flow.py:47:121
   |
45 | …
46 | …
47 | …utenticacao_dois_fatores} confirm_at={perfil.totp_confirmed_at} recovery_codes={perfil.totp_recovery_codes}"
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
48 | …
49 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_flow.py:49:5
   |
47 |         f"totp_secret ainda None após tentativas de recuperação. Perfil dados: aut2fa={perfil.autenticacao_dois_fatores} confirm_at={p…
48 |     )
49 |     import pyotp
   |     ^^^^^^^^^^^^
50 |
51 |     token = pyotp.TOTP(secret).now()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:53:30
   |
51 |     token = pyotp.TOTP(secret).now()
52 |     ok = client.post(url_confirm, {"token": token})
53 |     assert ok.status_code == 200
   |                              ^^^
54 |
55 |     # Verify token endpoint
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:59:30
   |
57 |     token2 = pyotp.TOTP(secret).now()
58 |     vr = client.post(url_verify, {"token": token2})
59 |     assert vr.status_code == 200
   |                              ^^^
60 |
61 |     # Use a recovery code
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:64:31
   |
62 |     rc = recovery_codes[0]
63 |     vr2 = client.post(url_verify, {"recovery_code": rc})
64 |     assert vr2.status_code == 200
   |                               ^^^
65 |
66 |     # Disable
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_flow.py:69:30
   |
67 |     url_disable = reverse("user_management:2fa_disable")
68 |     ds = client.post(url_disable)
69 |     assert ds.status_code == 200
   |                              ^^^
70 |     perfil.refresh_from_db()
71 |     assert not perfil.autenticacao_dois_fatores
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_global_ip_limit_new.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.core.cache import cache
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_global_ip_limit_new.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.core.cache import cache
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | from user_management.twofa import global_ip_rate_limit_check
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_global_ip_limit_new.py:7:1
  |
5 | from django.core.cache import cache
6 |
7 | from user_management.twofa import global_ip_rate_limit_check
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_global_ip_rate_limit.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_global_ip_rate_limit.py:16:5
   |
14 |     resp_setup = client.post(setup_url)
15 |     secret = resp_setup.json()["secret"]
16 |     import pyotp
   |     ^^^^^^^^^^^^
17 |
18 |     token = pyotp.TOTP(secret).now()
   |

PLR2004 Magic value used in comparison, consider replacing `429` with a constant variable
  --> tests\security\twofa\test_twofa_global_ip_rate_limit.py:29:35
   |
27 |     # Próxima deve retornar 429 (global ip limit)
28 |     r_block = client.post(verify_url, {"token": "000000"})
29 |     assert r_block.status_code == 429
   |                                   ^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_global_ip_rate_limit.py:36:5
   |
34 |     # Garante pelo menos um perfil
35 |     auth_user(username="snap")
36 |     from io import StringIO
   |     ^^^^^^^^^^^^^^^^^^^^^^^
37 |
38 |     from django.core import management
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_global_ip_rate_limit.py:38:5
   |
36 |     from io import StringIO
37 |
38 |     from django.core import management
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
39 |
40 |     buf = StringIO()
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_lockout.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from datetime import timedelta
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 |
6 | import pyotp
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_lockout.py:6:1
  |
4 | from datetime import timedelta
5 |
6 | import pyotp
  | ^^^^^^^^^^^^
7 | from django.contrib.auth import get_user_model
8 | from django.core.cache import cache
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_lockout.py:7:1
  |
6 | import pyotp
7 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 | from django.core.cache import cache
9 | from django.urls import reverse
  |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_lockout.py:8:1
   |
 6 | import pyotp
 7 | from django.contrib.auth import get_user_model
 8 | from django.core.cache import cache
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 | from django.urls import reverse
10 | from django.utils import timezone
   |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_lockout.py:9:1
   |
 7 | from django.contrib.auth import get_user_model
 8 | from django.core.cache import cache
 9 | from django.urls import reverse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 | from django.utils import timezone
   |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_lockout.py:10:1
   |
 8 | from django.core.cache import cache
 9 | from django.urls import reverse
10 | from django.utils import timezone
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 | from core.models import Tenant, TenantUser
   |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_lockout.py:12:1
   |
10 | from django.utils import timezone
11 |
12 | from core.models import Tenant, TenantUser
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 | User = get_user_model()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:32:35
   |
30 |     token = pyotp.TOTP(secret_plain).now()
31 |     confirm = client.post(reverse("user_management:2fa_confirm"), {"token": token})
32 |     assert confirm.status_code == 200
   |                                   ^^^
33 |
34 |     verify_url = reverse("user_management:2fa_verify")
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:38:36
   |
36 |     for i in range(4):
37 |         resp = client.post(verify_url, {"token": "000000"})
38 |         assert resp.status_code == 400, f"Tentativa {i + 1} deveria ser 400, veio {resp.status_code}"
   |                                    ^^^
39 |     # 5a falha gera lockout -> 423
40 |     resp5 = client.post(verify_url, {"token": "000000"})
   |

PLR2004 Magic value used in comparison, consider replacing `423` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:41:33
   |
39 |     # 5a falha gera lockout -> 423
40 |     resp5 = client.post(verify_url, {"token": "000000"})
41 |     assert resp5.status_code == 423, f"Esperado 423 na 5a falha, veio {resp5.status_code}"
   |                                 ^^^
42 |
43 |     # Estado de lockout no perfil
   |

PLR2004 Magic value used in comparison, consider replacing `423` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:50:39
   |
48 |     # Nova tentativa enquanto bloqueado ainda 423
49 |     resp_locked = client.post(verify_url, {"token": "000000"})
50 |     assert resp_locked.status_code == 423
   |                                       ^^^
51 |
52 |     # Expira lockout manualmente e tenta token válido
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\security\twofa\test_twofa_lockout.py:59:9
   |
57 |     secret_stored = perfil.totp_secret
58 |     if getattr(perfil, "twofa_secret_encrypted", False):
59 |         from user_management.twofa import decrypt_secret
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
60 |
61 |         secret_stored = decrypt_secret(secret_stored)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:65:35
   |
63 |     valid_token = pyotp.TOTP(secret_stored).now()
64 |     resp_ok = client.post(verify_url, {"token": valid_token})
65 |     assert resp_ok.status_code == 200, resp_ok.content
   |                                   ^^^
66 |
67 |     # Após sucesso lock deve ter sido limpo
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:85:38
   |
83 |     setup = reverse("user_management:2fa_setup")
84 |     setup_resp = client.post(setup)
85 |     assert setup_resp.status_code == 200, setup_resp.content
   |                                      ^^^
86 |     secret_plain = setup_resp.json().get("secret")
87 |     assert secret_plain, "Secret não retornado no setup"
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_lockout.py:94:40
   |
92 |     valid_token = pyotp.TOTP(secret_plain).now()
93 |     resp_confirm = client.post(confirm_view, {"token": valid_token})
94 |     assert resp_confirm.status_code == 200, resp_confirm.content
   |                                        ^^^
95 |     # Fallback: garantir que perfil.totp_secret existe para próximas operações
96 |     perfil.refresh_from_db()
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
   --> tests\security\twofa\test_twofa_lockout.py:117:33
    |
115 |         r = client.post(verify_url, {"token": invalid_token})
116 |         statuses.append(r.status_code)
117 |         assert r.status_code == 400, f"Tentativa {i + 1} deveria ser 400, obtidos: {statuses}"
    |                                 ^^^
118 |     # Tentativa que atinge o threshold gera lock (>= threshold)
119 |     resp_lock = client.post(verify_url, {"token": invalid_token})
    |

PLR2004 Magic value used in comparison, consider replacing `423` with a constant variable
   --> tests\security\twofa\test_twofa_lockout.py:120:37
    |
118 |     # Tentativa que atinge o threshold gera lock (>= threshold)
119 |     resp_lock = client.post(verify_url, {"token": invalid_token})
120 |     assert resp_lock.status_code == 423
    |                                     ^^^
    |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
   --> tests\security\twofa\test_twofa_lockout.py:162:36
    |
160 |     for _i in range(3):
161 |         client.post(confirm, {"token": "000000"})
162 |     assert sent.get("count", 0) == 2
    |                                    ^
    |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_metrics_json.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_metrics_json.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | from django.contrib.auth import get_user_model
5 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | from user_management.models import PerfilUsuarioEstendido
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_metrics_json.py:7:1
  |
5 | from django.urls import reverse
6 |
7 | from user_management.models import PerfilUsuarioEstendido
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | User = get_user_model()
  |

PLR2004 Magic value used in comparison, consider replacing `302` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_json.py:21:37
   |
19 |     # Anônimo -> redirect login
20 |     resp_anon = client.get(url)
21 |     assert resp_anon.status_code == 302
   |                                     ^^^
22 |
23 |     # Autenticar usuário normal e injetar tenant na sessão para evitar redirect /core/tenant-select/
   |

PLR2004 Magic value used in comparison, consider replacing `403` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_json.py:26:32
   |
24 |     u, tenant, _ = auth_user(username="user1")
25 |     resp = client.get(url)
26 |     assert resp.status_code == 403
   |                                ^^^
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_json.py:42:32
   |
40 |     url = reverse("user_management:2fa_metrics_json")
41 |     resp = client.get(url)
42 |     assert resp.status_code == 200
   |                                ^^^
43 |     data = resp.json()
44 |     assert data["total"] >= 1
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_reset_and_ipblocks.py:32:39
   |
30 |     url_json = reverse("user_management:2fa_metrics_json")
31 |     resp_before = client.get(url_json)
32 |     assert resp_before.status_code == 200
   |                                       ^^^
33 |     data_before = resp_before.json()
34 |     assert data_before["sucessos"] >= 1
   |

PLR2004 Magic value used in comparison, consider replacing `429` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_reset_and_ipblocks.py:69:30
   |
67 |     assert r1.status_code in (400, 423, 429)
68 |     assert r2.status_code in (400, 423, 429)
69 |     assert r3.status_code == 429, f"3a tentativa deveria ser 429 global ip; veio {r3.status_code}"
   |                              ^^^
70 |     # Requisita métricas como staff para ver ip_blocks
71 |     staff, t2, _ = auth_user(username="staff_ip", is_staff=True)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_metrics_reset_and_ipblocks.py:74:32
   |
72 |     client.force_login(staff)
73 |     resp = client.get(reverse("user_management:2fa_metrics_json"))
74 |     assert resp.status_code == 200
   |                                ^^^
75 |     data = resp.json()
76 |     # Métrica de bloqueio por IP global é refletida em rl_blocks (contador de bloqueios) ou ip_blocks dependendo de implementação.
   |

E501 Line too long (130 > 120)
  --> tests\security\twofa\test_twofa_metrics_reset_and_ipblocks.py:76:121
   |
74 |     assert resp.status_code == 200
75 |     data = resp.json()
76 |     # Métrica de bloqueio por IP global é refletida em rl_blocks (contador de bloqueios) ou ip_blocks dependendo de implementação.
   |                                                                                                                         ^^^^^^^^^^
77 |     assert (data.get("ip_blocks", 0) >= 1) or (data.get("rl_blocks", 0) >= 1), data
78 |     # Snapshot com include ip blocks
   |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_regenerate.py:4:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
  | ^^^^^^^^^^^^
5 | from django.contrib.auth import get_user_model
6 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_regenerate.py:5:1
  |
3 | pytestmark = [pytest.mark.twofa, pytest.mark.security]
4 | import pyotp
5 | from django.contrib.auth import get_user_model
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 | from django.urls import reverse
  |

E402 Module level import not at top of file
 --> tests\security\twofa\test_twofa_regenerate.py:6:1
  |
4 | import pyotp
5 | from django.contrib.auth import get_user_model
6 | from django.urls import reverse
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |
8 | from core.models import Tenant, TenantUser
  |

E402 Module level import not at top of file
  --> tests\security\twofa\test_twofa_regenerate.py:8:1
   |
 6 | from django.urls import reverse
 7 |
 8 | from core.models import Tenant, TenantUser
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 |
10 | User = get_user_model()
   |

PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:27:34
   |
25 |     secret = r.json()["secret"]
26 |     codes_initial = r.json()["recovery_codes"]
27 |     assert len(codes_initial) == 8
   |                                  ^
28 |     # confirm
29 |     token = pyotp.TOTP(secret).now()
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:32:29
   |
30 |     confirm_url = reverse("user_management:2fa_confirm")
31 |     c = client.post(confirm_url, {"token": token})
32 |     assert c.status_code == 200
   |                             ^^^
33 |     # regenerate
34 |     regenerate_url = reverse("user_management:2fa_regenerate_codes")
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:37:33
   |
35 |     token2 = pyotp.TOTP(secret).now()
36 |     regen = client.post(regenerate_url, {"token": token2})
37 |     assert regen.status_code == 200, regen.content
   |                                 ^^^
38 |     data = regen.json()
39 |     assert data["status"] == "ok"
   |

PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:40:43
   |
38 |     data = regen.json()
39 |     assert data["status"] == "ok"
40 |     assert len(data["recovery_codes"]) == 8
   |                                           ^
41 |     assert data["recovery_codes"] != codes_initial
42 |     # tentar usar código antigo deve falhar
   |

PLR2004 Magic value used in comparison, consider replacing `400` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:46:29
   |
44 |     verify_url = reverse("user_management:2fa_verify")
45 |     v = client.post(verify_url, {"recovery_code": old_code})
46 |     assert v.status_code == 400
   |                             ^^^
47 |     # usar código novo funciona
48 |     new_code = data["recovery_codes"][0]
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\security\twofa\test_twofa_regenerate.py:50:30
   |
48 |     new_code = data["recovery_codes"][0]
49 |     v2 = client.post(verify_url, {"recovery_code": new_code})
50 |     assert v2.status_code == 200
   |                              ^^^
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\servicos\test_servico_clinico_form.py:20:5
   |
18 |     tenant = Tenant.objects.create(nome="T1", slug="t1")
19 |     # Vincula usuário ao tenant (TenantRequiredMixin)
20 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 |     TenantUser.objects.create(tenant=tenant, user=user)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\servicos\test_servico_clinico_form.py:47:32
   |
45 |         follow=True,
46 |     )
47 |     assert resp.status_code == 200
   |                                ^^^
48 |     s = Servico.objects.get(nome_servico="Serviço Clínico X")
49 |     assert s.is_clinical is True
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\servicos\test_servico_clinico_form.py:62:5
   |
60 |     client.force_login(user)
61 |     tenant = Tenant.objects.create(nome="T2", slug="t2")
62 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
63 |
64 |     TenantUser.objects.create(tenant=tenant, user=user)
   |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
  --> tests\servicos\test_servico_clinico_form.py:95:32
   |
93 |         follow=True,
94 |     )
95 |     assert resp.status_code == 200
   |                                ^^^
96 |     s.refresh_from_db()
97 |     assert s.is_clinical is False
   |

PLC0415 `import` should be at the top-level of a file
   --> tests\servicos\test_servico_clinico_form.py:109:5
    |
107 |     client.force_login(user)
108 |     tenant = Tenant.objects.create(nome="T3", slug="t3")
109 |     from core.models import TenantUser
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
110 |
111 |     TenantUser.objects.create(tenant=tenant, user=user)
    |

PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   --> tests\servicos\test_servico_clinico_form.py:129:32
    |
127 |     )
128 |     # Deve retornar erro de formulário (200 com erro exibido)
129 |     assert resp.status_code == 200
    |                                ^^^
130 |     assert Servico.objects.filter(nome_servico="Serv XX").count() == 0
    |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_cache.py:10:5
   |
 9 | def _make_tenant():
10 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |     try:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_cache.py:19:5
   |
18 | def _membership(user, tenant):
19 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 |     TenantUser.objects.create(user=user, tenant=tenant)  # sem role para forçar negação
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_implicit.py:10:5
   |
 9 | def _make_tenant():
10 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |     try:
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_implicit.py:19:5
   |
18 | def _membership(user, tenant):
19 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 |     TenantUser.objects.create(user=user, tenant=tenant)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_personalizadas.py:12:5
   |
11 | def _make_tenant():
12 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 |     # Tentar campos alternativos conforme modelo
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\permissions\test_permission_resolver_personalizadas.py:22:5
   |
21 | def _membership(user, tenant):
22 |     from core.models import TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 |
24 |     TenantUser.objects.create(user=user, tenant=tenant)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_cache_hit.py:12:5
   |
10 | def test_permission_resolver_cache_hit_trace(settings):
11 |     settings.PERMISSION_RESOLVER_TRACE = True
12 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 |     user = User.objects.create(username="cacheu", is_active=True)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_cache_ttl_metric.py:11:5
   |
 9 |     """Garante que o histograma de TTL não quebra e é observável em hits."""
10 |     settings.PERMISSION_RESOLVER_TRACE = True
11 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |     from shared.services.permission_resolver import permission_resolver
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_cache_ttl_metric.py:12:5
   |
10 |     settings.PERMISSION_RESOLVER_TRACE = True
11 |     from core.models import Role, Tenant, TenantUser
12 |     from shared.services.permission_resolver import permission_resolver
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 |     user = User.objects.create(username="ttl", is_active=True)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:11:5
   |
 9 | @pytest.mark.django_db
10 | def test_explain_permission_basic(settings):
11 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 |     user = User.objects.create(username="exu", is_active=True)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:28:5
   |
26 | @pytest.mark.django_db
27 | def test_explain_permission_cache_path(settings):
28 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |
30 |     user = User.objects.create(username="exu2", is_active=True)
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:45:5
   |
43 | @pytest.mark.django_db
44 | def test_action_map_merge_extra(settings):
45 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
46 |
47 |     settings.PERMISSION_ACTION_MAP_EXTRA = {"VIEW_KIT_TESTE": ["can_view_kit_teste", "is_admin"]}
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:60:5
   |
58 | @pytest.mark.django_db
59 | def test_action_map_merge_provider(settings, monkeypatch):
60 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
61 |
62 |     def provider():
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:67:5
   |
65 |     # Injetar provider via módulo dinâmico simples
66 |     # Criar módulo fake em runtime
67 |     import sys
   |     ^^^^^^^^^^
68 |     import types
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_explain.py:68:5
   |
66 |     # Criar módulo fake em runtime
67 |     import sys
68 |     import types
   |     ^^^^^^^^^^^^
69 |
70 |     mod = types.ModuleType("dyn_provider_mod")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_pipeline.py:12:5
   |
10 | def test_pipeline_dynamic_add_remove(permission_resolver=permission_resolver):
11 |     # Setup usuário e tenant mínimos
12 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |
14 |     user = User.objects.create(username="u1", is_active=True)
   |

PLR0913 Too many arguments in function definition (6 > 5)
  --> tests\shared\test_permission_resolver_pipeline.py:23:9
   |
22 |     # Injetar método dinamicamente
23 |     def _step_dummy(self, user, tenant, action, resource, context):
   |         ^^^^^^^^^^^
24 |         if action == "ACTION_X":
25 |             return True, "via dummy", "dummy"
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_pipeline.py:51:5
   |
49 | @pytest.mark.django_db
50 | def test_global_invalidation(permission_resolver=permission_resolver):
51 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
52 |
53 |     user = User.objects.create(username="u2", is_active=True)
   |

E501 Line too long (146 > 120)
  --> tests\shared\test_permission_resolver_pipeline.py:67:121
   |
65 | …
66 | …
67 | …guimos inspecionar TTL, mas o reason muda por novo trace sem cache_hit inicial)
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
68 | … tenant, "UNKNOWN_ACTION")
69 | …
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_warmup.py:15:5
   |
13 |     settings.PERMISSION_WARMUP_ACTIONS = ["VIEW_DASHBOARD_PUBLIC"]
14 |
15 |     from core.models import Role, Tenant, TenantUser
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |     from shared.services.permission_resolver import permission_resolver
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\shared\test_permission_resolver_warmup.py:16:5
   |
15 |     from core.models import Role, Tenant, TenantUser
16 |     from shared.services.permission_resolver import permission_resolver
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 |     # cria user e tenant com role básica
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\shared\test_permissions_servicos_metrics.py:61:44
   |
59 |     # 3) Outro acesso negado incrementa novamente
60 |     assert can_schedule_clinical_service(u, s_offline) is False
61 |     assert get_clinical_denials_count() == 2
   |                                            ^
   |

E402 Module level import not at top of file
  --> tests\test_repo_higiene.py:22:1
   |
22 | import pytest
   | ^^^^^^^^^^^^^
   |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:19:31
   |
17 |     entry = LogAtividadeUsuario.objects.first()
18 |     assert entry is not None
19 |     assert len(entry.acao) <= 100
   |                               ^^^
20 |     assert len(entry.modulo) <= 50
21 |     assert len(entry.descricao) <= 255
   |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:20:33
   |
18 |     assert entry is not None
19 |     assert len(entry.acao) <= 100
20 |     assert len(entry.modulo) <= 50
   |                                 ^^
21 |     assert len(entry.descricao) <= 255
22 |     assert entry.ip_address == "0.0.0.0"
   |

PLR2004 Magic value used in comparison, consider replacing `255` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:21:36
   |
19 |     assert len(entry.acao) <= 100
20 |     assert len(entry.modulo) <= 50
21 |     assert len(entry.descricao) <= 255
   |                                    ^^^
22 |     assert entry.ip_address == "0.0.0.0"
23 |     assert entry.user_agent == "N/A"
   |

E402 Module level import not at top of file
  --> tests\user_management\logging\test_logging_service.py:33:1
   |
33 | import pytest
   | ^^^^^^^^^^^^^
34 |
35 | User = get_user_model()
   |

PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:54:27
   |
52 |     log_activity(u, big, big, big, ip=None, user_agent=None)
53 |     e = LogAtividadeUsuario.objects.filter(user=u).first()
54 |     assert len(e.acao) <= 100
   |                           ^^^
55 |     assert len(e.modulo) <= 50
56 |     assert len(e.descricao) <= 255
   |

PLR2004 Magic value used in comparison, consider replacing `50` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:55:29
   |
53 |     e = LogAtividadeUsuario.objects.filter(user=u).first()
54 |     assert len(e.acao) <= 100
55 |     assert len(e.modulo) <= 50
   |                             ^^
56 |     assert len(e.descricao) <= 255
57 |     assert e.ip_address == "0.0.0.0"
   |

PLR2004 Magic value used in comparison, consider replacing `255` with a constant variable
  --> tests\user_management\logging\test_logging_service.py:56:32
   |
54 |     assert len(e.acao) <= 100
55 |     assert len(e.modulo) <= 50
56 |     assert len(e.descricao) <= 255
   |                                ^^^
57 |     assert e.ip_address == "0.0.0.0"
58 |     assert e.user_agent == "N/A"
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\user_management\management\test_management_profiles.py:30:113
   |
28 |     call_command("sync_profiles", "--dry-run")
29 |     # Nada deve ter sido criado (já que dry-run) mas contagem de perfis será a existente menos removidos
30 |     assert PerfilUsuarioEstendido.objects.exclude(user__username__in=["prof_sync_1", "prof_sync_3"]).count() >= 2
   |                                                                                                                 ^
31 |     # Execução real verbose
32 |     call_command("sync_profiles", "--verbose")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_audit_orphan_permissions.py:10:5
   |
 8 | @pytest.mark.django_db
 9 | def test_audit_orphan_permissions_reports(capsys):
10 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     from user_management.models import PermissaoPersonalizada
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_audit_orphan_permissions.py:11:5
   |
 9 | def test_audit_orphan_permissions_reports(capsys):
10 |     from core.models import Tenant
11 |     from user_management.models import PermissaoPersonalizada
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |
13 |     u = User.objects.create(username="x")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_twofa_basic.py:9:5
   |
 7 | @pytest.mark.django_db
 8 | def test_twofa_setup_confirm_and_lockout(settings):
 9 |     from user_management.models import PerfilUsuarioEstendido as Perfil
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |     from user_management.twofa import confirm_2fa, rate_limit_check, setup_2fa
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_twofa_basic.py:10:5
   |
 8 | def test_twofa_setup_confirm_and_lockout(settings):
 9 |     from user_management.models import PerfilUsuarioEstendido as Perfil
10 |     from user_management.twofa import confirm_2fa, rate_limit_check, setup_2fa
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |
12 |     user = User.objects.create_user("u2fa", password="x")
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_twofa_basic.py:21:5
   |
19 |     assert profile.failed_2fa_attempts == 1
20 |     # Gerar token válido
21 |     import pyotp
   |     ^^^^^^^^^^^^
22 |
23 |     token = pyotp.TOTP(secret).now()
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_twofa_basic.py:37:5
   |
35 | @pytest.mark.django_db
36 | def test_twofa_recovery_code_usage(settings):
37 |     from user_management.models import PerfilUsuarioEstendido as Perfil
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
38 |     from user_management.twofa import setup_2fa, use_recovery_code
   |

PLC0415 `import` should be at the top-level of a file
  --> tests\user_management\test_twofa_basic.py:38:5
   |
36 | def test_twofa_recovery_code_usage(settings):
37 |     from user_management.models import PerfilUsuarioEstendido as Perfil
38 |     from user_management.twofa import setup_2fa, use_recovery_code
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
39 |
40 |     user = User.objects.create_user("u2fa_rc", password="x")
   |

PLR2004 Magic value used in comparison, consider replacing `4` with a constant variable
  --> tests\user_management\test_twofa_service.py:27:26
   |
26 |     codes = generate_backup_codes(perfil, count=4)
27 |     assert len(codes) == 4
   |                          ^
28 |     # Hashes armazenados
29 |     assert len(perfil.totp_recovery_codes) == 4
   |

PLR2004 Magic value used in comparison, consider replacing `4` with a constant variable
  --> tests\user_management\test_twofa_service.py:29:47
   |
27 |     assert len(codes) == 4
28 |     # Hashes armazenados
29 |     assert len(perfil.totp_recovery_codes) == 4
   |                                               ^
30 |
31 |     # Consumir um código válido
   |

PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
  --> tests\user_management\test_twofa_service.py:34:47
   |
32 |     ok = verify_and_consume_backup_code(perfil, codes[0])
33 |     assert ok is True
34 |     assert len(perfil.totp_recovery_codes) == 3
   |                                               ^
35 |
36 |     # Reutilização deve falhar
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\user_management\test_twofa_service.py:52:42
   |
50 |     perfil.refresh_from_db()
51 |     assert perfil.twofa_success_count == 1
52 |     assert perfil.twofa_failure_count == 2
   |                                          ^
53 |     assert perfil.twofa_rate_limit_block_count == 1
54 |     assert perfil.failed_2fa_attempts >= 2
   |

PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
  --> tests\user_management\test_twofa_service.py:54:42
   |
52 |     assert perfil.twofa_failure_count == 2
53 |     assert perfil.twofa_rate_limit_block_count == 1
54 |     assert perfil.failed_2fa_attempts >= 2
   |                                          ^
55 |
56 |     masked = mask_secret("ABCDEFGHIJKLMNOP")
   |

PLC0415 `import` should be at the top-level of a file
  --> treinamento\views.py:56:9
   |
55 |         # Estatísticas recentes (últimos 30 dias)
56 |         from datetime import datetime, timedelta
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
57 |
58 |         thirty_days_ago = datetime.now() - timedelta(days=30)
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\admin.py:76:9
   |
75 |     def resetar_2fa(self, request, queryset):
76 |         from .twofa import disable_2fa
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
77 |
78 |         count = 0
   |

E501 Line too long (123 > 120)
  --> user_management\auth_backends.py:42:121
   |
40 |         if perfil and perfil.tentativas_login_falhadas:
41 |             # DEBUG: reset tentativas
42 |             # print(f"[DEBUG auth_backend] reset tentativas user={user.username} antes={perfil.tentativas_login_falhadas}")
   |                                                                                                                         ^^^
43 |             perfil.tentativas_login_falhadas = 0
44 |             perfil.save(update_fields=["tentativas_login_falhadas"])
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\consumers.py:68:9
   |
66 |     @database_sync_to_async
67 |     def _recent_sessions(self, limit=50):
68 |         from .models import SessaoUsuario
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
69 |
70 |         qs = list(SessaoUsuario.objects.filter(ativa=True).select_related("user").order_by("-ultima_atividade")[:limit])
   |

PLC0415 `import` should be at the top-level of a file
   --> user_management\forms.py:112:21
    |
110 |             if self.tenant:
111 |                 try:
112 |                     from core.models import TenantUser
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
113 |
114 |                     TenantUser.objects.get_or_create(tenant=self.tenant, user=user)
    |

PLR0912 Too many branches (14 > 12)
   --> user_management\forms.py:167:9
    |
165 |         }
166 |
167 |     def __init__(self, *args, **kwargs):
    |         ^^^^^^^^
168 |         self.request_user = kwargs.pop("request_user", None)
169 |         self.tenant = kwargs.pop("tenant", None)
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\forms.py:308:13
    |
306 |         # Campo scope_tenant opcional (quando não informado => permissão global)
307 |         if "scope_tenant" in self.fields:
308 |             from core.models import Tenant
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
309 |
310 |             if self.tenant:
    |

PLC0415 `import` should be at the top-level of a file
  --> user_management\management\commands\audit_orphan_permissions.py:13:9
   |
12 |     def handle(self, *args, **options):
13 |         from shared.services.permission_resolver import permission_resolver
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
14 |         from user_management.models import PermissaoPersonalizada
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\management\commands\audit_orphan_permissions.py:14:9
   |
12 |     def handle(self, *args, **options):
13 |         from shared.services.permission_resolver import permission_resolver
14 |         from user_management.models import PermissaoPersonalizada
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 |         tenant_id = options.get("tenant")
   |

E501 Line too long (169 > 120)
  --> user_management\management\commands\audit_orphan_permissions.py:50:121
   |
48 | …
49 | …
50 | …nant_id} acao='{p.acao}' modulo='{p.modulo}' recurso='{p.recurso}' concedida={p.concedida}"
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
51 | …
   |

E501 Line too long (136 > 120)
  --> user_management\management\commands\sync_profiles.py:11:121
   |
10 | …
11 | …e criação, ajusta status conforme user.is_active e reporta discrepâncias."
   |                                                            ^^^^^^^^^^^^^^^^
12 | …
13 | …
   |

PLR0912 Too many branches (14 > 12)
  --> user_management\management\commands\sync_profiles.py:17:9
   |
15 |         parser.add_argument("--verbose", action="store_true", help="Lista cada usuário processado.")
16 |
17 |     def handle(self, *args, **options):
   |         ^^^^^^
18 |         dry = options["dry_run"]
19 |         verbose = options["verbose"]
   |

PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
  --> user_management\management\commands\sync_profiles.py:62:39
   |
60 |             for u, atual, exp in inconsistencias[:10]:
61 |                 self.stdout.write(f" - {u}: {atual} -> {exp}")
62 |             if len(inconsistencias) > 10:
   |                                       ^^
63 |                 self.stdout.write(f"   ... (+{len(inconsistencias) - 10} outras)")
64 |         self.stdout.write(self.style.SUCCESS("Sincronização concluída."))
   |

E501 Line too long (124 > 120)
  --> user_management\management\commands\twofa_reencrypt_secrets.py:8:121
   |
 7 | class Command(BaseCommand):
 8 |     help = "Recriptografa todos os segredos TOTP usando a chave Fernet primária atual. Pode também cifrar legados em claro."
   |                                                                                                                         ^^^^
 9 |
10 |     def add_arguments(self, parser):
   |

E501 Line too long (136 > 120)
  --> user_management\management\commands\twofa_reencrypt_secrets.py:45:121
   |
43 | …
44 | …
45 | …ados (após filtros/limit): {to_process}, legacy plaintext: {plain_legacy}"
   |                                                            ^^^^^^^^^^^^^^^^
46 | …
47 | …
   |

E501 Line too long (126 > 120)
  --> user_management\management\commands\twofa_reencrypt_secrets.py:49:121
   |
47 |         else:
48 |             self.stdout.write(
49 |                 f"Recriptografia concluída. Processados: {to_process}, alterados: {changed}, legacy plaintext: {plain_legacy}"
   |                                                                                                                         ^^^^^^
50 |             )
   |

E501 Line too long (133 > 120)
  --> user_management\management\commands\twofa_status_report.py:11:121
   |
10 | class Command(BaseCommand):
11 |     help = "Gera relatório de status do 2FA (totp configurado, confirmado, criptografado, lockouts etc). Use --json para saída JSON."
   |                                                                                                                         ^^^^^^^^^^^^^
12 |
13 |     def add_arguments(self, parser):
   |

PLR0912 Too many branches (13 > 12)
  --> user_management\management\commands\twofa_status_report.py:17:9
   |
15 |         parser.add_argument("--detailed", action="store_true", help="Lista usuários em anomalia")
16 |
17 |     def handle(self, *args, **options):
   |         ^^^^^^
18 |         qs = PerfilUsuarioEstendido.objects.select_related("user")
19 |         total_perfis = qs.count()
   |

PLR0911 Too many return statements (9 > 6)
  --> user_management\middleware_twofa.py:15:9
   |
13 |     """
14 |
15 |     def process_request(self, request):
   |         ^^^^^^^^^^^^^^^
16 |         if not request.user.is_authenticated:
17 |             return None
   |

E722 Do not use bare `except`
  --> user_management\models.py:16:5
   |
14 |     try:
15 |         return self.perfil_estendido.avatar
16 |     except Exception:
   |     ^^^^^^
17 |         return None
   |

E722 Do not use bare `except`
  --> user_management\models.py:24:5
   |
22 |     try:
23 |         return self.perfil_estendido.avatar_url
24 |     except Exception:
   |     ^^^^^^
25 |         return None
   |

E501 Line too long (124 > 120)
   --> user_management\models.py:160:121
    |
158 |         """Retorna HTML para exibir avatar ou iniciais"""
159 |         if self.avatar:
160 |             return f'<img src="{self.avatar.url}" alt="{self.nome_completo}" class="rounded-circle" width="40" height="40">'
    |                                                                                                                         ^^^^
161 |         else:
162 |             iniciais = ""
    |

E501 Line too long (172 > 120)
   --> user_management\models.py:169:121
    |
167 | …
168 | …
169 | …nter justify-content-center text-white" style="width: 40px; height: 40px;">{iniciais}</div>'
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

E402 Module level import not at top of file
   --> user_management\models.py:321:1
    |
320 | # Signals para invalidar cache de permissões
321 | from django.db.models.signals import post_delete, post_save
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
322 | from django.dispatch import receiver
    |

E402 Module level import not at top of file
   --> user_management\models.py:322:1
    |
320 | # Signals para invalidar cache de permissões
321 | from django.db.models.signals import post_delete, post_save
322 | from django.dispatch import receiver
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\models.py:331:9
    |
329 |     """
330 |     try:
331 |         from shared.services.permission_resolver import permission_resolver
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
332 |
333 |         if instance.scope_tenant_id:
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\models.py:345:9
    |
343 | def invalidate_perm_cache_delete(sender, instance, **kwargs):
344 |     try:
345 |         from shared.services.permission_resolver import permission_resolver
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
346 |
347 |         if instance.scope_tenant_id:
    |

PLC0415 `import` should be at the top-level of a file
  --> user_management\risk.py:23:5
   |
21 | def compute_risks(sessao, ips_por_usuario=None, paises_por_usuario=None):
22 |     risks = []
23 |     from .models import SessaoUsuario
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |
25 |     # Novo IP (primeira vez que aparece para o user em sessões anteriores ativas/inativas)
   |

PLR2004 Magic value used in comparison, consider replacing `7200` with a constant variable
  --> user_management\risk.py:39:69
   |
37 |             risks.append("novo_ip")
38 |     # Inatividade longa
39 |     if (timezone.now() - sessao.ultima_atividade).total_seconds() > 7200:  # >2h
   |                                                                     ^^^^
40 |         risks.append("inativo_longo")
41 |     # Múltiplos IPs simultâneos
   |

E501 Line too long (139 > 120)
 --> user_management\services\logging_service.py:3:121
  |
1 | …
2 | …
3 | …quisados: LogAtividadeUsuario.objects.create, log_activity, logging_service.
  |                                                           ^^^^^^^^^^^^^^^^^^^
4 | …palhadas por signals e views.
  |

PLR0913 Too many arguments in function definition (8 > 5)
  --> user_management\services\logging_service.py:45:5
   |
45 | def log_activity(
   |     ^^^^^^^^^^^^
46 |     user,
47 |     acao: str,
   |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
  --> user_management\services\logging_service.py:68:5
   |
66 |       # GenericIPAddressField aceita IPv4/IPv6 – '0.0.0.0' é válido universal.
67 |       safe_ua = (user_agent or "N/A")[:255]
68 | /     try:
69 | |         LogAtividadeUsuario.objects.create(
70 | |             user=user,
71 | |             acao=(acao or "")[:100],
72 | |             modulo=(modulo or "")[:50],
73 | |             descricao=(descricao or "")[:255],
74 | |             ip_address=safe_ip,
75 | |             user_agent=safe_ua,
76 | |             extra_json=_serialize_extra(extra),
77 | |         )
78 | |     except Exception:  # pragma: no cover - não queremos derrubar fluxo
79 | |         pass
   | |____________^
   |
help: Replace with `contextlib.suppress(Exception)`

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> user_management\services\logging_service.py:110:9
    |
108 |               continue
109 |       if objs:
110 | /         try:
111 | |             LogAtividadeUsuario.objects.bulk_create(objs, ignore_conflicts=True)
112 | |         except Exception:  # pragma: no cover
113 | |             pass
    | |________________^
    |
help: Replace with `contextlib.suppress(Exception)`

PLR0913 Too many arguments in function definition (6 > 5)
  --> user_management\services\permission_resolver.py:18:5
   |
18 | def user_has_permission(
   |     ^^^^^^^^^^^^^^^^^^^
19 |     user, modulo: str, acao: str, recurso: str | None = None, scope_tenant_id: int | None = None, request=None
20 | ) -> bool:  # noqa: D401
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\services\permission_resolver.py:34:5
   |
32 |         return False
33 |     # Recupera tenant dinamicamente apenas quando necessário (lazy import)
34 |     from core.models import Tenant
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |
36 |     try:
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\services\profile_service.py:43:5
   |
41 |     Corrige import para usar core.models.TenantUser (não existe em user_management.models).
42 |     """
43 |     from core.models import TenantUser  # import local para evitar circular em migrações
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
44 |
45 |     tu, created = TenantUser.objects.get_or_create(user=user, tenant=tenant)
   |

E501 Line too long (121 > 120)
  --> user_management\services\twofa_service.py:14:121
   |
12 | - Códigos de recuperação: lista de strings tipo XXXX-YYYY (2 blocos base32 reduzidos) ou fallback hex.
13 | - Hash: sha256 em formato hex. Guardamos lista de hashes em perfil.totp_recovery_codes.
14 | - Verificação de código: comparar hash constante; se achar remove hash (consumido) e incrementa twofa_recovery_use_count.
   |                                                                                                                         ^
15 | - Todas operações silenciam exceções para não derrubar fluxo (retornam None/False em erro).
16 | """
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\services\twofa_service.py:32:5
   |
30 | def _derive_key(seed: str) -> bytes:
31 |     raw = hashlib.sha256(seed.encode()).digest()
32 |     import base64 as _b64
   |     ^^^^^^^^^^^^^^^^^^^^^
33 |
34 |     return _b64.urlsafe_b64encode(raw)
   |

PLW0603 Using the global statement to update `_FERNET_PRIMARY` is discouraged
  --> user_management\services\twofa_service.py:38:12
   |
37 | def _init_fernets():
38 |     global _FERNET_PRIMARY, _FERNET_FALLBACKS
   |            ^^^^^^^^^^^^^^^
39 |     if _FERNET_PRIMARY:
40 |         return
   |

PLW0603 Using the global statement to update `_FERNET_FALLBACKS` is discouraged
  --> user_management\services\twofa_service.py:38:29
   |
37 | def _init_fernets():
38 |     global _FERNET_PRIMARY, _FERNET_FALLBACKS
   |                             ^^^^^^^^^^^^^^^^^
39 |     if _FERNET_PRIMARY:
40 |         return
   |

PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
   --> user_management\services\twofa_service.py:188:23
    |
186 |     if not secret:
187 |         return ""
188 |     if len(secret) <= 8:
    |                       ^
189 |         return "*" * len(secret)
190 |     return secret[:4] + ("*" * (len(secret) - 8)) + secret[-4:]
    |

PLR0912 Too many branches (17 > 12)
  --> user_management\signals.py:66:5
   |
65 | @receiver(user_logged_in)
66 | def usuario_logou(sender, request, user, **kwargs):
   |     ^^^^^^^^^^^^^
67 |     """Registrar login do usuário"""
   |

PLR0915 Too many statements (70 > 50)
  --> user_management\signals.py:66:5
   |
65 | @receiver(user_logged_in)
66 | def usuario_logou(sender, request, user, **kwargs):
   |     ^^^^^^^^^^^^^
67 |     """Registrar login do usuário"""
   |

PLC0415 `import` should be at the top-level of a file
   --> user_management\signals.py:110:13
    |
108 |     try:
109 |         if getattr(settings, "PERMISSION_WARMUP_ON_LOGIN", True):
110 |             from core.utils import get_current_tenant
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
111 |
112 |             tenant = get_current_tenant(request)
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\signals.py:117:21
    |
115 |             if tenant is None:
116 |                 try:
117 |                     from core.models import Tenant  # import local para evitar ciclos
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
118 |
119 |                     tid = None
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
   --> user_management\signals.py:141:21
    |
139 |                   common_actions = getattr(settings, "PERMISSION_WARMUP_ACTIONS", ["VIEW_DASHBOARD_PUBLIC"])
140 |                   for act in common_actions:
141 | /                     try:
142 | |                         # resolve() já popula o cache com TTL padrão
143 | |                         permission_resolver.resolve(user, tenant, act)
144 | |                     except Exception:
145 | |                         pass
    | |____________________________^
146 |       except Exception:
147 |           # Nunca impacta o fluxo de login
    |
help: Replace with `contextlib.suppress(Exception)`

E501 Line too long (151 > 120)
   --> user_management\signals.py:205:121
    |
203 | …
204 | …
205 | …ndido.tentativas_login_falhadas if hasattr(user, 'perfil_estendido') else '?'})",
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
206 | …
207 | …
    |

E501 Line too long (122 > 120)
   --> user_management\signals.py:231:121
    |
229 |         except Exception as e:  # pragma: no cover - fallback
230 |             print(
231 |                 f"Erro ao registrar tentativa de login com usuário inexistente: {username} - IP: {ip_address} - Erro: {e}"
    |                                                                                                                         ^^
232 |             )
    |

PLW0603 Using the global statement to update `_FERNET_PRIMARY` is discouraged
  --> user_management\twofa.py:45:12
   |
44 | def _init_fernets():
45 |     global _FERNET_PRIMARY, _FERNET_FALLBACKS
   |            ^^^^^^^^^^^^^^^
46 |     if _FERNET_PRIMARY:
47 |         return
   |

PLW0603 Using the global statement to update `_FERNET_FALLBACKS` is discouraged
  --> user_management\twofa.py:45:29
   |
44 | def _init_fernets():
45 |     global _FERNET_PRIMARY, _FERNET_FALLBACKS
   |                             ^^^^^^^^^^^^^^^^^
46 |     if _FERNET_PRIMARY:
47 |         return
   |

PLC0415 `import` should be at the top-level of a file
  --> user_management\views.py:93:9
   |
92 |         # Contar sessões ativas do Django
93 |         from django.contrib.sessions.models import Session
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
94 |
95 |         sessoes_ativas = Session.objects.filter(expire_date__gte=timezone.now()).count()
   |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:275:13
    |
273 |             tu_qs = tu_qs.none()
274 |         if tu_qs.exists():
275 |             from django.urls import reverse
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
276 |
277 |             context["reset_password_url"] = reverse("core:tenant_user_reset_password", args=[tu_qs.first().pk])
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:351:13
    |
349 |             tu_qs = tu_qs.none()
350 |         if tu_qs.exists():
351 |             from django.urls import reverse
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
352 |
353 |             context["reset_password_url"] = reverse("core:tenant_user_reset_password", args=[tu_qs.first().pk])
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:492:13
    |
490 |         # Associa usuário ao tenant do convite
491 |         if self.convite.tenant:
492 |             from core.models import TenantUser
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
493 |
494 |             TenantUser.objects.get_or_create(user=user, tenant=self.convite.tenant)
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:539:13
    |
537 |         if self.required_modulo and self.required_acao:
538 |             # Uso do resolver unificado (modernizado). Ação canônica: ACAO_MODULO em UPPER.
539 |             from shared.services.permission_resolver import has_permission  # import local p/ evitar ciclo em cold start
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
540 |
541 |             tenant = None
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:546:17
    |
544 |             action = f"{self.required_acao}_{self.required_modulo}".upper()
545 |             if not (tenant and has_permission(request.user, tenant, action, self.required_recurso)):
546 |                 from django.http import HttpResponseForbidden
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
547 |
548 |                 return HttpResponseForbidden("Permissão negada")
    |

E501 Line too long (122 > 120)
   --> user_management\views.py:708:121
    |
706 |     def get(self, request, pk):
707 |         sessao = get_object_or_404(SessaoUsuario, pk=pk)
708 |         # Autorizações: superuser ou dono da sessão (futuramente: tenant admin do mesmo tenant caso relacionamento exista)
    |                                                                                                                         ^^
709 |         if not request.user.is_superuser and sessao.user != request.user:
710 |             return JsonResponse({"detail": "Sem permissão."}, status=403)
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:761:17
    |
759 |             if not perfil.totp_recovery_codes:
760 |                 # Regerar hashes se perdidos (não deve acontecer, mas garante consistência)
761 |                 from .twofa import hash_code
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
762 |
763 |                 perfil.totp_recovery_codes = [hash_code(c) for c in raw_codes]
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:794:9
    |
792 |         if not target_id:
793 |             return JsonResponse({"detail": "user_id requerido"}, status=400)
794 |         from django.contrib.auth import get_user_model
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
795 |
796 |         User = get_user_model()
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:838:9
    |
836 |         if not request.user.is_superuser:
837 |             return JsonResponse({"detail": "Somente superusuário."}, status=403)
838 |         from django.db.models import Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
839 |
840 |         qs = PerfilUsuarioEstendido.objects.all()
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:874:9
    |
872 |         if not (request.user.is_staff or request.user.is_superuser):
873 |             return JsonResponse({"detail": "forbidden"}, status=403)
874 |         from django.db.models import Count, Q, Sum
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
875 |
876 |         agg = PerfilUsuarioEstendido.objects.aggregate(
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:931:5
    |
929 |     Usa igualdade exata (==) com thresholds; cooldown por (user,threshold).
930 |     """
931 |     from django.conf import settings as _s
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
932 |
933 |     try:
    |

E501 Line too long (141 > 120)
   --> user_management\views.py:942:121
    |
940 | …
941 | …l})",
942 | …rificação 2FA em sua conta. Se não foi você, considere ações de segurança.",
    |                                                         ^^^^^^^^^^^^^^^^^^^^^
943 | …
944 | …
    |

PLR0911 Too many return statements (7 > 6)
   --> user_management\views.py:953:9
    |
952 | class TwoFAConfirmView(LoginRequiredMixin, View):
953 |     def post(self, request):
    |         ^^^^
954 |         data = {}
955 |         if request.content_type == "application/json":
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:956:13
    |
954 |         data = {}
955 |         if request.content_type == "application/json":
956 |             import json
    |             ^^^^^^^^^^^
957 |
958 |             with contextlib.suppress(Exception):
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:966:13
    |
964 |         # Lockout pré-existente (reuso da mesma semântica da verify)
965 |         if getattr(perfil, "twofa_locked_until", None):
966 |             from django.utils import timezone
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
967 |
968 |             if perfil.twofa_locked_until and perfil.twofa_locked_until > timezone.now():
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:990:9
    |
988 |             return JsonResponse({"status": "ok"})
989 |         # Falha: confirm_2fa já incrementou failed_2fa_attempts e twofa_failure_count
990 |         from django.conf import settings as _s
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
991 |
992 |         lock_applied = False
    |

PLC0415 `import` should be at the top-level of a file
   --> user_management\views.py:996:17
    |
994 |         if perfil.failed_2fa_attempts >= threshold:
995 |             try:
996 |                 from django.utils import timezone
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
997 |
998 |                 minutos = getattr(_s, "TWOFA_LOCK_MINUTES", 5)
    |

SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
    --> user_management\views.py:1009:13
     |
1007 |               emit_twofa_failure_alert(request, perfil, "confirm")
1008 |           if lock_applied:
1009 | /             try:
1010 | |                 pass  # remove debug logging
1011 | |             except Exception:
1012 | |                 pass
     | |____________________^
1013 |               return JsonResponse({"detail": RATE_MSG_LOCK}, status=423)
1014 |           return JsonResponse({"detail": "Token inválido"}, status=400)
     |
help: Replace with `contextlib.suppress(Exception)`

PLR0911 Too many return statements (8 > 6)
    --> user_management\views.py:1034:9
     |
1033 | class TwoFAVerifyView(LoginRequiredMixin, View):
1034 |     def post(self, request):
     |         ^^^^
1035 |         data = {}
1036 |         if request.content_type == "application/json":
     |

PLR0912 Too many branches (17 > 12)
    --> user_management\views.py:1034:9
     |
1033 | class TwoFAVerifyView(LoginRequiredMixin, View):
1034 |     def post(self, request):
     |         ^^^^
1035 |         data = {}
1036 |         if request.content_type == "application/json":
     |

PLR0915 Too many statements (75 > 50)
    --> user_management\views.py:1034:9
     |
1033 | class TwoFAVerifyView(LoginRequiredMixin, View):
1034 |     def post(self, request):
     |         ^^^^
1035 |         data = {}
1036 |         if request.content_type == "application/json":
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1037:13
     |
1035 |         data = {}
1036 |         if request.content_type == "application/json":
1037 |             import json
     |             ^^^^^^^^^^^
1038 |
1039 |             with contextlib.suppress(Exception):
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1046:13
     |
1044 |         # Lockout check
1045 |         if getattr(perfil, "twofa_locked_until", None):
1046 |             from django.utils import timezone
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1047 |
1048 |             if perfil.twofa_locked_until and perfil.twofa_locked_until > timezone.now():
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1146:9
     |
1144 |         lock_applied = False
1145 |         # Threshold e duração de lock vindos de settings
1146 |         from django.conf import settings as _s
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1147 |
1148 |         if perfil.failed_2fa_attempts >= getattr(_s, "TWOFA_LOCK_THRESHOLD", 5):
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1149:13
     |
1148 |         if perfil.failed_2fa_attempts >= getattr(_s, "TWOFA_LOCK_THRESHOLD", 5):
1149 |             from django.utils import timezone
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1150 |
1151 |             minutos = getattr(_s, "TWOFA_LOCK_MINUTES", 5)
     |

PLR0911 Too many return statements (7 > 6)
    --> user_management\views.py:1181:9
     |
1179 |     """
1180 |
1181 |     def post(self, request):
     |         ^^^^
1182 |         perfil = request.user.perfil_estendido
1183 |         if not (perfil.autenticacao_dois_fatores and perfil.totp_secret and perfil.totp_confirmed_at):
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1202:13
     |
1200 |             return JsonResponse({"detail": RATE_MSG_MICRO}, status=429)
1201 |         if getattr(perfil, "twofa_locked_until", None):
1202 |             from django.utils import timezone
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1203 |
1204 |             if perfil.twofa_locked_until and perfil.twofa_locked_until > timezone.now():
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1208:13
     |
1206 |         data = {}
1207 |         if request.content_type == "application/json":
1208 |             import json
     |             ^^^^^^^^^^^
1209 |
1210 |             with contextlib.suppress(Exception):
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1215:9
     |
1213 |         if not token:
1214 |             return JsonResponse({"detail": "Token obrigatório."}, status=400)
1215 |         from .twofa import generate_recovery_codes, hash_code, verify_totp
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1216 |
1217 |         secret_value = perfil.totp_secret
     |

PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
    --> user_management\views.py:1223:46
     |
1221 |             perfil.failed_2fa_attempts += 1
1222 |             lock_applied = False
1223 |             if perfil.failed_2fa_attempts >= 5:
     |                                              ^
1224 |                 from django.utils import timezone
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1224:17
     |
1222 |             lock_applied = False
1223 |             if perfil.failed_2fa_attempts >= 5:
1224 |                 from django.utils import timezone
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1225 |
1226 |                 perfil.twofa_locked_until = timezone.now() + timezone.timedelta(minutes=5)
     |

E501 Line too long (126 > 120)
    --> user_management\views.py:1250:121
     |
1248 |             send_mail(
1249 |                 "[PandoraERP] Recovery codes regenerados",
1250 |                 "Seus códigos de recuperação foram regenerados. Guarde-os em local seguro. Eles são exibidos apenas uma vez.",
     |                                                                                                                         ^^^^^^
1251 |                 settings.DEFAULT_FROM_EMAIL,
1252 |                 [request.user.email],
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1268:13
     |
1266 |         data = {}
1267 |         if request.content_type == "application/json":
1268 |             import json
     |             ^^^^^^^^^^^
1269 |
1270 |             with contextlib.suppress(Exception):
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1280:9
     |
1278 |         except Exception:
1279 |             return JsonResponse({"detail": "Usuário não encontrado."}, status=404)
1280 |         from .twofa import disable_2fa
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1281 |
1282 |         disable_2fa(perfil)
     |

F811 Redefinition of unused `TwoFAAdminForceRegenerateView` from line 783
    --> user_management\views.py:1306:7
     |
1306 | class TwoFAAdminForceRegenerateView(LoginRequiredMixin, View):
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `TwoFAAdminForceRegenerateView` redefined here
1307 |     """Superuser força nova geração de códigos de recuperação sem token do usuário.
1308 |     POST {"user_id": <id>}
     |
    ::: user_management\views.py:783:7
     |
 783 | class TwoFAAdminForceRegenerateView(LoginRequiredMixin, View):
     |       ----------------------------- previous definition of `TwoFAAdminForceRegenerateView` here
 784 |     """Gera novos recovery codes para o usuário (sem exigir token) mantendo mesmo secret.
 785 |     Uso: emergência (suspeita de vazamento de códigos). Registra auditoria.
     |
help: Remove definition: `TwoFAAdminForceRegenerateView`

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1317:13
     |
1315 |         data = {}
1316 |         if request.content_type == "application/json":
1317 |             import json
     |             ^^^^^^^^^^^
1318 |
1319 |             with contextlib.suppress(Exception):
     |

E501 Line too long (128 > 120)
    --> user_management\views.py:1348:121
     |
1346 |                 send_mail(
1347 |                     "[PandoraERP] Novos recovery codes gerados pelo administrador",
1348 |                     "Um administrador gerou novos códigos de recuperação para sua conta. Os códigos antigos foram invalidados.",
     |                                                                                                                         ^^^^^^^^
1349 |                     settings.DEFAULT_FROM_EMAIL,
1350 |                     [target.email],
     |

PLC0415 `import` should be at the top-level of a file
    --> user_management\views.py:1368:9
     |
1367 |     def post(self, request):
1368 |         import json
     |         ^^^^^^^^^^^
1369 |
1370 |         ids = []
     |

PLR0912 Too many branches (16 > 12)
    --> user_management\views.py:1441:9
     |
1439 |     """API JSON para listagem paginada e filtrada de sessões com riscos."""
1440 |
1441 |     def get(self, request):
     |         ^^^
1442 |         qs = SessaoUsuario.objects.all().select_related("user")
1443 |         # Escopo tenant se não superuser
     |

PLR0915 Too many statements (53 > 50)
    --> user_management\views.py:1441:9
     |
1439 |     """API JSON para listagem paginada e filtrada de sessões com riscos."""
1440 |
1441 |     def get(self, request):
     |         ^^^
1442 |         qs = SessaoUsuario.objects.all().select_related("user")
1443 |         # Escopo tenant se não superuser
     |

SIM108 Use ternary operator `qs = qs.filter(user__tenant_memberships__tenant_id=tenant.id) if tenant else qs.filter(user=request.user)` instead of `if`-`else`-block
    --> user_management\views.py:1446:13
     |
1444 |           if not request.user.is_superuser:
1445 |               tenant = getattr(request, "tenant", None)
1446 | /             if tenant:
1447 | |                 qs = qs.filter(user__tenant_memberships__tenant_id=tenant.id)
1448 | |             else:
1449 | |                 qs = qs.filter(user=request.user)  # fallback restrito
     | |_________________________________________________^
1450 |
1451 |           # Filtros básicos
     |
help: Replace `if`-`else`-block with `qs = qs.filter(user__tenant_memberships__tenant_id=tenant.id) if tenant else qs.filter(user=request.user)`

E402 Module level import not at top of file
    --> user_management\views.py:1601:1
     |
1601 | from django.contrib.auth.views import PasswordChangeView
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |

Found 1709 errors.
