# Generated by Django 5.1.5 on 2025-08-14 21:56

import django.core.validators
import django.db.models.deletion
import fornecedores.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cadastros_gerais', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_pessoa', models.CharField(choices=[('PJ', 'Pessoa Jurídica'), ('PF', 'Pessoa Física')], default='PJ', max_length=2, verbose_name='Tipo de Pessoa')),
                ('tipo_fornecimento', models.CharField(blank=True, choices=[('PRODUTOS', 'Produtos'), ('SERVICOS', 'Serviços'), ('AMBOS', 'Ambos')], max_length=10, null=True, verbose_name='Tipo de Fornecimento')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('suspended', 'Suspenso')], default='active', max_length=10, verbose_name='Status')),
                ('status_homologacao', models.CharField(choices=[('aprovado', 'Aprovado'), ('pendente', 'Pendente'), ('reprovado', 'Reprovado')], default='pendente', max_length=10, verbose_name='Status de Homologação')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=fornecedores.models.fornecedor_logo_path, verbose_name='Logo / Imagem')),
                ('avaliacao', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Avaliação (1-5)')),
                ('condicoes_pagamento', models.TextField(blank=True, null=True, verbose_name='Condições Padrão de Pagamento')),
                ('regioes_atendidas', models.TextField(blank=True, null=True, verbose_name='Regiões Atendidas (UFs/Cidades)')),
                ('prazo_pagamento_dias', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Prazo de Pagamento Padrão (dias)')),
                ('pedido_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Pedido Mínimo (valor)')),
                ('prazo_medio_entrega_dias', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Prazo Médio de Entrega (dias)')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Gerais')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorias_fornecedores', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Categoria de Fornecedor',
                'verbose_name_plural': 'Categorias de Fornecedores',
                'unique_together': {('tenant', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='FornecedorPF',
            fields=[
                ('fornecedor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='pessoafisica', serialize=False, to='fornecedores.fornecedor')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(blank=True, max_length=10, null=True, verbose_name='Sexo')),
                ('naturalidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Naturalidade')),
                ('nacionalidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nacionalidade')),
                ('nome_mae', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Pai')),
                ('estado_civil', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado Civil')),
                ('profissao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profissão')),
            ],
        ),
        migrations.CreateModel(
            name='FornecedorPJ',
            fields=[
                ('fornecedor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='pessoajuridica', serialize=False, to='fornecedores.fornecedor')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(max_length=255, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Municipal')),
                ('data_fundacao', models.DateField(blank=True, null=True, verbose_name='Data de Fundação')),
                ('data_abertura', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('porte_empresa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Porte da Empresa')),
                ('ramo_atividade', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ramo de Atividade')),
                ('cnae_principal', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNAE Principal')),
                ('cnae_secundarios', models.TextField(blank=True, null=True, verbose_name='CNAEs Secundários')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('redes_sociais', models.CharField(blank=True, max_length=255, null=True, verbose_name='Redes Sociais')),
                ('nome_responsavel_financeiro', models.CharField(blank=True, max_length=150, null=True, verbose_name='Responsável Financeiro')),
                ('nome_responsavel_comercial', models.CharField(blank=True, max_length=150, null=True, verbose_name='Responsável Comercial')),
                ('nome_responsavel_tecnico', models.CharField(blank=True, max_length=150, null=True, verbose_name='Responsável Técnico')),
            ],
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='categoria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fornecedores.categoriafornecedor', verbose_name='Categoria'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='linhas_fornecidas',
            field=models.ManyToManyField(blank=True, related_name='fornecedores', to='cadastros_gerais.itemauxiliar', verbose_name='Linhas/Categorias Fornecidas'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fornecedores', to='core.tenant', verbose_name='Empresa (Tenant)'),
        ),
        migrations.CreateModel(
            name='EnderecoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=20)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=2, verbose_name='UF')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to='fornecedores.fornecedor')),
            ],
        ),
        migrations.CreateModel(
            name='DadosBancariosFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(max_length=100, verbose_name='Banco')),
                ('agencia', models.CharField(max_length=20, verbose_name='Agência')),
                ('conta', models.CharField(max_length=20, verbose_name='Conta Corrente/Poupança')),
                ('tipo_chave_pix', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de Chave PIX')),
                ('chave_pix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Chave PIX')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dados_bancarios', to='fornecedores.fornecedor')),
            ],
        ),
        migrations.CreateModel(
            name='ContatoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Contato')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('cargo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='fornecedores.fornecedor')),
            ],
        ),
        migrations.CreateModel(
            name='FornecedorDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicidade', models.CharField(choices=[('nenhuma', 'Não se aplica'), ('mensal', 'Mensal'), ('anual', 'Anual'), ('eventual', 'Eventual'), ('personalizada', 'Personalizada')], default='nenhuma', max_length=20, verbose_name='Periodicidade')),
                ('exigencia', models.CharField(choices=[('obrigatorio', 'Obrigatório'), ('recomendado', 'Recomendado'), ('opcional', 'Opcional')], default='obrigatorio', max_length=20, verbose_name='Exigência')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='fornecedores.fornecedor', verbose_name='Fornecedor')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentos_fornecedor', to='cadastros_gerais.itemauxiliar', verbose_name='Tipo de Documento')),
            ],
            options={
                'verbose_name': 'Documento de Fornecedor',
                'verbose_name_plural': 'Documentos de Fornecedor',
            },
        ),
        migrations.CreateModel(
            name='FornecedorDocumentoVersao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versao', models.PositiveIntegerField(verbose_name='Versão')),
                ('arquivo', models.FileField(upload_to=fornecedores.models.fornecedor_documento_path, verbose_name='Arquivo')),
                ('enviado_em', models.DateTimeField(auto_now_add=True, verbose_name='Enviado em')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('competencia', models.CharField(blank=True, max_length=7, null=True, verbose_name='Competência (MM/AAAA)')),
                ('validade_data', models.DateField(blank=True, null=True, verbose_name='Validade')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('enviado', 'Enviado'), ('aprovado', 'Aprovado'), ('reprovado', 'Reprovado'), ('vencido', 'Vencido')], default='enviado', max_length=20, verbose_name='Status')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versoes', to='fornecedores.fornecedordocumento', verbose_name='Documento')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Versão de Documento de Fornecedor',
                'verbose_name_plural': 'Versões de Documentos de Fornecedor',
                'ordering': ['-enviado_em', '-versao'],
            },
        ),
        migrations.AddIndex(
            model_name='fornecedordocumento',
            index=models.Index(fields=['fornecedor', 'tipo'], name='fornecedore_fornece_1807f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fornecedordocumento',
            unique_together={('fornecedor', 'tipo')},
        ),
        migrations.AddIndex(
            model_name='fornecedordocumentoversao',
            index=models.Index(fields=['documento', 'versao'], name='fornecedore_documen_87eb1a_idx'),
        ),
        migrations.AddIndex(
            model_name='fornecedordocumentoversao',
            index=models.Index(fields=['competencia'], name='fornecedore_compete_23a4c8_idx'),
        ),
        migrations.AddIndex(
            model_name='fornecedordocumentoversao',
            index=models.Index(fields=['status'], name='fornecedore_status_71a506_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fornecedordocumentoversao',
            unique_together={('documento', 'competencia', 'versao')},
        ),
    ]
