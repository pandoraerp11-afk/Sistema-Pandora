# Generated by Django 5.1.5 on 2025-08-15 13:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Chave')),
                ('value', models.JSONField(verbose_name='Valor')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('category', models.CharField(default='general', max_length=50, verbose_name='Categoria')),
                ('is_public', models.BooleanField(default=False)),
                ('is_editable', models.BooleanField(default=True, verbose_name='Editável')),
            ],
            options={
                'verbose_name': 'Configuração do Sistema',
                'verbose_name_plural': 'Configurações do Sistema',
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='AdminActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('action', models.CharField(choices=[('create', 'Criar'), ('update', 'Atualizar'), ('delete', 'Excluir'), ('view', 'Visualizar'), ('backup', 'Backup'), ('restore', 'Restaurar')], max_length=20, verbose_name='Ação')),
                ('resource_type', models.CharField(max_length=50, verbose_name='Tipo de Recurso')),
                ('resource_id', models.CharField(blank=True, max_length=100, verbose_name='ID do Recurso')),
                ('description', models.TextField(verbose_name='Descrição da Atividade')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('before_data', models.JSONField(blank=True, default=dict, verbose_name='Dados (Antes)')),
                ('after_data', models.JSONField(blank=True, default=dict, verbose_name='Dados (Depois)')),
                ('admin_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário Admin')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tenant', verbose_name='Empresa Afetada')),
            ],
            options={
                'verbose_name': 'Atividade Administrativa',
                'verbose_name_plural': 'Atividades Administrativas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Aberto'), ('acknowledged', 'Reconhecido'), ('resolved', 'Resolvido')], default='open', max_length=20)),
                ('alert_type', models.CharField(blank=True, max_length=50)),
                ('source', models.CharField(default='system', max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Alerta do Sistema',
                'verbose_name_plural': 'Alertas do Sistema',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('backup_type', models.CharField(default='full', max_length=20, verbose_name='Tipo de Backup')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('running', 'Executando'), ('completed', 'Concluído'), ('failed', 'Falhou')], default='pending', max_length=20, verbose_name='Status')),
                ('file_path', models.CharField(blank=True, max_length=500, verbose_name='Caminho do Arquivo')),
                ('file_size', models.BigIntegerField(default=0, help_text='Em bytes', verbose_name='Tamanho do Arquivo')),
                ('checksum', models.CharField(blank=True, max_length=64, verbose_name='Checksum')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Iniciado em')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Concluído em')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensagem de Erro')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Backup da Empresa',
                'verbose_name_plural': 'Backups das Empresas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('max_users', models.PositiveIntegerField(default=100, verbose_name='Máximo de Usuários')),
                ('max_storage_mb', models.PositiveIntegerField(default=1024, verbose_name='Máximo de Armazenamento (MB)')),
                ('max_api_requests_per_hour', models.PositiveIntegerField(default=1000, verbose_name='Máx. Requisições de API/hora')),
                ('require_2fa', models.BooleanField(default=False, verbose_name='Exigir Autenticação de 2 Fatores')),
                ('backup_enabled', models.BooleanField(default=True, verbose_name='Backup Habilitado')),
                ('custom_branding', models.JSONField(blank=True, default=dict, verbose_name='Customização de Marca')),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuração da Empresa',
                'verbose_name_plural': 'Configurações das Empresas',
            },
        ),
        migrations.CreateModel(
            name='TenantUsageReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('report_type', models.CharField(max_length=50, verbose_name='Tipo de Relatório')),
                ('period_start', models.DateTimeField(verbose_name='Início do Período')),
                ('period_end', models.DateTimeField(verbose_name='Fim do Período')),
                ('report_data', models.JSONField(default=dict, verbose_name='Dados do Relatório')),
                ('summary', models.JSONField(default=dict, verbose_name='Resumo')),
                ('file_path', models.CharField(blank=True, max_length=500, verbose_name='Caminho do Arquivo')),
                ('file_format', models.CharField(default='json', max_length=10, verbose_name='Formato')),
                ('is_generated', models.BooleanField(default=False, verbose_name='Gerado?')),
                ('generated_at', models.DateTimeField(blank=True, null=True, verbose_name='Gerado em')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_reports', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Relatório de Uso',
                'verbose_name_plural': 'Relatórios de Uso',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('date', models.DateField(verbose_name='Data da Métrica')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Usuários Ativos')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total de Usuários')),
                ('storage_used', models.BigIntegerField(default=0, help_text='Em bytes', verbose_name='Armazenamento Utilizado')),
                ('api_requests', models.PositiveIntegerField(default=0, verbose_name='Requisições de API')),
                ('response_time_avg', models.FloatField(default=0.0, help_text='Em milissegundos', verbose_name='Tempo de Resposta Médio')),
                ('error_rate', models.FloatField(default=0.0, help_text='Percentual de erros', verbose_name='Taxa de Erros')),
                ('uptime', models.FloatField(default=100.0, help_text='Percentual de uptime', verbose_name='Uptime')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Métrica da Empresa',
                'verbose_name_plural': 'Métricas das Empresas',
                'ordering': ['-date', 'tenant'],
                'unique_together': {('tenant', 'date')},
            },
        ),
    ]
