[pytest]
DJANGO_SETTINGS_MODULE = pandora_erp.settings
python_files = tests.py test_*.py *_tests.py
testpaths =
	tests
	core
	shared
	user_management
# Relatório de cobertura padrão (terminal) – pode ser sobreposto via CLI.
# Histórico: iniciamos em 30%, subimos para 50% após cobrir permission_resolver + user_management.twofa.
# Novo alvo incremental: 52% já atingido; manteremos a verificação de limiar APENAS no CI para não atrapalhar execuções parciais locais.
# Para CI, definir a variável de ambiente PYTEST_ADDOPTS (ou equivalente) incluindo: --cov-fail-under=52
# Ex.: PYTEST_ADDOPTS="--cov-fail-under=52" pytest -q
addopts = --cov=core --cov=user_management --cov=shared --cov-report=term-missing
filterwarnings =
	ignore::DeprecationWarning:.*site-packages.*
	ignore::PendingDeprecationWarning:.*site-packages.*
	ignore::UserWarning:weasyprint.*
	ignore::UserWarning:matplotlib.*
	ignore:Converter 'drf_format_suffix' is already registered.*:django.utils.deprecation.RemovedInDjango60Warning
markers =
	slow: testes lentos (>1s) ou que usam recursos externos
	permission: testes focados em permission_resolver
	security: cenários de segurança / rate limit / 2FA
	login: autenticação primária (login, bloqueios, rate limit, backend)
	twofa: cenários de autenticação de duplo fator
	repo_hygiene: sanity checks de limpeza da árvore do repositório
